dialect "intel-x86";

log ("cpulevel: " + value("cpulevel"));
log ("fpulevel: " + value("fpulevel"));

comment "---------------begin prefixes----------------";

if value("cpulevel") >= 186 {;
  log "186 #UD and limit";
  unknown opcode ud;
  opcode limit 15;
} if;
else {;
  log "8086 no-#UD and no-limit";
  unknown opcode silent;
  opcode limit none;
} if;

comment "-----------------begin opcodes----------------";

opcode "ADD"
  (comment "ADD r/m,reg byte")
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (reads reg(b),rm(b))
  (dest=rm(b))
  (param=reg(b))
  (code 0x00 mrm);

opcode "ADD"
  (comment "ADD r/m,reg v")
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (reads reg(v),rm(v))
  (dest=rm(v))
  (param=reg(v))
  (code 0x01 mrm);

opcode "ADD"
  (comment "ADD reg,r/m byte")
  (modifies reg(b),flags(cf,af,sf,zf,pf,of))
  (writes reg(b),flags(cf,af,sf,zf,pf,of))
  (reads rm(b),reg(b))
  (dest=reg(b))
  (param=rm(b))
  (code 0x02 mrm);

opcode "ADD"
  (comment "ADD reg,r/m v")
  (modifies reg(v),flags(cf,af,sf,zf,pf,of))
  (writes reg(v),flags(cf,af,sf,zf,pf,of))
  (reads rm(v),reg(v))
  (dest=reg(v))
  (param=rm(v))
  (code 0x03 mrm);

opcode "ADD"
  (comment "ADD a,imm")
  (reads al)
  (modifies al,flags(cf,af,sf,zf,pf,of))
  (writes al,flags(cf,af,sf,zf,pf,of))
  (dest=al)
  (param=i)
  (code 0x04 i=immediate(b));

opcode "ADD"
  (comment "ADD a,imm")
  (reads av)
  (modifies av,flags(cf,af,sf,zf,pf,of))
  (writes av,flags(cf,af,sf,zf,pf,of))
  (dest=av)
  (param=i)
  (code 0x05 i=immediate(v));

opcode "PUSH"
  (comment "PUSH ES")
  (modifies spv)
  (stack push es)
  (reads es)
  (param=es)
  (code 0x06);

opcode "POP"
  (comment "POP ES")
  (modifies spv)
  (stack pop es)
  (writes es)
  (dest=es)
  (code 0x07);

opcode "OR"
  (comment "OR r/m,reg byte")
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (reads reg(b),rm(b))
  (dest=rm(b))
  (param=reg(b))
  (code 0x08 mrm);

opcode "OR"
  (comment "OR r/m,reg v")
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (reads reg(v),rm(v))
  (dest=rm(v))
  (param=reg(v))
  (code 0x09 mrm);

opcode "OR"
  (comment "OR reg,r/m byte")
  (modifies reg(b),flags(cf,af,sf,zf,pf,of))
  (writes reg(b),flags(cf,af,sf,zf,pf,of))
  (reads rm(b),reg(b))
  (dest=reg(b))
  (param=rm(b))
  (code 0x0A mrm);

opcode "OR"
  (comment "OR reg,r/m v")
  (modifies reg(v),flags(cf,af,sf,zf,pf,of))
  (writes reg(v),flags(cf,af,sf,zf,pf,of))
  (reads rm(v),reg(v))
  (dest=reg(v))
  (param=rm(v))
  (code 0x0B mrm);

opcode "OR"
  (comment "OR a,imm")
  (reads al)
  (modifies al,flags(cf,af,sf,zf,pf,of))
  (writes al,flags(cf,af,sf,zf,pf,of))
  (dest=al)
  (param=i)
  (code 0x0C i=immediate(b));

opcode "OR"
  (comment "OR a,imm")
  (reads av)
  (modifies av,flags(cf,af,sf,zf,pf,of))
  (writes av,flags(cf,af,sf,zf,pf,of))
  (dest=av)
  (param=i)
  (code 0x0D i=immediate(v));

opcode "PUSH"
  (comment "PUSH CS")
  (modifies spv)
  (stack push cs)
  (reads cs)
  (param=cs)
  (code 0x0E);

if value("cpulevel") <= 86
opcode "POP"
  (comment "POP CS")
  (modifies spv)
  (stack pop cs)
  (writes cs)
  (dest=cs)
  (code 0x0F);

opcode "ADC"
  (comment "ADC r/m,reg byte")
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (reads reg(b),rm(b),flags(cf))
  (dest=rm(b))
  (param=reg(b))
  (code 0x10 mrm);

opcode "ADC"
  (comment "ADC r/m,reg v")
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (reads reg(v),rm(v),flags(cf))
  (dest=rm(v))
  (param=reg(v))
  (code 0x11 mrm);

opcode "ADC"
  (comment "ADC reg,r/m byte")
  (modifies reg(b),flags(cf,af,sf,zf,pf,of))
  (writes reg(b),flags(cf,af,sf,zf,pf,of))
  (reads rm(b),reg(b),flags(cf))
  (dest=reg(b))
  (param=rm(b))
  (code 0x12 mrm);

opcode "ADC"
  (comment "ADC reg,r/m v")
  (modifies reg(v),flags(cf,af,sf,zf,pf,of))
  (writes reg(v),flags(cf,af,sf,zf,pf,of))
  (reads rm(v),reg(v),flags(cf))
  (dest=reg(v))
  (param=rm(v))
  (code 0x13 mrm);

opcode "ADC"
  (comment "ADC a,imm")
  (reads al,flags(cf))
  (modifies al,flags(cf,af,sf,zf,pf,of))
  (writes al,flags(cf,af,sf,zf,pf,of))
  (dest=al)
  (param=i)
  (code 0x14 i=immediate(b));

opcode "ADC"
  (comment "ADC a,imm")
  (reads av,flags(cf))
  (modifies av,flags(cf,af,sf,zf,pf,of))
  (writes av,flags(cf,af,sf,zf,pf,of))
  (dest=av)
  (param=i)
  (code 0x15 i=immediate(v));

opcode "PUSH"
  (comment "PUSH SS")
  (modifies spv)
  (stack push ss)
  (reads ss)
  (param=ss)
  (code 0x16);

opcode "POP"
  (comment "POP SS")
  (modifies spv)
  (stack pop ss)
  (writes ss)
  (dest=ss)
  (code 0x17);

opcode "SBB"
  (comment "SBB r/m,reg byte")
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (reads reg(b),rm(b),flags(cf))
  (dest=rm(b))
  (param=reg(b))
  (code 0x18 mrm);

opcode "SBB"
  (comment "SBB r/m,reg v")
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (reads reg(v),rm(v),flags(cf))
  (dest=rm(v))
  (param=reg(v))
  (code 0x19 mrm);

opcode "SBB"
  (comment "SBB reg,r/m byte")
  (modifies reg(b),flags(cf,af,sf,zf,pf,of))
  (writes reg(b),flags(cf,af,sf,zf,pf,of))
  (reads rm(b),reg(b),flags(cf))
  (dest=reg(b))
  (param=rm(b))
  (code 0x1A mrm);

opcode "SBB"
  (comment "SBB reg,r/m v")
  (modifies reg(v),flags(cf,af,sf,zf,pf,of))
  (writes reg(v),flags(cf,af,sf,zf,pf,of))
  (reads rm(v),reg(v),flags(cf))
  (dest=reg(v))
  (param=rm(v))
  (code 0x1B mrm);

opcode "SBB"
  (comment "SBB a,imm")
  (reads al,flags(cf))
  (modifies al,flags(cf,af,sf,zf,pf,of))
  (writes al,flags(cf,af,sf,zf,pf,of))
  (dest=al)
  (param=i)
  (code 0x1C i=immediate(b));

opcode "SBB"
  (comment "SBB a,imm")
  (reads av,flags(cf))
  (modifies av,flags(cf,af,sf,zf,pf,of))
  (writes av,flags(cf,af,sf,zf,pf,of))
  (dest=av)
  (param=i)
  (code 0x1D i=immediate(v));

opcode "PUSH"
  (comment "PUSH DS")
  (modifies spv)
  (stack push ds)
  (reads ds)
  (param=ds)
  (code 0x1E);

opcode "POP"
  (comment "POP DS")
  (modifies spv)
  (stack pop ds)
  (writes ds)
  (dest=ds)
  (code 0x1F);

opcode "AND"
  (comment "AND r/m,reg byte")
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (reads reg(b),rm(b))
  (dest=rm(b))
  (param=reg(b))
  (code 0x20 mrm);

opcode "AND"
  (comment "AND r/m,reg v")
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (reads reg(v),rm(v))
  (dest=rm(v))
  (param=reg(v))
  (code 0x21 mrm);

opcode "AND"
  (comment "AND reg,r/m byte")
  (modifies reg(b),flags(cf,af,sf,zf,pf,of))
  (writes reg(b),flags(cf,af,sf,zf,pf,of))
  (reads rm(b),reg(b))
  (dest=reg(b))
  (param=rm(b))
  (code 0x22 mrm);

opcode "AND"
  (comment "AND reg,r/m v")
  (modifies reg(v),flags(cf,af,sf,zf,pf,of))
  (writes reg(v),flags(cf,af,sf,zf,pf,of))
  (reads rm(v),reg(v))
  (dest=reg(v))
  (param=rm(v))
  (code 0x23 mrm);

opcode "AND"
  (comment "AND a,imm")
  (reads al)
  (modifies al,flags(cf,af,sf,zf,pf,of))
  (writes al,flags(cf,af,sf,zf,pf,of))
  (dest=al)
  (param=i)
  (code 0x24 i=immediate(b));

opcode "AND"
  (comment "AND a,imm")
  (reads av)
  (modifies av,flags(cf,af,sf,zf,pf,of))
  (writes av,flags(cf,af,sf,zf,pf,of))
  (dest=av)
  (param=i)
  (code 0x25 i=immediate(v));

prefix "ES:"
  (comment "Segment override prefix")
  (desc "ES segment override")
  (code 0x26)
  (seg=es);

opcode "DAA"
  (comment "DAA adjust AL after addition")
  (comment "TODO: Not valid in x64 long mode")
  (reads al, flags(cf))
  (modifies al)
  (writes al, flags(cf,af,sf,zf,pf,of))
  (code 0x27);

opcode "SUB"
  (comment "SUB r/m,reg byte")
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (reads reg(b),rm(b))
  (dest=rm(b))
  (param=reg(b))
  (code 0x28 mrm);

opcode "SUB"
  (comment "SUB r/m,reg v")
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (reads reg(v),rm(v))
  (dest=rm(v))
  (param=reg(v))
  (code 0x29 mrm);

opcode "SUB"
  (comment "SUB reg,r/m byte")
  (modifies reg(b),flags(cf,af,sf,zf,pf,of))
  (writes reg(b),flags(cf,af,sf,zf,pf,of))
  (reads rm(b),reg(b))
  (dest=reg(b))
  (param=rm(b))
  (code 0x2A mrm);

opcode "SUB"
  (comment "SUB reg,r/m v")
  (modifies reg(v),flags(cf,af,sf,zf,pf,of))
  (writes reg(v),flags(cf,af,sf,zf,pf,of))
  (reads rm(v),reg(v))
  (dest=reg(v))
  (param=rm(v))
  (code 0x2B mrm);

opcode "SUB"
  (comment "SUB a,imm")
  (reads al)
  (modifies al,flags(cf,af,sf,zf,pf,of))
  (writes al,flags(cf,af,sf,zf,pf,of))
  (dest=al)
  (param=i)
  (code 0x2C i=immediate(b));

opcode "SUB"
  (comment "SUB a,imm")
  (reads av)
  (modifies av,flags(cf,af,sf,zf,pf,of))
  (writes av,flags(cf,af,sf,zf,pf,of))
  (dest=av)
  (param=i)
  (code 0x2D i=immediate(v));

prefix "CS:"
  (comment "Segment override prefix")
  (desc "CS segment override")
  (code 0x2E)
  (seg=cs);

opcode "DAS"
  (comment "DAS adjust AL after subtraction")
  (comment "TODO: Not valid in x64 long mode")
  (reads al, flags(cf))
  (modifies al)
  (writes al, flags(cf,af,sf,zf,pf,of))
  (code 0x2F);

opcode "XOR"
  (comment "XOR r/m,reg byte")
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (reads reg(b),rm(b))
  (dest=rm(b))
  (param=reg(b))
  (code 0x30 mrm);

opcode "XOR"
  (comment "XOR r/m,reg v")
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (reads reg(v),rm(v))
  (dest=rm(v))
  (param=reg(v))
  (code 0x31 mrm);

opcode "XOR"
  (comment "XOR reg,r/m byte")
  (modifies reg(b),flags(cf,af,sf,zf,pf,of))
  (writes reg(b),flags(cf,af,sf,zf,pf,of))
  (reads rm(b),reg(b))
  (dest=reg(b))
  (param=rm(b))
  (code 0x32 mrm);

opcode "XOR"
  (comment "XOR reg,r/m v")
  (modifies reg(v),flags(cf,af,sf,zf,pf,of))
  (writes reg(v),flags(cf,af,sf,zf,pf,of))
  (reads rm(v),reg(v))
  (dest=reg(v))
  (param=rm(v))
  (code 0x33 mrm);

opcode "XOR"
  (comment "XOR a,imm")
  (reads al)
  (modifies al,flags(cf,af,sf,zf,pf,of))
  (writes al,flags(cf,af,sf,zf,pf,of))
  (dest=al)
  (param=i)
  (code 0x34 i=immediate(b));

opcode "XOR"
  (comment "XOR a,imm")
  (reads av)
  (modifies av,flags(cf,af,sf,zf,pf,of))
  (writes av,flags(cf,af,sf,zf,pf,of))
  (dest=av)
  (param=i)
  (code 0x35 i=immediate(v));

prefix "SS:"
  (comment "Segment override prefix")
  (desc "SS segment override")
  (code 0x36)
  (seg=ss);

opcode "AAA"
  (comment "AAA ascii adjust AL after addition")
  (comment "TODO: Not valid in x64 long mode")
  (reads al, flags(af))
  (modifies ax)
  (writes ax, flags(cf,af,of,sf,zf,pf))
  (code 0x37);

opcode "CMP"
  (comment "CMP r/m,reg byte")
  (modifies flags(cf,af,sf,zf,pf,of))
  (writes flags(cf,af,sf,zf,pf,of))
  (reads reg(b))
  (dest=rm(b))
  (param=reg(b))
  (code 0x38 mrm);

opcode "CMP"
  (comment "CMP r/m,reg v")
  (modifies flags(cf,af,sf,zf,pf,of))
  (writes flags(cf,af,sf,zf,pf,of))
  (reads reg(v))
  (dest=rm(v))
  (param=reg(v))
  (code 0x39 mrm);

opcode "CMP"
  (comment "CMP reg,r/m byte")
  (modifies flags(cf,af,sf,zf,pf,of))
  (writes flags(cf,af,sf,zf,pf,of))
  (reads rm(b))
  (dest=reg(b))
  (param=rm(b))
  (code 0x3A mrm);

opcode "CMP"
  (comment "CMP reg,r/m v")
  (modifies flags(cf,af,sf,zf,pf,of))
  (writes flags(cf,af,sf,zf,pf,of))
  (reads rm(v))
  (dest=reg(v))
  (param=rm(v))
  (code 0x3B mrm);

opcode "CMP"
  (comment "CMP a,imm")
  (reads al)
  (modifies flags(cf,af,sf,zf,pf,of))
  (writes flags(cf,af,sf,zf,pf,of))
  (dest=al)
  (param=i)
  (code 0x3C i=immediate(b));

opcode "CMP"
  (comment "CMP a,imm")
  (reads av)
  (modifies flags(cf,af,sf,zf,pf,of))
  (writes flags(cf,af,sf,zf,pf,of))
  (dest=av)
  (param=i)
  (code 0x3D i=immediate(v));

prefix "DS:"
  (comment "Segment override prefix")
  (desc "DS segment override")
  (code 0x3E)
  (seg=ds);

opcode "AAS"
  (comment "AAS ascii adjust AL after subtraction")
  (comment "TODO: Not valid in x64 long mode")
  (reads al, flags(af))
  (modifies ax)
  (writes ax, flags(cf,af,of,sf,zf,pf))
  (code 0x3F);

opcode "INC"
  (comment "INC register, word size(v). reg16 if 16-bit, reg32 if 32-bit")
  (comment "TODO: Not valid in x64 long mode")
  (code a=0x40-0x47 reg=(a&7))
  (reads reg(v))
  (modifies reg(v))
  (writes reg(v))
  (dest=reg(v));

opcode "DEC"
  (comment "DEC register, word size(v). reg16 if 16-bit, reg32 if 32-bit")
  (comment "TODO: Not valid in x64 long mode")
  (code a=0x48-0x4F reg=(a&7))
  (reads reg(v))
  (modifies reg(v))
  (writes reg(v))
  (dest=reg(v));

opcode "PUSH"
  (comment "PUSH register, word size(v). reg16 if 16-bit, reg32 if 32-bit")
  (code a=0x50-0x57 reg=(a&7))
  (reads reg(v))
  (modifies spv)
  (stack push reg(v))
  (param=reg(v));

opcode "POP"
  (comment "POP register, word size(v). reg16 if 16-bit, reg32 if 32-bit")
  (code a=0x58-0x5F reg=(a&7))
  (modifies spv)
  (writes reg(v))
  (stack pop reg(v))
  (dest=reg(v));

if value("cpulevel") >= 386
prefix "FS:"
  (comment "386 Segment override prefix")
  (desc "FS segment override")
  (code 0x64)
  (seg=fs);
else
  log "No FS override";

if value("cpulevel") >= 386
prefix "GS:"
  (comment "386 Segment override prefix")
  (desc "GS segment override")
  (code 0x65)
  (seg=gs);
else
  log "No GS override";

opcode "JO"
  (reads ipv, flags(of))
  (modifies ipv)
  (writes ipv)
  (param=n)
  (code 0x70 p=immediate(sb) n=(ipv+p));

opcode "JNO"
  (reads ipv, flags(of))
  (modifies ipv)
  (writes ipv)
  (param=n)
  (code 0x71 p=immediate(sb) n=(ipv+p));

opcode "JC"
  (reads ipv, flags(cf))
  (modifies ipv)
  (writes ipv)
  (param=n)
  (code 0x72 p=immediate(sb) n=(ipv+p));

opcode "JNC"
  (reads ipv, flags(cf))
  (modifies ipv)
  (writes ipv)
  (param=n)
  (code 0x73 p=immediate(sb) n=(ipv+p));

opcode "JZ"
  (reads ipv, flags(zf))
  (modifies ipv)
  (writes ipv)
  (param=n)
  (code 0x74 p=immediate(sb) n=(ipv+p));

opcode "JNZ"
  (reads ipv, flags(zf))
  (modifies ipv)
  (writes ipv)
  (param=n)
  (code 0x75 p=immediate(sb) n=(ipv+p));

opcode "JNA"
  (reads ipv, flags(zf,cf))
  (modifies ipv)
  (writes ipv)
  (param=n)
  (code 0x76 p=immediate(sb) n=(ipv+p));

opcode "JA"
  (reads ipv, flags(zf,cf))
  (modifies ipv)
  (writes ipv)
  (param=n)
  (code 0x77 p=immediate(sb) n=(ipv+p));

opcode "JS"
  (reads ipv, flags(sf))
  (modifies ipv)
  (writes ipv)
  (param=n)
  (code 0x78 p=immediate(sb) n=(ipv+p));

opcode "JNS"
  (reads ipv, flags(sf))
  (modifies ipv)
  (writes ipv)
  (param=n)
  (code 0x79 p=immediate(sb) n=(ipv+p));

opcode "JP"
  (reads ipv, flags(pf))
  (modifies ipv)
  (writes ipv)
  (param=n)
  (code 0x7A p=immediate(sb) n=(ipv+p));

opcode "JNP"
  (reads ipv, flags(pf))
  (modifies ipv)
  (writes ipv)
  (param=n)
  (code 0x7B p=immediate(sb) n=(ipv+p));

opcode "JL"
  (reads ipv, flags(sf,of))
  (modifies ipv)
  (writes ipv)
  (param=n)
  (code 0x7C p=immediate(sb) n=(ipv+p));

opcode "JNL"
  (reads ipv, flags(sf,of))
  (modifies ipv)
  (writes ipv)
  (param=n)
  (code 0x7D p=immediate(sb) n=(ipv+p));

opcode "JNG"
  (reads ipv, flags(zf,sf))
  (modifies ipv)
  (writes ipv)
  (param=n)
  (code 0x7E p=immediate(sb) n=(ipv+p));

opcode "JG"
  (reads ipv, flags(zf,sf))
  (modifies ipv)
  (writes ipv)
  (param=n)
  (code 0x7F p=immediate(sb) n=(ipv+p));


opcode "ADD"
  (comment "ADD r/m,i")
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (reads rm(b))
  (dest=rm(b))
  (param=i)
  (code 0x80 mrm i=immediate(b) reg(0));

opcode "ADD"
  (comment "ADD r/m,i")
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (reads rm(v))
  (dest=rm(v))
  (param=i)
  (code 0x81 mrm i=immediate(v) reg(0));

opcode "ADD"
  (comment "ADD r/m,i")
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (reads rm(b))
  (dest=rm(b))
  (param=i)
  (code 0x82 mrm i=immediate(b) reg(0));

opcode "ADD"
  (comment "ADD r/m,i")
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (reads rm(v))
  (dest=rm(v))
  (param=i)
  (code 0x83 mrm i=immediate(sb) reg(0));


opcode "OR"
  (comment "OR r/m,i")
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (reads rm(b))
  (dest=rm(b))
  (param=i)
  (code 0x80 mrm i=immediate(b) reg(1));

opcode "OR"
  (comment "OR r/m,i")
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (reads rm(v))
  (dest=rm(v))
  (param=i)
  (code 0x81 mrm i=immediate(v) reg(1));

opcode "OR"
  (comment "OR r/m,i")
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (reads rm(b))
  (dest=rm(b))
  (param=i)
  (code 0x82 mrm i=immediate(b) reg(1));

opcode "OR"
  (comment "OR r/m,i")
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (reads rm(v))
  (dest=rm(v))
  (param=i)
  (code 0x83 mrm i=immediate(sb) reg(1));


opcode "ADC"
  (comment "ADC r/m,i")
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (reads rm(b),flags(cf))
  (dest=rm(b))
  (param=i)
  (code 0x80 mrm i=immediate(b) reg(2));

opcode "ADC"
  (comment "ADC r/m,i")
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (reads rm(v),flags(cf))
  (dest=rm(v))
  (param=i)
  (code 0x81 mrm i=immediate(v) reg(2));

opcode "ADC"
  (comment "ADC r/m,i")
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (reads rm(b),flags(cf))
  (dest=rm(b))
  (param=i)
  (code 0x82 mrm i=immediate(b) reg(2));

opcode "ADC"
  (comment "ADC r/m,i")
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (reads rm(v),flags(cf))
  (dest=rm(v))
  (param=i)
  (code 0x83 mrm i=immediate(sb) reg(2));


opcode "SBB"
  (comment "SBB r/m,i")
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (reads rm(b),flags(cf))
  (dest=rm(b))
  (param=i)
  (code 0x80 mrm i=immediate(b) reg(3));

opcode "SBB"
  (comment "SBB r/m,i")
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (reads rm(v),flags(cf))
  (dest=rm(v))
  (param=i)
  (code 0x81 mrm i=immediate(v) reg(3));

opcode "SBB"
  (comment "SBB r/m,i")
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (reads rm(b),flags(cf))
  (dest=rm(b))
  (param=i)
  (code 0x82 mrm i=immediate(b) reg(3));

opcode "SBB"
  (comment "SBB r/m,i")
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (reads rm(v),flags(cf))
  (dest=rm(v))
  (param=i)
  (code 0x83 mrm i=immediate(sb) reg(3));


opcode "AND"
  (comment "AND r/m,i")
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (reads rm(b))
  (dest=rm(b))
  (param=i)
  (code 0x80 mrm i=immediate(b) reg(4));

opcode "AND"
  (comment "AND r/m,i")
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (reads rm(v))
  (dest=rm(v))
  (param=i)
  (code 0x81 mrm i=immediate(v) reg(4));

opcode "AND"
  (comment "AND r/m,i")
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (reads rm(b))
  (dest=rm(b))
  (param=i)
  (code 0x82 mrm i=immediate(b) reg(4));

opcode "AND"
  (comment "AND r/m,i")
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (reads rm(v))
  (dest=rm(v))
  (param=i)
  (code 0x83 mrm i=immediate(sb) reg(4));


opcode "SUB"
  (comment "SUB r/m,i")
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (reads rm(b))
  (dest=rm(b))
  (param=i)
  (code 0x80 mrm i=immediate(b) reg(5));

opcode "SUB"
  (comment "SUB r/m,i")
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (reads rm(v))
  (dest=rm(v))
  (param=i)
  (code 0x81 mrm i=immediate(v) reg(5));

opcode "SUB"
  (comment "SUB r/m,i")
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (reads rm(b))
  (dest=rm(b))
  (param=i)
  (code 0x82 mrm i=immediate(b) reg(5));

opcode "SUB"
  (comment "SUB r/m,i")
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (reads rm(v))
  (dest=rm(v))
  (param=i)
  (code 0x83 mrm i=immediate(sb) reg(5));


opcode "XOR"
  (comment "XOR r/m,i")
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (reads rm(b))
  (dest=rm(b))
  (param=i)
  (code 0x80 mrm i=immediate(b) reg(6));

opcode "XOR"
  (comment "XOR r/m,i")
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (reads rm(v))
  (dest=rm(v))
  (param=i)
  (code 0x81 mrm i=immediate(v) reg(6));

opcode "XOR"
  (comment "XOR r/m,i")
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (reads rm(b))
  (dest=rm(b))
  (param=i)
  (code 0x82 mrm i=immediate(b) reg(6));

opcode "XOR"
  (comment "XOR r/m,i")
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (reads rm(v))
  (dest=rm(v))
  (param=i)
  (code 0x83 mrm i=immediate(sb) reg(6));


opcode "CMP"
  (comment "CMP r/m,i")
  (modifies flags(cf,af,sf,zf,pf,of))
  (writes flags(cf,af,sf,zf,pf,of))
  (reads rm(b))
  (dest=rm(b))
  (param=i)
  (code 0x80 mrm i=immediate(b) reg(7));

opcode "CMP"
  (comment "CMP r/m,i")
  (modifies flags(cf,af,sf,zf,pf,of))
  (writes flags(cf,af,sf,zf,pf,of))
  (reads rm(v))
  (dest=rm(v))
  (param=i)
  (code 0x81 mrm i=immediate(v) reg(7));

opcode "CMP"
  (comment "CMP r/m,i")
  (modifies flags(cf,af,sf,zf,pf,of))
  (writes flags(cf,af,sf,zf,pf,of))
  (reads rm(b))
  (dest=rm(b))
  (param=i)
  (code 0x82 mrm i=immediate(b) reg(7));

opcode "CMP"
  (comment "CMP r/m,i")
  (modifies flags(cf,af,sf,zf,pf,of))
  (writes flags(cf,af,sf,zf,pf,of))
  (reads rm(v))
  (dest=rm(v))
  (param=i)
  (code 0x83 mrm i=immediate(sb) reg(7));


opcode "TEST"
  (reads reg(b),rm(b))
  (writes flags(of,cf,sf,zf,pf,af))
  (param(0)=reg(b))
  (param(1)=rm(b))
  (code 0x84 mrm);

opcode "TEST"
  (reads reg(v),rm(v))
  (writes flags(of,cf,sf,zf,pf,af))
  (param(0)=reg(v))
  (param(1)=rm(v))
  (code 0x85 mrm);

opcode "XCHG"
  (reads reg(b),rm(b))
  (writes reg(b),rm(b))
  (param=rm(b))
  (dest=reg(b))
  (code 0x86 mrm);

opcode "XCHG"
  (reads reg(v),rm(v))
  (writes reg(v),rm(v))
  (param=rm(v))
  (dest=reg(v))
  (code 0x87 mrm);

opcode "MOV"
  (reads reg(b))
  (writes rm(b))
  (dest=rm(b))
  (param=reg(b))
  (code 0x88 mrm);

opcode "MOV"
  (reads reg(v))
  (writes rm(v))
  (dest=rm(v))
  (param=reg(v))
  (code 0x89 mrm);

opcode "MOV"
  (writes reg(b))
  (reads rm(b))
  (param=rm(b))
  (dest=reg(b))
  (code 0x8A mrm);

opcode "MOV"
  (writes reg(v))
  (reads rm(v))
  (param=rm(v))
  (dest=reg(v))
  (code 0x8B mrm);

opcode "MOV"
  (dest=reg(v))
  (writes reg(v))
  (param=sreg(v))
  (reads sreg(v))
  (code 0x8C mrm);

opcode "LEA"
  (dest=reg(v))
  (writes reg(v))
  (param=rm(v))
  (comment "does not read r/m memory location. it stores the memory location (after arithmetic) into the register")
  (code 0x8D mrm mod(!3));

opcode "MOV"
  (dest=sreg(v))
  (writes sreg(v))
  (param=rm(v))
  (reads rm(v))
  (code 0x8E mrm);

opcode "POP"
  (dest=rm(v))
  (modifies spv)
  (reads far memory(v,ss,spv))
  (writes rm(v))
  (code 0x8F mrm reg(0));

opcode "NOP"
  (comment "Technically, XCHG AX,AX, but that does nothing and nothing else is modified")
  (code 0x90);

opcode "XCHG"
  (code a=0x91-0x97 reg=(a&7))
  (reads av, reg(v))
  (modifies av, reg(v))
  (writes av, reg(v))
  (dest=reg(v))
  (param=av);

opcode "CBW"
  (code 0x98)
  (reads al)
  (modifies av)
  (writes av);

opcode "CWD"
  (code 0x99)
  (reads av)
  (writes dv)
  (modifies dv);

opcode "CALL"
  (comment "call far address, 16:16 or 16:32")
  (writes ipv,cs,spv)
  (stack push cs,ipv)
  (param=p)
  (code 0x9A p=immediate(fpv));

prefix "WAIT"
  (comment "originally an instruction, but used as a prefix later on in the ISA. Often prefixes FPU instructions")
  (code 0x9B)
  (wait=1);

opcode "PUSHF"
  (code 0x9C)
  (reads flags(all))
  (modifies spv)
  (stack push flags(all));

opcode "POPF"
  (code 0x9D)
  (writes flags(all))
  (modifies spv)
  (stack pop flags(all));

opcode "SAHF"
  (code 0x9E)
  (reads ah)
  (writes flags(sf,zf,af,pf,cf));

opcode "LAHF"
  (code 0x9F)
  (reads flags(sf,zf,af,pf,cf))
  (writes ah);

opcode "MOV"
  (writes al)
  (reads memory(b,a))
  (dest=al)
  (param=memory(b,a))
  (code 0xA0 a=immediate(v));

opcode "MOV"
  (writes av)
  (reads memory(v,a))
  (dest=av)
  (param=memory(v,a))
  (code 0xA1 a=immediate(v));

opcode "MOV"
  (writes memory(b,a))
  (reads al)
  (dest=memory(b,a))
  (param=al)
  (code 0xA2 a=immediate(v));

opcode "MOV"
  (writes memory(v,a))
  (reads av)
  (dest=memory(v,a))
  (param=av)
  (code 0xA3 a=immediate(v));

opcode "MOVS"
  (reads far memory(b,seg,siv),siv,div,es)
  (writes far memory(b,es,div),siv,div)
  (modifies siv,div)
  (dest=far memory(b,es,div))
  (param=far memory(b,seg,siv))
  (code 0xA4);

opcode "MOVS"
  (reads far memory(v,seg,siv),siv,div,es)
  (writes far memory(v,es,div),siv,div)
  (modifies siv,div)
  (dest=far memory(v,es,div))
  (param=far memory(v,seg,siv))
  (code 0xA5);

opcode "CMPS"
  (reads far memory(b,es,div),far memory(b,seg,siv),siv,div,es)
  (modifies siv,div,flags(cf,of,sf,zf,af,pf))
  (writes flags(cf,of,sf,zf,af,pf))
  (param(0)=far memory(b,es,div))
  (param(1)=far memory(b,seg,siv))
  (code 0xA6);

opcode "CMPS"
  (reads far memory(v,es,div),far memory(v,seg,siv),siv,div,es)
  (modifies siv,div,flags(cf,of,sf,zf,af,pf))
  (writes flags(cf,of,sf,zf,af,pf))
  (param(0)=far memory(v,es,div))
  (param(1)=far memory(v,seg,siv))
  (code 0xA7);

opcode "TEST"
  (reads al)
  (param(0)=al)
  (param(1)=i)
  (modifies flags(of,cf,sf,zf,pf,af))
  (writes flags(of,cf,sf,zf,pf,af))
  (code 0xA8 i=immediate(b));

opcode "TEST"
  (reads av)
  (param(0)=av)
  (param(1)=i)
  (modifies flags(of,cf,sf,zf,pf,af))
  (writes flags(of,cf,sf,zf,pf,af))
  (code 0xA9 i=immediate(v));

opcode "STOS"
  (reads al,es,div)
  (param=al)
  (writes far memory(b,es,div),div)
  (modifies div)
  (dest=far memory(b,es,div))
  (code 0xAA);

opcode "STOS"
  (reads av,es,div)
  (param=av)
  (writes far memory(v,es,div),div)
  (modifies div)
  (dest=far memory(v,es,div))
  (code 0xAB);

opcode "LODS"
  (reads siv,far memory(b,seg,siv))
  (param=far memory(b,seg,siv))
  (modifies siv)
  (writes al)
  (dest=al)
  (code 0xAC);

opcode "LODS"
  (reads siv,far memory(v,seg,siv))
  (param=far memory(v,seg,siv))
  (modifies siv)
  (writes av)
  (dest=av)
  (code 0xAD);

opcode "SCAS"
  (reads al,es,div,far memory(b,es,div))
  (writes al)
  (modifies div)
  (param(0)=al)
  (param(1)=far memory(b,es,div))
  (code 0xAE);

opcode "SCAS"
  (reads av,es,div,far memory(v,es,div))
  (writes av)
  (modifies div)
  (param(0)=av)
  (param(1)=far memory(v,es,div))
  (code 0xAF);

opcode "MOV"
  (writes reg(b))
  (dest=reg(b))
  (param=i)
  (code a=0xB0-0xB7 i=immediate(b) reg=(a&7));

opcode "MOV"
  (writes reg(v))
  (dest=reg(v))
  (param=i)
  (code a=0xB8-0xBF i=immediate(v) reg=(a&7));

opcode "RET"
  (modifies spv)
  (stack pop ipv)
  (writes ipv)
  (param=c)
  (code 0xC2 c=immediate(w));

opcode "RET"
  (modifies spv)
  (stack pop ipv)
  (writes ipv)
  (code 0xC3);

opcode "LES"
  (dest=reg(v))
  (param=rm(fpv))
  (reads rm(fpv))
  (writes reg(v),es)
  (code 0xC4 mrm mod(!3));

opcode "LDS"
  (dest=reg(v))
  (param=rm(fpv))
  (reads rm(fpv))
  (writes reg(v),ds)
  (code 0xC5 mrm mod(!3));

opcode "MOV"
  (param=i)
  (dest=rm(b))
  (writes rm(b))
  (code 0xC6 mrm i=immediate(b) reg(0));

opcode "MOV"
  (param=i)
  (dest=rm(v))
  (writes rm(v))
  (code 0xC7 mrm i=immediate(v) reg(0));

opcode "RETF"
  (modifies spv)
  (stack pop ipv,cs)
  (writes ipv,cs)
  (param=c)
  (code 0xCA c=immediate(w));

opcode "RETF"
  (modifies spv)
  (stack pop ipv,cs)
  (writes ipv,cs)
  (code 0xCB);

opcode "INT"
  (modifies all)
  (param=3)
  (code 0xCC);

opcode "INT"
  (modifies all)
  (param=i)
  (code 0xCD i=immediate(b));

opcode "INTO"
  (modifies all)
  (reads flags(of))
  (code 0xCE);

opcode "IRET"
  (modifies spv)
  (stack pop ipv,cs,flags(all))
  (writes ipv,cs,flags(all))
  (code 0xCF);


opcode "ROL"
  (reads rm(b))
  (modifies rm(b),flags(of,cf))
  (writes rm(b),flags(of,cf))
  (dest=rm(b))
  (param=1)
  (code 0xD0 mrm reg(0));

opcode "ROL"
  (reads rm(v))
  (modifies rm(v),flags(of,cf))
  (writes rm(v),flags(of,cf))
  (dest=rm(v))
  (param=1)
  (code 0xD1 mrm reg(0));

opcode "ROL"
  (reads rm(b))
  (modifies rm(b),flags(of,cf))
  (writes rm(b),flags(of,cf))
  (dest=rm(b))
  (param=cl)
  (code 0xD2 mrm reg(0));

opcode "ROL"
  (reads rm(v))
  (modifies rm(v),flags(of,cf))
  (writes rm(v),flags(of,cf))
  (dest=rm(v))
  (param=cl)
  (code 0xD3 mrm reg(0));


opcode "ROR"
  (reads rm(b))
  (modifies rm(b),flags(of,cf))
  (writes rm(b),flags(of,cf))
  (dest=rm(b))
  (param=1)
  (code 0xD0 mrm reg(1));

opcode "ROR"
  (reads rm(v))
  (modifies rm(v),flags(of,cf))
  (writes rm(v),flags(of,cf))
  (dest=rm(v))
  (param=1)
  (code 0xD1 mrm reg(1));

opcode "ROR"
  (reads rm(b))
  (modifies rm(b),flags(of,cf))
  (writes rm(b),flags(of,cf))
  (dest=rm(b))
  (param=cl)
  (code 0xD2 mrm reg(1));

opcode "ROR"
  (reads rm(v))
  (modifies rm(v),flags(of,cf))
  (writes rm(v),flags(of,cf))
  (dest=rm(v))
  (param=cl)
  (code 0xD3 mrm reg(1));


opcode "RCL"
  (reads rm(b),flags(cf))
  (modifies rm(b),flags(of,cf))
  (writes rm(b),flags(of,cf))
  (dest=rm(b))
  (param=1)
  (code 0xD0 mrm reg(2));

opcode "RCL"
  (reads rm(v),flags(cf))
  (modifies rm(v),flags(of,cf))
  (writes rm(v),flags(of,cf))
  (dest=rm(v))
  (param=1)
  (code 0xD1 mrm reg(2));

opcode "RCL"
  (reads rm(b),flags(cf))
  (modifies rm(b),flags(of,cf))
  (writes rm(b),flags(of,cf))
  (dest=rm(b))
  (param=cl)
  (code 0xD2 mrm reg(2));

opcode "RCL"
  (reads rm(v),flags(cf))
  (modifies rm(v),flags(of,cf))
  (writes rm(v),flags(of,cf))
  (dest=rm(v))
  (param=cl)
  (code 0xD3 mrm reg(2));


opcode "RCR"
  (reads rm(b),flags(cf))
  (modifies rm(b),flags(of,cf))
  (writes rm(b),flags(of,cf))
  (dest=rm(b))
  (param=1)
  (code 0xD0 mrm reg(3));

opcode "RCR"
  (reads rm(v),flags(cf))
  (modifies rm(v),flags(of,cf))
  (writes rm(v),flags(of,cf))
  (dest=rm(v))
  (param=1)
  (code 0xD1 mrm reg(3));

opcode "RCR"
  (reads rm(b),flags(cf))
  (modifies rm(b),flags(of,cf))
  (writes rm(b),flags(of,cf))
  (dest=rm(b))
  (param=cl)
  (code 0xD2 mrm reg(3));

opcode "RCR"
  (reads rm(v),flags(cf))
  (modifies rm(v),flags(of,cf))
  (writes rm(v),flags(of,cf))
  (dest=rm(v))
  (param=cl)
  (code 0xD3 mrm reg(3));


opcode "SHL"
  (reads rm(b))
  (modifies rm(b),flags(of,cf,sf,zf,pf,af))
  (writes rm(b),flags(of,cf,sf,zf,pf,af))
  (dest=rm(b))
  (param=1)
  (code 0xD0 mrm reg(4));

opcode "SHL"
  (reads rm(v))
  (modifies rm(v),flags(of,cf,sf,zf,pf,af))
  (writes rm(v),flags(of,cf,sf,zf,pf,af))
  (dest=rm(v))
  (param=1)
  (code 0xD1 mrm reg(4));

opcode "SHL"
  (reads rm(b))
  (modifies rm(b),flags(of,cf,sf,zf,pf,af))
  (writes rm(b),flags(of,cf,sf,zf,pf,af))
  (dest=rm(b))
  (param=cl)
  (code 0xD2 mrm reg(4));

opcode "SHL"
  (reads rm(v))
  (modifies rm(v),flags(of,cf,sf,zf,pf,af))
  (writes rm(v),flags(of,cf,sf,zf,pf,af))
  (dest=rm(v))
  (param=cl)
  (code 0xD3 mrm reg(4));


opcode "SHR"
  (reads rm(b))
  (modifies rm(b),flags(of,cf,sf,zf,pf,af))
  (writes rm(b),flags(of,cf,sf,zf,pf,af))
  (dest=rm(b))
  (param=1)
  (code 0xD0 mrm reg(5));

opcode "SHR"
  (reads rm(v))
  (modifies rm(v),flags(of,cf,sf,zf,pf,af))
  (writes rm(v),flags(of,cf,sf,zf,pf,af))
  (dest=rm(v))
  (param=1)
  (code 0xD1 mrm reg(5));

opcode "SHR"
  (reads rm(b))
  (modifies rm(b),flags(of,cf,sf,zf,pf,af))
  (writes rm(b),flags(of,cf,sf,zf,pf,af))
  (dest=rm(b))
  (param=cl)
  (code 0xD2 mrm reg(5));

opcode "SHR"
  (reads rm(v))
  (modifies rm(v),flags(of,cf,sf,zf,pf,af))
  (writes rm(v),flags(of,cf,sf,zf,pf,af))
  (dest=rm(v))
  (param=cl)
  (code 0xD3 mrm reg(5));


opcode "SAR"
  (reads rm(b))
  (modifies rm(b),flags(of,cf,sf,zf,pf,af))
  (writes rm(b),flags(of,cf,sf,zf,pf,af))
  (dest=rm(b))
  (param=1)
  (code 0xD0 mrm reg(7));

opcode "SAR"
  (reads rm(v))
  (modifies rm(v),flags(of,cf,sf,zf,pf,af))
  (writes rm(v),flags(of,cf,sf,zf,pf,af))
  (dest=rm(v))
  (param=1)
  (code 0xD1 mrm reg(7));

opcode "SAR"
  (reads rm(b))
  (modifies rm(b),flags(of,cf,sf,zf,pf,af))
  (writes rm(b),flags(of,cf,sf,zf,pf,af))
  (dest=rm(b))
  (param=cl)
  (code 0xD2 mrm reg(7));

opcode "SAR"
  (reads rm(v))
  (modifies rm(v),flags(of,cf,sf,zf,pf,af))
  (writes rm(v),flags(of,cf,sf,zf,pf,af))
  (dest=rm(v))
  (param=cl)
  (code 0xD3 mrm reg(7));


opcode "AAM"
  (comment "AAD ascii adjust AX before multiply")
  (comment "TODO: Not valid in x64 long mode")
  (reads ax, d)
  (modifies ax)
  (writes ax, flags(sf,zf,pf,of,af,cf))
  (param=d)
  (code 0xD4 d=immediate(b));

opcode "AAD"
  (comment "AAD ascii adjust AX before division")
  (comment "TODO: Not valid in x64 long mode")
  (reads ax, d)
  (modifies ax)
  (writes ax, flags(sf,zf,pf,of,af,cf))
  (param=d)
  (code 0xD5 d=immediate(b));

opcode "SALC"
  (comment "Undocumented Intel opcode")
  (reads flags(cf))
  (modifies al)
  (writes al)
  (code 0xD6);

opcode "XLAT"
  (reads al, bv)
  (modifies al)
  (writes al)
  (code 0xD7);

opcode "FLD1"
  (reads fpu(top))
  (modifies fpu(top))
  (writes fpu(top),st(0))
  (fpu stack push 1)
  (comment "0xD9 0xE8 aka mod==3 reg=5 rm=0")
  (code 0xD9 mrm mod(3) reg(5) rm(0) fpu);

opcode "FLDL2T"
  (reads fpu(top))
  (modifies fpu(top))
  (writes fpu(top),st(0))
  (fpu stack push constant("log2(10)"))
  (comment "0xD9 0xE9 aka mod==3 reg=5 rm=1")
  (code 0xD9 mrm mod(3) reg(5) rm(1) fpu);

opcode "FLDL2E"
  (reads fpu(top))
  (modifies fpu(top))
  (writes fpu(top),st(0))
  (fpu stack push constant("log2(e)"))
  (comment "0xD9 0xEA aka mod==3 reg=5 rm=2")
  (code 0xD9 mrm mod(3) reg(5) rm(2) fpu);

opcode "FLDPI"
  (reads fpu(top))
  (modifies fpu(top))
  (writes fpu(top),st(0))
  (fpu stack push constant("pi"))
  (comment "0xD9 0xEB aka mod==3 reg=5 rm=3")
  (code 0xD9 mrm mod(3) reg(5) rm(3) fpu);

opcode "FLDLG2"
  (reads fpu(top))
  (modifies fpu(top))
  (writes fpu(top),st(0))
  (fpu stack push constant("log10(2)"))
  (comment "0xD9 0xEB aka mod==3 reg=5 rm=4")
  (code 0xD9 mrm mod(3) reg(5) rm(4) fpu);

opcode "FLDLN2"
  (reads fpu(top))
  (modifies fpu(top))
  (writes fpu(top),st(0))
  (fpu stack push constant("loge(2)"))
  (comment "0xD9 0xEB aka mod==3 reg=5 rm=5")
  (code 0xD9 mrm mod(3) reg(5) rm(5) fpu);

opcode "FLDZ"
  (reads fpu(top))
  (modifies fpu(top))
  (writes fpu(top),st(0))
  (fpu stack push 0)
  (comment "0xD9 0xEB aka mod==3 reg=5 rm=6")
  (code 0xD9 mrm mod(3) reg(5) rm(6) fpu);

opcode "LOOPNZ"
  (comment "ipv is evaluated after decoding instruction")
  (comment "--(E)CX, if (E)CX != 0 and !ZF, jump")
  (reads ipv, cv, flags(zf))
  (modifies ipv, cv)
  (writes ipv, cv)
  (param=n)
  (code 0xE0 p=immediate(sb) n=(ipv+p));

opcode "LOOPZ"
  (comment "ipv is evaluated after decoding instruction")
  (comment "--(E)CX, if (E)CX != 0 and ZF, jump")
  (reads ipv, cv, flags(zf))
  (modifies ipv, cv)
  (writes ipv, cv)
  (param=n)
  (code 0xE1 p=immediate(sb) n=(ipv+p));

opcode "LOOP"
  (comment "ipv is evaluated after decoding instruction")
  (comment "if --(E)CX != 0, jump")
  (reads ipv, cv)
  (modifies ipv, cv)
  (writes ipv, cv)
  (param=n)
  (code 0xE2 p=immediate(sb) n=(ipv+p));

opcode "JCXZ"
  (comment "ipv is evaluated after decoding instruction")
  (comment "Jump if (E)CX == 0")
  (reads ipv, cv)
  (modifies ipv)
  (writes ipv)
  (param=n)
  (code 0xE3 p=immediate(sb) n=(ipv+p));

opcode "IN"
  (writes al)
  (dest=al)
  (param=p)
  (code 0xE4 p=immediate(b));

opcode "IN"
  (writes av)
  (dest=av)
  (param=p)
  (code 0xE5 p=immediate(b));

opcode "OUT"
  (reads al)
  (param(0)=p)
  (param(1)=al)
  (code 0xE6 p=immediate(b));

opcode "OUT"
  (reads av)
  (param(0)=p)
  (param(1)=av)
  (code 0xE7 p=immediate(b));

opcode "CALL"
  (comment "ipv is evaluated after decoding CALL instruction")
  (comment "relative address is 16-bit signed or 32-bit signed")
  (stack push ipv)
  (reads ipv)
  (modifies ipv)
  (writes ipv)
  (param=n)
  (code 0xE8 p=immediate(sv) n=(ipv+p));

opcode "JMP"
  (comment "ipv is evaluated after decoding JMP instruction")
  (comment "relative address is 16-bit signed or 32-bit signed")
  (reads ipv)
  (modifies ipv)
  (writes ipv)
  (param=n)
  (code 0xE9 p=immediate(sv) n=(ipv+p));

opcode "JMP"
  (comment "jmp far address, 16:16 or 16:32")
  (writes ipv,cs)
  (param=p)
  (code 0xEA p=immediate(fpv));

opcode "JMP"
  (comment "ipv is evaluated after decoding JMP instruction")
  (reads ipv)
  (modifies ipv)
  (writes ipv)
  (param=n)
  (code 0xEB p=immediate(sb) n=(ipv+p));

opcode "IN"
  (writes al)
  (dest=al)
  (param=dx)
  (code 0xEC);

opcode "IN"
  (writes av)
  (dest=av)
  (param=dx)
  (code 0xED);

opcode "OUT"
  (reads al)
  (param(0)=dx)
  (param(1)=al)
  (code 0xEE);

opcode "OUT"
  (reads av)
  (param(0)=dx)
  (param(1)=av)
  (code 0xEF);

prefix "LOCK"
  (comment "lock prefix")
  (desc "lock prefix")
  (code 0xF0)
  (lock=1);

if value("cpulevel") >= 386 {;
  opcode "INT"
    (comment "INT 1h or ICEBP")
    (desc "INT 1h, or if conditions are right, ICEBP")
    (modifies all)
    (param=1)
    (code 0xF1);
} if;
else {;
  if value("cpulevel") <= 86 {;
    prefix "LOCK"
      (comment "lock prefix (alias on 8086)")
      (desc "lock prefix")
      (code 0xF1)
      (lock=1);
  } if;
} if;

prefix "REPNZ"
  (comment "repeat while not z")
  (desc "rep while not z")
  (code 0xF2)
  (rep=!z);

prefix "REPZ"
  (comment "repeat while z")
  (desc "rep while z")
  (code 0xF3)
  (rep=z);

opcode "HLT"
  (code 0xF4);

opcode "CMC"
  (reads flags(cf))
  (modifies flags(cf))
  (writes flags(cf))
  (code 0xF5);

opcode "TEST"
  (reads rm(b))
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (dest=rm(b))
  (param=i)
  (code 0xF6 mrm i=immediate(b) reg(0));

opcode "TEST"
  (reads rm(v))
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (dest=rm(v))
  (param=i)
  (code 0xF7 mrm i=immediate(v) reg(0));

opcode "NOT"
  (reads rm(b))
  (modifies rm(b))
  (writes rm(b))
  (dest=rm(b))
  (code 0xF6 mrm reg(2));

opcode "NOT"
  (reads rm(v))
  (modifies rm(v))
  (writes rm(v))
  (dest=rm(v))
  (code 0xF7 mrm reg(2));

opcode "NEG"
  (reads rm(b))
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (dest=rm(b))
  (code 0xF6 mrm reg(3));

opcode "NEG"
  (reads rm(v))
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (dest=rm(v))
  (code 0xF7 mrm reg(3));

opcode "MUL"
  (reads rm(b))
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (dest=rm(b))
  (code 0xF6 mrm reg(4));

opcode "MUL"
  (reads rm(v))
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (dest=rm(v))
  (code 0xF7 mrm reg(4));

opcode "IMUL"
  (reads rm(b))
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (dest=rm(b))
  (code 0xF6 mrm reg(5));

opcode "IMUL"
  (reads rm(v))
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (dest=rm(v))
  (code 0xF7 mrm reg(5));

opcode "DIV"
  (reads rm(b))
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (dest=rm(b))
  (code 0xF6 mrm reg(6));

opcode "DIV"
  (reads rm(v))
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (dest=rm(v))
  (code 0xF7 mrm reg(6));

opcode "IDIV"
  (reads rm(b))
  (modifies rm(b),flags(cf,af,sf,zf,pf,of))
  (writes rm(b),flags(cf,af,sf,zf,pf,of))
  (dest=rm(b))
  (code 0xF6 mrm reg(7));

opcode "IDIV"
  (reads rm(v))
  (modifies rm(v),flags(cf,af,sf,zf,pf,of))
  (writes rm(v),flags(cf,af,sf,zf,pf,of))
  (dest=rm(v))
  (code 0xF7 mrm reg(7));

opcode "CLC"
  (writes flags(cf))
  (code 0xF8);

opcode "STC"
  (writes flags(cf))
  (code 0xF9);

opcode "CLI"
  (writes flags(if))
  (code 0xFA);

opcode "STI"
  (writes flags(if))
  (code 0xFB);

opcode "CLD"
  (writes flags(df))
  (code 0xFC);

opcode "STD"
  (writes flags(df))
  (code 0xFD);

opcode "INC"
  (reads rm(b))
  (modifies rm(b),flags(of,sf,zf,af,pf))
  (writes rm(b),flags(of,sf,zf,af,pf))
  (dest=rm(b))
  (code 0xFE mrm reg(0));

opcode "INC"
  (reads rm(v))
  (modifies rm(v),flags(of,sf,zf,af,pf))
  (writes rm(v),flags(of,sf,zf,af,pf))
  (dest=rm(v))
  (code 0xFF mrm reg(0));

opcode "DEC"
  (reads rm(b))
  (modifies rm(b),flags(of,sf,zf,af,pf))
  (writes rm(b),flags(of,sf,zf,af,pf))
  (dest=rm(b))
  (code 0xFE mrm reg(1));

opcode "DEC"
  (reads rm(v))
  (modifies rm(v),flags(of,sf,zf,af,pf))
  (writes rm(v),flags(of,sf,zf,af,pf))
  (dest=rm(v))
  (code 0xFF mrm reg(1));

opcode "CALL"
  (reads rm(v),ipv)
  (modifies ipv,spv)
  (stack push ipv)
  (writes ipv)
  (dest=rm(v))
  (code 0xFF mrm reg(2));

opcode "CALL"
  (reads rm(fpv),ipv)
  (modifies cs,ipv,spv)
  (stack push cs,ipv)
  (writes cs,ipv)
  (dest=rm(fpv))
  (code 0xFF mrm reg(3) mod(!3));

opcode "JMP"
  (reads rm(v),ipv)
  (modifies ipv,spv)
  (stack push ipv)
  (writes cs,ipv)
  (dest=rm(v))
  (code 0xFF mrm reg(4));

opcode "JMP"
  (reads rm(fpv),ipv)
  (modifies cs,ipv,spv)
  (writes cs,ipv)
  (dest=rm(fpv))
  (code 0xFF mrm reg(5) mod(!3));

opcode "PUSH"
  (reads rm(v))
  (stack push rm(v))
  (modifies spv)
  (dest=rm(v))
  (code 0xFF mrm reg(6));

