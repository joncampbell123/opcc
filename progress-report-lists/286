Opcodes by byte:
----------------
         ADD r/m(u8), reg(u8)                                            ; 00 /r
         ADD r/m(uv), reg(uv)                                            ; 01 /r
         ADD reg(u8), r/m(u8)                                            ; 02 /r
         ADD reg(uv), r/m(uv)                                            ; 03 /r
         ADD AL, I                                                       ; 04 I=imm(u8)
         ADD Av, I                                                       ; 05 I=imm(uv)
        PUSH ES                                                          ; 06
         POP ES                                                          ; 07
          OR r/m(u8), reg(u8)                                            ; 08 /r
          OR r/m(uv), reg(uv)                                            ; 09 /r
          OR reg(u8), r/m(u8)                                            ; 0a /r
          OR reg(uv), r/m(uv)                                            ; 0b /r
          OR AL, I                                                       ; 0c I=imm(u8)
          OR Av, I                                                       ; 0d I=imm(uv)
        PUSH CS                                                          ; 0e
        SLDT r/m(uv)                                                     ; 0f 00 /0
         STR r/m(uv)                                                     ; 0f 00 /1
        LLDT r/m(uv)                                                     ; 0f 00 /2
         LTR r/m(uv)                                                     ; 0f 00 /3
        VERR r/m(uv)                                                     ; 0f 00 /4
        VERW r/m(uv)                                                     ; 0f 00 /5
        SGDT r/m(u48)                                                    ; 0f 01 /0=m
        SIDT r/m(u48)                                                    ; 0f 01 /1=m
        LGDT r/m(u48)                                                    ; 0f 01 /2=m
        LIDT r/m(u48)                                                    ; 0f 01 /3=m
        SMSW r/m(uv)                                                     ; 0f 01 /4
        LMSW r/m(uv)                                                     ; 0f 01 /6
         LAR reg(uv), r/m(uv)                                            ; 0f 02 /r
         LSL reg(uv), r/m(uv)                                            ; 0f 03 /r
     LOADALL                                                             ; 0f 05
        CLTS                                                             ; 0f 06 /r
         UD2                                                             ; 0f 0b
         UD2                                                             ; 0f b9
         ADC r/m(u8), reg(u8)                                            ; 10 /r
         ADC r/m(uv), reg(uv)                                            ; 11 /r
         ADC reg(u8), r/m(u8)                                            ; 12 /r
         ADC reg(uv), r/m(uv)                                            ; 13 /r
         ADC AL, I                                                       ; 14 I=imm(u8)
         ADC Av, I                                                       ; 15 I=imm(uv)
        PUSH SS                                                          ; 16
         POP SS                                                          ; 17
         SBB r/m(u8), reg(u8)                                            ; 18 /r
         SBB r/m(uv), reg(uv)                                            ; 19 /r
         SBB reg(u8), r/m(u8)                                            ; 1a /r
         SBB reg(uv), r/m(uv)                                            ; 1b /r
         SBB AL, I                                                       ; 1c I=imm(u8)
         SBB Av, I                                                       ; 1d I=imm(uv)
        PUSH DS                                                          ; 1e
         POP DS                                                          ; 1f
         AND r/m(u8), reg(u8)                                            ; 20 /r
         AND r/m(uv), reg(uv)                                            ; 21 /r
         AND reg(u8), r/m(u8)                                            ; 22 /r
         AND reg(uv), r/m(uv)                                            ; 23 /r
         AND AL, I                                                       ; 24 I=imm(u8)
         AND Av, I                                                       ; 25 I=imm(uv)
         ES:                                                    ; prefix ; 26
         DAA                                                             ; 27
         SUB r/m(u8), reg(u8)                                            ; 28 /r
         SUB r/m(uv), reg(uv)                                            ; 29 /r
         SUB reg(u8), r/m(u8)                                            ; 2a /r
         SUB reg(uv), r/m(uv)                                            ; 2b /r
         SUB AL, I                                                       ; 2c I=imm(u8)
         SUB Av, I                                                       ; 2d I=imm(uv)
         CS:                                                    ; prefix ; 2e
         DAS                                                             ; 2f
         XOR r/m(u8), reg(u8)                                            ; 30 /r
         XOR r/m(uv), reg(uv)                                            ; 31 /r
         XOR reg(u8), r/m(u8)                                            ; 32 /r
         XOR reg(uv), r/m(uv)                                            ; 33 /r
         XOR AL, I                                                       ; 34 I=imm(u8)
         XOR Av, I                                                       ; 35 I=imm(uv)
         SS:                                                    ; prefix ; 36
         AAA                                                             ; 37
         CMP r/m(u8), reg(u8)                                            ; 38 /r
         CMP r/m(uv), reg(uv)                                            ; 39 /r
         CMP reg(u8), r/m(u8)                                            ; 3a /r
         CMP reg(uv), r/m(uv)                                            ; 3b /r
         CMP AL, I                                                       ; 3c I=imm(u8)
         CMP Av, I                                                       ; 3d I=imm(uv)
         DS:                                                    ; prefix ; 3e
         AAS                                                             ; 3f
         INC reg(uv)                                                     ; 40+reg; reg=0-7
         DEC reg(uv)                                                     ; 48+reg; reg=0-7
        PUSH reg(uv)                                                     ; 50+reg; reg=0-7
         POP reg(uv)                                                     ; 58+reg; reg=0-7
       PUSHA                                                             ; 60 /r
        POPA                                                             ; 61 /r
       BOUND reg(uv), r/m(uv)                                            ; 62 /r
        ARPL r/m(uv), reg(uv)                                            ; 63 /r
        PUSH I                                                           ; 68 I=imm(uv)
        IMUL reg(uv), r/m(uv), I                                         ; 69 /r I=imm(iv)
        PUSH I                                                           ; 6a I=imm(i8)
        IMUL reg(uv), r/m(uv), I                                         ; 6b /r I=imm(i8)
         INS AL, u8 [SIV]                                                ; 6c
         INS Av, uv [SIV]                                                ; 6d
        OUTS u8 ES:[DIV], AL                                             ; 6e
        OUTS uv ES:[DIV], Av                                             ; 6f
          JO N                                                           ; 70 P=imm(i8); N=(IPV+P)
         JNO N                                                           ; 71 P=imm(i8); N=(IPV+P)
          JC N                                                           ; 72 P=imm(i8); N=(IPV+P)
         JNC N                                                           ; 73 P=imm(i8); N=(IPV+P)
          JZ N                                                           ; 74 P=imm(i8); N=(IPV+P)
         JNZ N                                                           ; 75 P=imm(i8); N=(IPV+P)
         JNA N                                                           ; 76 P=imm(i8); N=(IPV+P)
          JA N                                                           ; 77 P=imm(i8); N=(IPV+P)
          JS N                                                           ; 78 P=imm(i8); N=(IPV+P)
         JNS N                                                           ; 79 P=imm(i8); N=(IPV+P)
          JP N                                                           ; 7a P=imm(i8); N=(IPV+P)
         JNP N                                                           ; 7b P=imm(i8); N=(IPV+P)
          JL N                                                           ; 7c P=imm(i8); N=(IPV+P)
         JNL N                                                           ; 7d P=imm(i8); N=(IPV+P)
         JNG N                                                           ; 7e P=imm(i8); N=(IPV+P)
          JG N                                                           ; 7f P=imm(i8); N=(IPV+P)
         ADD r/m(u8), I                                                  ; 80 /0 I=imm(u8)
          OR r/m(u8), I                                                  ; 80 /1 I=imm(u8)
         ADC r/m(u8), I                                                  ; 80 /2 I=imm(u8)
         SBB r/m(u8), I                                                  ; 80 /3 I=imm(u8)
         AND r/m(u8), I                                                  ; 80 /4 I=imm(u8)
         SUB r/m(u8), I                                                  ; 80 /5 I=imm(u8)
         XOR r/m(u8), I                                                  ; 80 /6 I=imm(u8)
         CMP r/m(u8), I                                                  ; 80 /7 I=imm(u8)
         ADD r/m(uv), I                                                  ; 81 /0 I=imm(uv)
          OR r/m(uv), I                                                  ; 81 /1 I=imm(uv)
         ADC r/m(uv), I                                                  ; 81 /2 I=imm(uv)
         SBB r/m(uv), I                                                  ; 81 /3 I=imm(uv)
         AND r/m(uv), I                                                  ; 81 /4 I=imm(uv)
         SUB r/m(uv), I                                                  ; 81 /5 I=imm(uv)
         XOR r/m(uv), I                                                  ; 81 /6 I=imm(uv)
         CMP r/m(uv), I                                                  ; 81 /7 I=imm(uv)
         ADD r/m(u8), I                                                  ; 82 /0 I=imm(u8)
          OR r/m(u8), I                                                  ; 82 /1 I=imm(u8)
         ADC r/m(u8), I                                                  ; 82 /2 I=imm(u8)
         SBB r/m(u8), I                                                  ; 82 /3 I=imm(u8)
         AND r/m(u8), I                                                  ; 82 /4 I=imm(u8)
         SUB r/m(u8), I                                                  ; 82 /5 I=imm(u8)
         XOR r/m(u8), I                                                  ; 82 /6 I=imm(u8)
         CMP r/m(u8), I                                                  ; 82 /7 I=imm(u8)
         ADD r/m(uv), I                                                  ; 83 /0 I=imm(i8)
          OR r/m(uv), I                                                  ; 83 /1 I=imm(i8)
         ADC r/m(uv), I                                                  ; 83 /2 I=imm(i8)
         SBB r/m(uv), I                                                  ; 83 /3 I=imm(i8)
         AND r/m(uv), I                                                  ; 83 /4 I=imm(i8)
         SUB r/m(uv), I                                                  ; 83 /5 I=imm(i8)
         XOR r/m(uv), I                                                  ; 83 /6 I=imm(i8)
         CMP r/m(uv), I                                                  ; 83 /7 I=imm(i8)
        TEST reg(u8), r/m(u8)                                            ; 84 /r
        TEST reg(uv), r/m(uv)                                            ; 85 /r
        XCHG reg(u8), r/m(u8)                                            ; 86 /r
        XCHG reg(uv), r/m(uv)                                            ; 87 /r
         MOV r/m(u8), reg(u8)                                            ; 88 /r
         MOV r/m(uv), reg(uv)                                            ; 89 /r
         MOV reg(u8), r/m(u8)                                            ; 8a /r
         MOV reg(uv), r/m(uv)                                            ; 8b /r
         MOV reg(uv), segreg(uv)                                         ; 8c /r
         LEA reg(uv), r/m(uv)                                            ; 8d /r=m
         MOV segreg(uv), r/m(uv)                                         ; 8e /r
         POP r/m(uv)                                                     ; 8f /0
         NOP                                                             ; 90
        XCHG reg(uv), Av                                                 ; 90+reg; reg=1-7
         CBW                                                             ; 98
         CWD                                                             ; 99
        CALL P                                                           ; 9a P=imm(farptr)
        WAIT                                                    ; prefix ; 9b
       FCLEX                                                             ; 9b db e2
       FINIT                                                             ; 9b db e3
       PUSHF                                                             ; 9c
        POPF                                                             ; 9d
        SAHF                                                             ; 9e
        LAHF                                                             ; 9f
         MOV AL, u8 [A]                                                  ; a0 A=imm(uv)
         MOV Av, uv [A]                                                  ; a1 A=imm(uv)
         MOV u8 [A], AL                                                  ; a2 A=imm(uv)
         MOV uv [A], Av                                                  ; a3 A=imm(uv)
        MOVS u8 ES:[DIV], u8 [SIV]                                       ; a4
        MOVS uv ES:[DIV], uv [SIV]                                       ; a5
        CMPS u8 ES:[DIV], u8 [SIV]                                       ; a6
        CMPS uv ES:[DIV], uv [SIV]                                       ; a7
        TEST AL, I                                                       ; a8 I=imm(u8)
        TEST Av, I                                                       ; a9 I=imm(uv)
        STOS u8 ES:[DIV], AL                                             ; aa
        STOS uv ES:[DIV], Av                                             ; ab
        LODS AL, u8 [SIV]                                                ; ac
        LODS Av, uv [SIV]                                                ; ad
        SCAS AL, u8 ES:[DIV]                                             ; ae
        SCAS Av, uv ES:[DIV]                                             ; af
         MOV reg(u8), I                                                  ; b0+reg; reg=0-7
         MOV reg(uv), I                                                  ; b8+reg; reg=0-7
         ROL r/m(u8), I                                                  ; c0 /0 I=imm(u8)
         ROR r/m(u8), I                                                  ; c0 /1 I=imm(u8)
         RCL r/m(u8), I                                                  ; c0 /2 I=imm(u8)
         RCR r/m(u8), I                                                  ; c0 /3 I=imm(u8)
         SHL r/m(u8), I                                                  ; c0 /4 I=imm(u8)
         SHR r/m(u8), I                                                  ; c0 /5 I=imm(u8)
         SAR r/m(u8), I                                                  ; c0 /7 I=imm(u8)
         ROL r/m(uv), I                                                  ; c1 /0 I=imm(uv)
         ROR r/m(uv), I                                                  ; c1 /1 I=imm(uv)
         RCL r/m(uv), I                                                  ; c1 /2 I=imm(uv)
         RCR r/m(uv), I                                                  ; c1 /3 I=imm(uv)
         SHL r/m(uv), I                                                  ; c1 /4 I=imm(uv)
         SHR r/m(uv), I                                                  ; c1 /5 I=imm(uv)
         SAR r/m(uv), I                                                  ; c1 /7 I=imm(uv)
         RET C                                                           ; c2 C=imm(u16)
         RET                                                             ; c3
         LES reg(uv), r/m(farptr)                                        ; c4 /r=m
         LDS reg(uv), r/m(farptr)                                        ; c5 /r=m
         MOV r/m(u8), I                                                  ; c6 /0 I=imm(u8)
         MOV r/m(uv), I                                                  ; c7 /0 I=imm(uv)
       ENTER A, L                                                        ; c8 A=imm(u16) L=imm(u8)
       LEAVE                                                             ; c9
        RETF C                                                           ; ca C=imm(u16)
        RETF                                                             ; cb
         INT 3                                                           ; cc
         INT I                                                           ; cd I=imm(u8)
        INTO                                                             ; ce
        IRET                                                             ; cf
         ROL r/m(u8), 1                                                  ; d0 /0
         ROR r/m(u8), 1                                                  ; d0 /1
         RCL r/m(u8), 1                                                  ; d0 /2
         RCR r/m(u8), 1                                                  ; d0 /3
         SHL r/m(u8), 1                                                  ; d0 /4
         SHR r/m(u8), 1                                                  ; d0 /5
         SAR r/m(u8), 1                                                  ; d0 /7
         ROL r/m(uv), 1                                                  ; d1 /0
         ROR r/m(uv), 1                                                  ; d1 /1
         RCL r/m(uv), 1                                                  ; d1 /2
         RCR r/m(uv), 1                                                  ; d1 /3
         SHL r/m(uv), 1                                                  ; d1 /4
         SHR r/m(uv), 1                                                  ; d1 /5
         SAR r/m(uv), 1                                                  ; d1 /7
         ROL r/m(u8), CL                                                 ; d2 /0
         ROR r/m(u8), CL                                                 ; d2 /1
         RCL r/m(u8), CL                                                 ; d2 /2
         RCR r/m(u8), CL                                                 ; d2 /3
         SHL r/m(u8), CL                                                 ; d2 /4
         SHR r/m(u8), CL                                                 ; d2 /5
         SAR r/m(u8), CL                                                 ; d2 /7
         ROL r/m(uv), CL                                                 ; d3 /0
         ROR r/m(uv), CL                                                 ; d3 /1
         RCL r/m(uv), CL                                                 ; d3 /2
         RCR r/m(uv), CL                                                 ; d3 /3
         SHL r/m(uv), CL                                                 ; d3 /4
         SHR r/m(uv), CL                                                 ; d3 /5
         SAR r/m(uv), CL                                                 ; d3 /7
         AAM D                                                           ; d4 D=imm(u8)
         AAD D                                                           ; d5 D=imm(u8)
        SALC                                                             ; d6
        XLAT                                                             ; d7
        FADD st(0), r/m(f32)                                             ; d8 /0=m
        FMUL st(0), r/m(f32)                                             ; d8 /1=m
        FCOM st(0), r/m(f32)                                             ; d8 /2=m
       FCOMP st(0), r/m(f32)                                             ; d8 /3=m
        FSUB st(0), r/m(f32)                                             ; d8 /4=m
       FSUBR st(0), r/m(f32)                                             ; d8 /5=m
        FDIV st(0), r/m(f32)                                             ; d8 /6=m
       FDIVR st(0), r/m(f32)                                             ; d8 /7=m
        FADD st(0), st(i)                                                ; d8 c0+i; i=0-7
        FMUL st(0), st(i)                                                ; d8 c8+i; i=0-7
        FCOM st(0), st(i)                                                ; d8 d0+i; i=0-7
       FCOMP st(0), st(i)                                                ; d8 d8+i; i=0-7
        FSUB st(0), st(i)                                                ; d8 e0+i; i=0-7
       FSUBR st(0), st(i)                                                ; d8 e8+i; i=0-7
        FDIV st(0), st(i)                                                ; d8 f0+i; i=0-7
       FDIVR st(0), st(i)                                                ; d8 f8+i; i=0-7
         FLD st(0), r/m(f32)                                             ; d9 /0=m
         FST r/m(f32), st(0)                                             ; d9 /2=m
        FSTP r/m(f32), st(0)                                             ; d9 /3=m
      FLDENV r/m(f87env)                                                 ; d9 /4=m
       FLDCW r/m(u16)                                                    ; d9 /5=m
      FSTENV r/m(f87env)                                                 ; d9 /6=m
       FSTCW r/m(u16)                                                    ; d9 /7=m
         FLD st(0), st(i)                                                ; d9 c0+i; i=0-7
        FXCH st(0), st(i)                                                ; d9 c8+i; i=0-7
        FNOP                                                             ; d9 d0
        FCHS st(0), st(0)                                                ; d9 e0
        FABS st(0), st(0)                                                ; d9 e1
        FTST st(0)                                                       ; d9 e4
        FXAM st(0)                                                       ; d9 e5
        FLD1 st(0), 1                                                    ; d9 e8
      FLDL2T st(0), const("log2(10)")                                    ; d9 e9
      FLDL2E st(0), const("log2(e)")                                     ; d9 ea
       FLDPI st(0), const("pi")                                          ; d9 eb
      FLDLG2 st(0), const("log10(2)")                                    ; d9 ec
      FLDLN2 st(0), const("loge(2)")                                     ; d9 ed
        FLDZ st(0), 0                                                    ; d9 ee
       F2XM1 st(0), st(0)                                                ; d9 f0
       FYL2X st(0), st(0), st(1)                                         ; d9 f1
       FPTAN st(0), st(0)                                                ; d9 f2
      FPATAN st(1), st(0), st(1)                                         ; d9 f3
     FXTRACT st(0), st(0), st(1)                                         ; d9 f4
     FDECSTP                                                             ; d9 f6
     FINCSTP                                                             ; d9 f7
       FPREM st(0), st(0), st(1)                                         ; d9 f8
     FYL2XP1 st(0), st(0), st(1)                                         ; d9 f9
       FSQRT st(0), st(0)                                                ; d9 fa
     FRNDINT st(0), st(0)                                                ; d9 fc
      FSCALE st(0), st(0), st(1)                                         ; d9 fd
       FIADD st(0), r/m(i32)                                             ; da /0=m
       FIMUL st(0), r/m(i32)                                             ; da /1=m
       FICOM st(0), r/m(i32)                                             ; da /2=m
      FICOMP st(0), r/m(i32)                                             ; da /3=m
       FISUB st(0), r/m(i32)                                             ; da /4=m
      FISUBR st(0), r/m(i32)                                             ; da /5=m
       FIDIV st(0), r/m(i32)                                             ; da /6=m
      FIDIVR st(0), r/m(i32)                                             ; da /7=m
        FADD st(0), st(i)                                                ; da c0+i; i=0-7
        FMUL st(0), st(i)                                                ; da c8+i; i=0-7
        FSUB st(0), st(i)                                                ; da e0+i; i=0-7
       FSUBR st(0), st(i)                                                ; da e8+i; i=0-7
        FDIV st(0), st(i)                                                ; da f0+i; i=0-7
       FDIVR st(0), st(i)                                                ; da f8+i; i=0-7
        FILD st(0), r/m(i32)                                             ; db /0=m
        FIST r/m(i32), st(0)                                             ; db /2=m
       FISTP r/m(i32), st(0)                                             ; db /3=m
         FLD st(0), r/m(f80)                                             ; db /5=m
        FSTP r/m(f80), st(0)                                             ; db /7=m
        FENI                                                             ; db e0
       FDISI                                                             ; db e1
      FNCLEX                                                             ; db e2
      FNINIT                                                             ; db e3
      FSETPM                                                             ; db e4
        FADD st(0), r/m(f64)                                             ; dc /0=m
        FMUL st(0), r/m(f64)                                             ; dc /1=m
        FCOM st(0), r/m(f64)                                             ; dc /2=m
       FCOMP st(0), r/m(f64)                                             ; dc /3=m
        FSUB st(0), r/m(f64)                                             ; dc /4=m
       FSUBR st(0), r/m(f64)                                             ; dc /5=m
        FDIV st(0), r/m(f64)                                             ; dc /6=m
       FDIVR st(0), r/m(f64)                                             ; dc /7=m
        FADD st(i), st(0)                                                ; dc c0+i; i=0-7
        FMUL st(i), st(0)                                                ; dc c8+i; i=0-7
        FSUB st(i), st(0)                                                ; dc e0+i; i=0-7
       FSUBR st(i), st(0)                                                ; dc e8+i; i=0-7
        FDIV st(i), st(0)                                                ; dc f0+i; i=0-7
       FDIVR st(i), st(0)                                                ; dc f8+i; i=0-7
         FLD st(0), r/m(f64)                                             ; dd /0=m
         FST r/m(f64), st(0)                                             ; dd /2=m
        FSTP r/m(f64), st(0)                                             ; dd /3=m
      FRSTOR r/m(f87state)                                               ; dd /4=m
       FSAVE r/m(f87state)                                               ; dd /6=m
       FSTSW r/m(u16)                                                    ; dd /7=m
       FFREE st(i)                                                       ; dd c0+i; i=0-7
         FST st(i), st(0)                                                ; dd d0+i; i=0-7
        FSTP st(i), st(0)                                                ; dd d8+i; i=0-7
       FIADD st(0), r/m(i16)                                             ; de /0=m
       FIMUL st(0), r/m(i16)                                             ; de /1=m
       FICOM st(0), r/m(i16)                                             ; de /2=m
      FICOMP st(0), r/m(i16)                                             ; de /3=m
       FISUB st(0), r/m(i16)                                             ; de /4=m
      FISUBR st(0), r/m(i16)                                             ; de /5=m
       FIDIV st(0), r/m(i16)                                             ; de /6=m
      FIDIVR st(0), r/m(i16)                                             ; de /7=m
        FADD st(i), st(0)                                                ; de c0+i; i=0-7
        FMUL st(i), st(0)                                                ; de c8+i; i=0-7
      FCOMPP st(0), st(1)                                                ; de d9
        FSUB st(i), st(0)                                                ; de e0+i; i=0-7
       FSUBR st(i), st(0)                                                ; de e8+i; i=0-7
        FDIV st(i), st(0)                                                ; de f0+i; i=0-7
       FDIVR st(i), st(0)                                                ; de f8+i; i=0-7
        FILD st(0), r/m(i16)                                             ; df /0=m
        FIST r/m(i16), st(0)                                             ; df /2=m
       FISTP r/m(i16), st(0)                                             ; df /3=m
        FBLD st(0), r/m(fbcd)                                            ; df /4=m
        FILD st(0), r/m(i64)                                             ; df /5=m
       FBSTP r/m(fbcd), st(0)                                            ; df /6=m
       FISTP r/m(i64), st(0)                                             ; df /7=m
      LOOPNZ N                                                           ; e0 P=imm(i8); N=(IPV+P)
       LOOPZ N                                                           ; e1 P=imm(i8); N=(IPV+P)
        LOOP N                                                           ; e2 P=imm(i8); N=(IPV+P)
        JCXZ N                                                           ; e3 P=imm(i8); N=(IPV+P)
          IN AL, P                                                       ; e4 P=imm(u8)
          IN Av, P                                                       ; e5 P=imm(u8)
         OUT P, AL                                                       ; e6 P=imm(u8)
         OUT P, Av                                                       ; e7 P=imm(u8)
        CALL N                                                           ; e8 P=imm(iv); N=(IPV+P)
         JMP N                                                           ; e9 P=imm(iv); N=(IPV+P)
         JMP P                                                           ; ea P=imm(farptr)
         JMP N                                                           ; eb P=imm(i8); N=(IPV+P)
          IN AL, DX                                                      ; ec
          IN Av, DX                                                      ; ed
         OUT DX, AL                                                      ; ee
         OUT DX, Av                                                      ; ef
        LOCK                                                    ; prefix ; f0
       REPNZ                                                    ; prefix ; f2
        REPZ                                                    ; prefix ; f3
         HLT                                                             ; f4
         CMC                                                             ; f5
        TEST r/m(u8), I                                                  ; f6 /0 I=imm(u8)
         NOT r/m(u8)                                                     ; f6 /2
         NEG r/m(u8)                                                     ; f6 /3
         MUL r/m(u8)                                                     ; f6 /4
        IMUL r/m(u8)                                                     ; f6 /5
         DIV r/m(u8)                                                     ; f6 /6
        IDIV r/m(u8)                                                     ; f6 /7
        TEST r/m(uv), I                                                  ; f7 /0 I=imm(uv)
         NOT r/m(uv)                                                     ; f7 /2
         NEG r/m(uv)                                                     ; f7 /3
         MUL r/m(uv)                                                     ; f7 /4
        IMUL r/m(uv)                                                     ; f7 /5
         DIV r/m(uv)                                                     ; f7 /6
        IDIV r/m(uv)                                                     ; f7 /7
         CLC                                                             ; f8
         STC                                                             ; f9
         CLI                                                             ; fa
         STI                                                             ; fb
         CLD                                                             ; fc
         STD                                                             ; fd
         INC r/m(u8)                                                     ; fe /0
         DEC r/m(u8)                                                     ; fe /1
         INC r/m(uv)                                                     ; ff /0
         DEC r/m(uv)                                                     ; ff /1
        CALL r/m(uv)                                                     ; ff /2
        CALL r/m(farptr)                                                 ; ff /3=m
         JMP r/m(uv)                                                     ; ff /4
         JMP r/m(farptr)                                                 ; ff /5=m
        PUSH r/m(uv)                                                     ; ff /6

Opcodes by name:
----------------
         AAA                                                             ; 37
         AAD D                                                           ; d5 D=imm(u8)
         AAM D                                                           ; d4 D=imm(u8)
         AAS                                                             ; 3f
         ADC r/m(u8), reg(u8)                                            ; 10 /r
         ADC r/m(uv), reg(uv)                                            ; 11 /r
         ADC reg(u8), r/m(u8)                                            ; 12 /r
         ADC reg(uv), r/m(uv)                                            ; 13 /r
         ADC AL, I                                                       ; 14 I=imm(u8)
         ADC Av, I                                                       ; 15 I=imm(uv)
         ADC r/m(u8), I                                                  ; 80 /2 I=imm(u8)
         ADC r/m(uv), I                                                  ; 81 /2 I=imm(uv)
         ADC r/m(u8), I                                                  ; 82 /2 I=imm(u8)
         ADC r/m(uv), I                                                  ; 83 /2 I=imm(i8)
         ADD r/m(u8), reg(u8)                                            ; 00 /r
         ADD r/m(uv), reg(uv)                                            ; 01 /r
         ADD reg(u8), r/m(u8)                                            ; 02 /r
         ADD reg(uv), r/m(uv)                                            ; 03 /r
         ADD AL, I                                                       ; 04 I=imm(u8)
         ADD Av, I                                                       ; 05 I=imm(uv)
         ADD r/m(u8), I                                                  ; 80 /0 I=imm(u8)
         ADD r/m(uv), I                                                  ; 81 /0 I=imm(uv)
         ADD r/m(u8), I                                                  ; 82 /0 I=imm(u8)
         ADD r/m(uv), I                                                  ; 83 /0 I=imm(i8)
         AND r/m(u8), reg(u8)                                            ; 20 /r
         AND r/m(uv), reg(uv)                                            ; 21 /r
         AND reg(u8), r/m(u8)                                            ; 22 /r
         AND reg(uv), r/m(uv)                                            ; 23 /r
         AND AL, I                                                       ; 24 I=imm(u8)
         AND Av, I                                                       ; 25 I=imm(uv)
         AND r/m(u8), I                                                  ; 80 /4 I=imm(u8)
         AND r/m(uv), I                                                  ; 81 /4 I=imm(uv)
         AND r/m(u8), I                                                  ; 82 /4 I=imm(u8)
         AND r/m(uv), I                                                  ; 83 /4 I=imm(i8)
        ARPL r/m(uv), reg(uv)                                            ; 63 /r
       BOUND reg(uv), r/m(uv)                                            ; 62 /r
        CALL P                                                           ; 9a P=imm(farptr)
        CALL N                                                           ; e8 P=imm(iv); N=(IPV+P)
        CALL r/m(uv)                                                     ; ff /2
        CALL r/m(farptr)                                                 ; ff /3=m
         CBW                                                             ; 98
         CLC                                                             ; f8
         CLD                                                             ; fc
         CLI                                                             ; fa
        CLTS                                                             ; 0f 06 /r
         CMC                                                             ; f5
         CMP r/m(u8), reg(u8)                                            ; 38 /r
         CMP r/m(uv), reg(uv)                                            ; 39 /r
         CMP reg(u8), r/m(u8)                                            ; 3a /r
         CMP reg(uv), r/m(uv)                                            ; 3b /r
         CMP AL, I                                                       ; 3c I=imm(u8)
         CMP Av, I                                                       ; 3d I=imm(uv)
         CMP r/m(u8), I                                                  ; 80 /7 I=imm(u8)
         CMP r/m(uv), I                                                  ; 81 /7 I=imm(uv)
         CMP r/m(u8), I                                                  ; 82 /7 I=imm(u8)
         CMP r/m(uv), I                                                  ; 83 /7 I=imm(i8)
        CMPS u8 ES:[DIV], u8 [SIV]                                       ; a6
        CMPS uv ES:[DIV], uv [SIV]                                       ; a7
         CS:                                                    ; prefix ; 2e
         CWD                                                             ; 99
         DAA                                                             ; 27
         DAS                                                             ; 2f
         DEC reg(uv)                                                     ; 48+reg; reg=0-7
         DEC r/m(u8)                                                     ; fe /1
         DEC r/m(uv)                                                     ; ff /1
         DIV r/m(u8)                                                     ; f6 /6
         DIV r/m(uv)                                                     ; f7 /6
         DS:                                                    ; prefix ; 3e
       ENTER A, L                                                        ; c8 A=imm(u16) L=imm(u8)
         ES:                                                    ; prefix ; 26
       F2XM1 st(0), st(0)                                                ; d9 f0
        FABS st(0), st(0)                                                ; d9 e1
        FADD st(0), r/m(f32)                                             ; d8 /0=m
        FADD st(0), st(i)                                                ; d8 c0+i; i=0-7
        FADD st(0), st(i)                                                ; da c0+i; i=0-7
        FADD st(0), r/m(f64)                                             ; dc /0=m
        FADD st(i), st(0)                                                ; dc c0+i; i=0-7
        FADD st(i), st(0)                                                ; de c0+i; i=0-7
        FBLD st(0), r/m(fbcd)                                            ; df /4=m
       FBSTP r/m(fbcd), st(0)                                            ; df /6=m
        FCHS st(0), st(0)                                                ; d9 e0
       FCLEX                                                             ; 9b db e2
        FCOM st(0), r/m(f32)                                             ; d8 /2=m
        FCOM st(0), st(i)                                                ; d8 d0+i; i=0-7
        FCOM st(0), r/m(f64)                                             ; dc /2=m
       FCOMP st(0), r/m(f32)                                             ; d8 /3=m
       FCOMP st(0), st(i)                                                ; d8 d8+i; i=0-7
       FCOMP st(0), r/m(f64)                                             ; dc /3=m
      FCOMPP st(0), st(1)                                                ; de d9
     FDECSTP                                                             ; d9 f6
       FDISI                                                             ; db e1
        FDIV st(0), r/m(f32)                                             ; d8 /6=m
        FDIV st(0), st(i)                                                ; d8 f0+i; i=0-7
        FDIV st(0), st(i)                                                ; da f0+i; i=0-7
        FDIV st(0), r/m(f64)                                             ; dc /6=m
        FDIV st(i), st(0)                                                ; dc f0+i; i=0-7
        FDIV st(i), st(0)                                                ; de f0+i; i=0-7
       FDIVR st(0), r/m(f32)                                             ; d8 /7=m
       FDIVR st(0), st(i)                                                ; d8 f8+i; i=0-7
       FDIVR st(0), st(i)                                                ; da f8+i; i=0-7
       FDIVR st(0), r/m(f64)                                             ; dc /7=m
       FDIVR st(i), st(0)                                                ; dc f8+i; i=0-7
       FDIVR st(i), st(0)                                                ; de f8+i; i=0-7
        FENI                                                             ; db e0
       FFREE st(i)                                                       ; dd c0+i; i=0-7
       FIADD st(0), r/m(i32)                                             ; da /0=m
       FIADD st(0), r/m(i16)                                             ; de /0=m
       FICOM st(0), r/m(i32)                                             ; da /2=m
       FICOM st(0), r/m(i16)                                             ; de /2=m
      FICOMP st(0), r/m(i32)                                             ; da /3=m
      FICOMP st(0), r/m(i16)                                             ; de /3=m
       FIDIV st(0), r/m(i32)                                             ; da /6=m
       FIDIV st(0), r/m(i16)                                             ; de /6=m
      FIDIVR st(0), r/m(i32)                                             ; da /7=m
      FIDIVR st(0), r/m(i16)                                             ; de /7=m
        FILD st(0), r/m(i32)                                             ; db /0=m
        FILD st(0), r/m(i16)                                             ; df /0=m
        FILD st(0), r/m(i64)                                             ; df /5=m
       FIMUL st(0), r/m(i32)                                             ; da /1=m
       FIMUL st(0), r/m(i16)                                             ; de /1=m
     FINCSTP                                                             ; d9 f7
       FINIT                                                             ; 9b db e3
        FIST r/m(i32), st(0)                                             ; db /2=m
        FIST r/m(i16), st(0)                                             ; df /2=m
       FISTP r/m(i32), st(0)                                             ; db /3=m
       FISTP r/m(i16), st(0)                                             ; df /3=m
       FISTP r/m(i64), st(0)                                             ; df /7=m
       FISUB st(0), r/m(i32)                                             ; da /4=m
       FISUB st(0), r/m(i16)                                             ; de /4=m
      FISUBR st(0), r/m(i32)                                             ; da /5=m
      FISUBR st(0), r/m(i16)                                             ; de /5=m
         FLD st(0), r/m(f32)                                             ; d9 /0=m
         FLD st(0), st(i)                                                ; d9 c0+i; i=0-7
         FLD st(0), r/m(f80)                                             ; db /5=m
         FLD st(0), r/m(f64)                                             ; dd /0=m
        FLD1 st(0), 1                                                    ; d9 e8
       FLDCW r/m(u16)                                                    ; d9 /5=m
      FLDENV r/m(f87env)                                                 ; d9 /4=m
      FLDL2E st(0), const("log2(e)")                                     ; d9 ea
      FLDL2T st(0), const("log2(10)")                                    ; d9 e9
      FLDLG2 st(0), const("log10(2)")                                    ; d9 ec
      FLDLN2 st(0), const("loge(2)")                                     ; d9 ed
       FLDPI st(0), const("pi")                                          ; d9 eb
        FLDZ st(0), 0                                                    ; d9 ee
        FMUL st(0), r/m(f32)                                             ; d8 /1=m
        FMUL st(0), st(i)                                                ; d8 c8+i; i=0-7
        FMUL st(0), st(i)                                                ; da c8+i; i=0-7
        FMUL st(0), r/m(f64)                                             ; dc /1=m
        FMUL st(i), st(0)                                                ; dc c8+i; i=0-7
        FMUL st(i), st(0)                                                ; de c8+i; i=0-7
      FNCLEX                                                             ; db e2
      FNINIT                                                             ; db e3
        FNOP                                                             ; d9 d0
      FPATAN st(1), st(0), st(1)                                         ; d9 f3
       FPREM st(0), st(0), st(1)                                         ; d9 f8
       FPTAN st(0), st(0)                                                ; d9 f2
     FRNDINT st(0), st(0)                                                ; d9 fc
      FRSTOR r/m(f87state)                                               ; dd /4=m
       FSAVE r/m(f87state)                                               ; dd /6=m
      FSCALE st(0), st(0), st(1)                                         ; d9 fd
      FSETPM                                                             ; db e4
       FSQRT st(0), st(0)                                                ; d9 fa
         FST r/m(f32), st(0)                                             ; d9 /2=m
         FST r/m(f64), st(0)                                             ; dd /2=m
         FST st(i), st(0)                                                ; dd d0+i; i=0-7
       FSTCW r/m(u16)                                                    ; d9 /7=m
      FSTENV r/m(f87env)                                                 ; d9 /6=m
        FSTP r/m(f32), st(0)                                             ; d9 /3=m
        FSTP r/m(f80), st(0)                                             ; db /7=m
        FSTP r/m(f64), st(0)                                             ; dd /3=m
        FSTP st(i), st(0)                                                ; dd d8+i; i=0-7
       FSTSW r/m(u16)                                                    ; dd /7=m
        FSUB st(0), r/m(f32)                                             ; d8 /4=m
        FSUB st(0), st(i)                                                ; d8 e0+i; i=0-7
        FSUB st(0), st(i)                                                ; da e0+i; i=0-7
        FSUB st(0), r/m(f64)                                             ; dc /4=m
        FSUB st(i), st(0)                                                ; dc e0+i; i=0-7
        FSUB st(i), st(0)                                                ; de e0+i; i=0-7
       FSUBR st(0), r/m(f32)                                             ; d8 /5=m
       FSUBR st(0), st(i)                                                ; d8 e8+i; i=0-7
       FSUBR st(0), st(i)                                                ; da e8+i; i=0-7
       FSUBR st(0), r/m(f64)                                             ; dc /5=m
       FSUBR st(i), st(0)                                                ; dc e8+i; i=0-7
       FSUBR st(i), st(0)                                                ; de e8+i; i=0-7
        FTST st(0)                                                       ; d9 e4
        FXAM st(0)                                                       ; d9 e5
        FXCH st(0), st(i)                                                ; d9 c8+i; i=0-7
     FXTRACT st(0), st(0), st(1)                                         ; d9 f4
       FYL2X st(0), st(0), st(1)                                         ; d9 f1
     FYL2XP1 st(0), st(0), st(1)                                         ; d9 f9
         HLT                                                             ; f4
        IDIV r/m(u8)                                                     ; f6 /7
        IDIV r/m(uv)                                                     ; f7 /7
        IMUL reg(uv), r/m(uv), I                                         ; 69 /r I=imm(iv)
        IMUL reg(uv), r/m(uv), I                                         ; 6b /r I=imm(i8)
        IMUL r/m(u8)                                                     ; f6 /5
        IMUL r/m(uv)                                                     ; f7 /5
          IN AL, P                                                       ; e4 P=imm(u8)
          IN Av, P                                                       ; e5 P=imm(u8)
          IN AL, DX                                                      ; ec
          IN Av, DX                                                      ; ed
         INC reg(uv)                                                     ; 40+reg; reg=0-7
         INC r/m(u8)                                                     ; fe /0
         INC r/m(uv)                                                     ; ff /0
         INS AL, u8 [SIV]                                                ; 6c
         INS Av, uv [SIV]                                                ; 6d
         INT 3                                                           ; cc
         INT I                                                           ; cd I=imm(u8)
        INTO                                                             ; ce
        IRET                                                             ; cf
          JA N                                                           ; 77 P=imm(i8); N=(IPV+P)
          JC N                                                           ; 72 P=imm(i8); N=(IPV+P)
        JCXZ N                                                           ; e3 P=imm(i8); N=(IPV+P)
          JG N                                                           ; 7f P=imm(i8); N=(IPV+P)
          JL N                                                           ; 7c P=imm(i8); N=(IPV+P)
         JMP N                                                           ; e9 P=imm(iv); N=(IPV+P)
         JMP P                                                           ; ea P=imm(farptr)
         JMP N                                                           ; eb P=imm(i8); N=(IPV+P)
         JMP r/m(uv)                                                     ; ff /4
         JMP r/m(farptr)                                                 ; ff /5=m
         JNA N                                                           ; 76 P=imm(i8); N=(IPV+P)
         JNC N                                                           ; 73 P=imm(i8); N=(IPV+P)
         JNG N                                                           ; 7e P=imm(i8); N=(IPV+P)
         JNL N                                                           ; 7d P=imm(i8); N=(IPV+P)
         JNO N                                                           ; 71 P=imm(i8); N=(IPV+P)
         JNP N                                                           ; 7b P=imm(i8); N=(IPV+P)
         JNS N                                                           ; 79 P=imm(i8); N=(IPV+P)
         JNZ N                                                           ; 75 P=imm(i8); N=(IPV+P)
          JO N                                                           ; 70 P=imm(i8); N=(IPV+P)
          JP N                                                           ; 7a P=imm(i8); N=(IPV+P)
          JS N                                                           ; 78 P=imm(i8); N=(IPV+P)
          JZ N                                                           ; 74 P=imm(i8); N=(IPV+P)
        LAHF                                                             ; 9f
         LAR reg(uv), r/m(uv)                                            ; 0f 02 /r
         LDS reg(uv), r/m(farptr)                                        ; c5 /r=m
         LEA reg(uv), r/m(uv)                                            ; 8d /r=m
       LEAVE                                                             ; c9
         LES reg(uv), r/m(farptr)                                        ; c4 /r=m
        LGDT r/m(u48)                                                    ; 0f 01 /2=m
        LIDT r/m(u48)                                                    ; 0f 01 /3=m
        LLDT r/m(uv)                                                     ; 0f 00 /2
        LMSW r/m(uv)                                                     ; 0f 01 /6
     LOADALL                                                             ; 0f 05
        LOCK                                                    ; prefix ; f0
        LODS AL, u8 [SIV]                                                ; ac
        LODS Av, uv [SIV]                                                ; ad
        LOOP N                                                           ; e2 P=imm(i8); N=(IPV+P)
      LOOPNZ N                                                           ; e0 P=imm(i8); N=(IPV+P)
       LOOPZ N                                                           ; e1 P=imm(i8); N=(IPV+P)
         LSL reg(uv), r/m(uv)                                            ; 0f 03 /r
         LTR r/m(uv)                                                     ; 0f 00 /3
         MOV r/m(u8), reg(u8)                                            ; 88 /r
         MOV r/m(uv), reg(uv)                                            ; 89 /r
         MOV reg(u8), r/m(u8)                                            ; 8a /r
         MOV reg(uv), r/m(uv)                                            ; 8b /r
         MOV reg(uv), segreg(uv)                                         ; 8c /r
         MOV segreg(uv), r/m(uv)                                         ; 8e /r
         MOV AL, u8 [A]                                                  ; a0 A=imm(uv)
         MOV Av, uv [A]                                                  ; a1 A=imm(uv)
         MOV u8 [A], AL                                                  ; a2 A=imm(uv)
         MOV uv [A], Av                                                  ; a3 A=imm(uv)
         MOV reg(u8), I                                                  ; b0+reg; reg=0-7
         MOV reg(uv), I                                                  ; b8+reg; reg=0-7
         MOV r/m(u8), I                                                  ; c6 /0 I=imm(u8)
         MOV r/m(uv), I                                                  ; c7 /0 I=imm(uv)
        MOVS u8 ES:[DIV], u8 [SIV]                                       ; a4
        MOVS uv ES:[DIV], uv [SIV]                                       ; a5
         MUL r/m(u8)                                                     ; f6 /4
         MUL r/m(uv)                                                     ; f7 /4
         NEG r/m(u8)                                                     ; f6 /3
         NEG r/m(uv)                                                     ; f7 /3
         NOP                                                             ; 90
         NOT r/m(u8)                                                     ; f6 /2
         NOT r/m(uv)                                                     ; f7 /2
          OR r/m(u8), reg(u8)                                            ; 08 /r
          OR r/m(uv), reg(uv)                                            ; 09 /r
          OR reg(u8), r/m(u8)                                            ; 0a /r
          OR reg(uv), r/m(uv)                                            ; 0b /r
          OR AL, I                                                       ; 0c I=imm(u8)
          OR Av, I                                                       ; 0d I=imm(uv)
          OR r/m(u8), I                                                  ; 80 /1 I=imm(u8)
          OR r/m(uv), I                                                  ; 81 /1 I=imm(uv)
          OR r/m(u8), I                                                  ; 82 /1 I=imm(u8)
          OR r/m(uv), I                                                  ; 83 /1 I=imm(i8)
         OUT P, AL                                                       ; e6 P=imm(u8)
         OUT P, Av                                                       ; e7 P=imm(u8)
         OUT DX, AL                                                      ; ee
         OUT DX, Av                                                      ; ef
        OUTS u8 ES:[DIV], AL                                             ; 6e
        OUTS uv ES:[DIV], Av                                             ; 6f
         POP ES                                                          ; 07
         POP SS                                                          ; 17
         POP DS                                                          ; 1f
         POP reg(uv)                                                     ; 58+reg; reg=0-7
         POP r/m(uv)                                                     ; 8f /0
        POPA                                                             ; 61 /r
        POPF                                                             ; 9d
        PUSH ES                                                          ; 06
        PUSH CS                                                          ; 0e
        PUSH SS                                                          ; 16
        PUSH DS                                                          ; 1e
        PUSH reg(uv)                                                     ; 50+reg; reg=0-7
        PUSH I                                                           ; 68 I=imm(uv)
        PUSH I                                                           ; 6a I=imm(i8)
        PUSH r/m(uv)                                                     ; ff /6
       PUSHA                                                             ; 60 /r
       PUSHF                                                             ; 9c
         RCL r/m(u8), I                                                  ; c0 /2 I=imm(u8)
         RCL r/m(uv), I                                                  ; c1 /2 I=imm(uv)
         RCL r/m(u8), 1                                                  ; d0 /2
         RCL r/m(uv), 1                                                  ; d1 /2
         RCL r/m(u8), CL                                                 ; d2 /2
         RCL r/m(uv), CL                                                 ; d3 /2
         RCR r/m(u8), I                                                  ; c0 /3 I=imm(u8)
         RCR r/m(uv), I                                                  ; c1 /3 I=imm(uv)
         RCR r/m(u8), 1                                                  ; d0 /3
         RCR r/m(uv), 1                                                  ; d1 /3
         RCR r/m(u8), CL                                                 ; d2 /3
         RCR r/m(uv), CL                                                 ; d3 /3
       REPNZ                                                    ; prefix ; f2
        REPZ                                                    ; prefix ; f3
         RET C                                                           ; c2 C=imm(u16)
         RET                                                             ; c3
        RETF C                                                           ; ca C=imm(u16)
        RETF                                                             ; cb
         ROL r/m(u8), I                                                  ; c0 /0 I=imm(u8)
         ROL r/m(uv), I                                                  ; c1 /0 I=imm(uv)
         ROL r/m(u8), 1                                                  ; d0 /0
         ROL r/m(uv), 1                                                  ; d1 /0
         ROL r/m(u8), CL                                                 ; d2 /0
         ROL r/m(uv), CL                                                 ; d3 /0
         ROR r/m(u8), I                                                  ; c0 /1 I=imm(u8)
         ROR r/m(uv), I                                                  ; c1 /1 I=imm(uv)
         ROR r/m(u8), 1                                                  ; d0 /1
         ROR r/m(uv), 1                                                  ; d1 /1
         ROR r/m(u8), CL                                                 ; d2 /1
         ROR r/m(uv), CL                                                 ; d3 /1
        SAHF                                                             ; 9e
        SALC                                                             ; d6
         SAR r/m(u8), I                                                  ; c0 /7 I=imm(u8)
         SAR r/m(uv), I                                                  ; c1 /7 I=imm(uv)
         SAR r/m(u8), 1                                                  ; d0 /7
         SAR r/m(uv), 1                                                  ; d1 /7
         SAR r/m(u8), CL                                                 ; d2 /7
         SAR r/m(uv), CL                                                 ; d3 /7
         SBB r/m(u8), reg(u8)                                            ; 18 /r
         SBB r/m(uv), reg(uv)                                            ; 19 /r
         SBB reg(u8), r/m(u8)                                            ; 1a /r
         SBB reg(uv), r/m(uv)                                            ; 1b /r
         SBB AL, I                                                       ; 1c I=imm(u8)
         SBB Av, I                                                       ; 1d I=imm(uv)
         SBB r/m(u8), I                                                  ; 80 /3 I=imm(u8)
         SBB r/m(uv), I                                                  ; 81 /3 I=imm(uv)
         SBB r/m(u8), I                                                  ; 82 /3 I=imm(u8)
         SBB r/m(uv), I                                                  ; 83 /3 I=imm(i8)
        SCAS AL, u8 ES:[DIV]                                             ; ae
        SCAS Av, uv ES:[DIV]                                             ; af
        SGDT r/m(u48)                                                    ; 0f 01 /0=m
         SHL r/m(u8), I                                                  ; c0 /4 I=imm(u8)
         SHL r/m(uv), I                                                  ; c1 /4 I=imm(uv)
         SHL r/m(u8), 1                                                  ; d0 /4
         SHL r/m(uv), 1                                                  ; d1 /4
         SHL r/m(u8), CL                                                 ; d2 /4
         SHL r/m(uv), CL                                                 ; d3 /4
         SHR r/m(u8), I                                                  ; c0 /5 I=imm(u8)
         SHR r/m(uv), I                                                  ; c1 /5 I=imm(uv)
         SHR r/m(u8), 1                                                  ; d0 /5
         SHR r/m(uv), 1                                                  ; d1 /5
         SHR r/m(u8), CL                                                 ; d2 /5
         SHR r/m(uv), CL                                                 ; d3 /5
        SIDT r/m(u48)                                                    ; 0f 01 /1=m
        SLDT r/m(uv)                                                     ; 0f 00 /0
        SMSW r/m(uv)                                                     ; 0f 01 /4
         SS:                                                    ; prefix ; 36
         STC                                                             ; f9
         STD                                                             ; fd
         STI                                                             ; fb
        STOS u8 ES:[DIV], AL                                             ; aa
        STOS uv ES:[DIV], Av                                             ; ab
         STR r/m(uv)                                                     ; 0f 00 /1
         SUB r/m(u8), reg(u8)                                            ; 28 /r
         SUB r/m(uv), reg(uv)                                            ; 29 /r
         SUB reg(u8), r/m(u8)                                            ; 2a /r
         SUB reg(uv), r/m(uv)                                            ; 2b /r
         SUB AL, I                                                       ; 2c I=imm(u8)
         SUB Av, I                                                       ; 2d I=imm(uv)
         SUB r/m(u8), I                                                  ; 80 /5 I=imm(u8)
         SUB r/m(uv), I                                                  ; 81 /5 I=imm(uv)
         SUB r/m(u8), I                                                  ; 82 /5 I=imm(u8)
         SUB r/m(uv), I                                                  ; 83 /5 I=imm(i8)
        TEST reg(u8), r/m(u8)                                            ; 84 /r
        TEST reg(uv), r/m(uv)                                            ; 85 /r
        TEST AL, I                                                       ; a8 I=imm(u8)
        TEST Av, I                                                       ; a9 I=imm(uv)
        TEST r/m(u8), I                                                  ; f6 /0 I=imm(u8)
        TEST r/m(uv), I                                                  ; f7 /0 I=imm(uv)
         UD2                                                             ; 0f 0b
         UD2                                                             ; 0f b9
        VERR r/m(uv)                                                     ; 0f 00 /4
        VERW r/m(uv)                                                     ; 0f 00 /5
        WAIT                                                    ; prefix ; 9b
        XCHG reg(u8), r/m(u8)                                            ; 86 /r
        XCHG reg(uv), r/m(uv)                                            ; 87 /r
        XCHG reg(uv), Av                                                 ; 90+reg; reg=1-7
        XLAT                                                             ; d7
         XOR r/m(u8), reg(u8)                                            ; 30 /r
         XOR r/m(uv), reg(uv)                                            ; 31 /r
         XOR reg(u8), r/m(u8)                                            ; 32 /r
         XOR reg(uv), r/m(uv)                                            ; 33 /r
         XOR AL, I                                                       ; 34 I=imm(u8)
         XOR Av, I                                                       ; 35 I=imm(uv)
         XOR r/m(u8), I                                                  ; 80 /6 I=imm(u8)
         XOR r/m(uv), I                                                  ; 81 /6 I=imm(uv)
         XOR r/m(u8), I                                                  ; 82 /6 I=imm(u8)
         XOR r/m(uv), I                                                  ; 83 /6 I=imm(i8)

Opcode coverage (single opcode):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix    Pm = mandatory prefix (modifies opcodes)

    0 1 2 3 4 5 6 7 8 9 a b c d e f 
   --------------------------------
  0|X X X X X X X X X X X X X X X M 
  1|X X X X X X X X X X X X X X X X 
  2|X X X X X X P X X X X X X X P X 
  3|X X X X X X P X X X X X X X P X 
  4|X X X X X X X X X X X X X X X X 
  5|X X X X X X X X X X X X X X X X 
  6|X X X X         X X X X X X X X 
  7|X X X X X X X X X X X X X X X X 
  8|R R R R X X X X X X X X X R X R 
  9|X X X X X X X X X X X PmX X X X 
  a|X X X X X X X X X X X X X X X X 
  b|X X X X X X X X X X X X X X X X 
  c|R R X X R R R R X X X X X X X X 
  d|R R R R X X X X R R R R R R R R 
  e|X X X X X X X X X X X X X X X X 
  f|P   P P X X R R X X X X X X R R 

Opcode coverage (0f ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix    Pm = mandatory prefix (modifies opcodes)

    0 1 2 3 4 5 6 7 8 9 a b c d e f 
   --------------------------------
  0|R R X X   X X         X         
  1|                                
  2|                                
  3|                                
  4|                                
  5|                                
  6|                                
  7|                                
  8|                                
  9|                                
  a|                                
  b|                  X             
  c|                                
  d|                                
  e|                                
  f|                                

Opcode coverage (9b ... mandatory prefix):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix    Pm = mandatory prefix (modifies opcodes)

    0 1 2 3 4 5 6 7 8 9 a b c d e f 
   --------------------------------
  0|                                
  1|                                
  2|                                
  3|                                
  4|                                
  5|                                
  6|                                
  7|                                
  8|                                
  9|                                
  a|                                
  b|                                
  c|                                
  d|                      R         
  e|                                
  f|                                

Opcode coverage mod/reg/rm (80 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (81 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (82 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (83 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (8d ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (8f ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (c0 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|                 reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|                 reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|                 reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|                 reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (c1 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|                 reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|                 reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|                 reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|                 reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (c4 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (c5 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (c6 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (c7 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (d0 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|                 reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|                 reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|                 reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|                 reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (d1 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|                 reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|                 reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|                 reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|                 reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (d2 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|                 reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|                 reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|                 reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|                 reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (d3 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|                 reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|                 reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|                 reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|                 reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (d8 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (d9 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X                reg=2
 d8|                 reg=3
 e0|X X     X X      reg=4
 e8|X X X X X X X    reg=5
 f0|X X X X X   X X  reg=6
 f8|X X X   X X      reg=7


Opcode coverage mod/reg/rm (da ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (db ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|                 reg=4
 28|X X X X X X X X  reg=5
 30|                 reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|                 reg=4
 68|X X X X X X X X  reg=5
 70|                 reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|                 reg=4
 a8|X X X X X X X X  reg=5
 b0|                 reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|X X X X X        reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (dc ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (dd ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|                 reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|                 reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|                 reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (de ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|                 reg=2
 d8|  X              reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (df ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (f6 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (f7 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (fe ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (ff ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|                 reg=3
 e0|X X X X X X X X  reg=4
 e8|                 reg=5
 f0|X X X X X X X X  reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 00 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 01 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|                 reg=5
 30|X X X X X X X X  reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|                 reg=5
 70|X X X X X X X X  reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|                 reg=5
 b0|X X X X X X X X  reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|X X X X X X X X  reg=4
 e8|                 reg=5
 f0|X X X X X X X X  reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (9b db ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|    X X          reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


