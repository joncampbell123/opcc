Opcodes by byte:
----------------
         ADD r/m(u8), reg(u8)                                            ; 00 /r
         ADD r/m(uv), reg(uv)                                            ; 01 /r
         ADD reg(u8), r/m(u8)                                            ; 02 /r
         ADD reg(uv), r/m(uv)                                            ; 03 /r
         ADD AL, I                                                       ; 04 I=imm(u8)
         ADD Av, I                                                       ; 05 I=imm(uv)
        PUSH ES                                                          ; 06
         POP ES                                                          ; 07
          OR r/m(u8), reg(u8)                                            ; 08 /r
          OR r/m(uv), reg(uv)                                            ; 09 /r
          OR reg(u8), r/m(u8)                                            ; 0a /r
          OR reg(uv), r/m(uv)                                            ; 0b /r
          OR AL, I                                                       ; 0c I=imm(u8)
          OR Av, I                                                       ; 0d I=imm(uv)
        PUSH CS                                                          ; 0e
        SLDT r/m(uv)                                                     ; 0f 00 /0
         STR r/m(uv)                                                     ; 0f 00 /1
        LLDT r/m(uv)                                                     ; 0f 00 /2
         LTR r/m(uv)                                                     ; 0f 00 /3
        VERR r/m(uv)                                                     ; 0f 00 /4
        VERW r/m(uv)                                                     ; 0f 00 /5
        SGDT r/m(u48)                                                    ; 0f 01 /0=m
        SIDT r/m(u48)                                                    ; 0f 01 /1=m
        LGDT r/m(u48)                                                    ; 0f 01 /2=m
        LIDT r/m(u48)                                                    ; 0f 01 /3=m
        SMSW r/m(uv)                                                     ; 0f 01 /4
        LMSW r/m(uv)                                                     ; 0f 01 /6
      INVLPG r/m(uv)                                                     ; 0f 01 /7=m
         LAR reg(uv), r/m(uv)                                            ; 0f 02 /r
         LSL reg(uv), r/m(uv)                                            ; 0f 03 /r
     SYSCALL                                                             ; 0f 05
        CLTS                                                             ; 0f 06 /r
      SYSRET                                                             ; 0f 07
        INVD                                                             ; 0f 08
      WBINVD                                                             ; 0f 09
         UD2                                                             ; 0f 0b
    PREFETCH r/m(u8)                                                     ; 0f 0d /0
   PREFETCHW r/m(u8)                                                     ; 0f 0d /1
 PREFETCHWT1 r/m(u8)                                                     ; 0f 0d /2
       FEMMS                                                             ; 0f 0e
       PI2FW mm(reg), mm(rm)                                             ; 0f 0f /r 0c
       PI2FD mm(reg), mm(rm)                                             ; 0f 0f /r 0d
       PF2IW mm(reg), mm(rm)                                             ; 0f 0f /r 1c
       PF2ID mm(reg), mm(rm)                                             ; 0f 0f /r 1d
      PFRCPV mm(reg), mm(rm)                                             ; 0f 0f /r 86
    PFRSQRTV mm(reg), mm(rm)                                             ; 0f 0f /r 87
      PFNACC mm(reg), mm(rm)                                             ; 0f 0f /r 8a
     PFPNACC mm(reg), mm(rm)                                             ; 0f 0f /r 8e
     PFCMPGE mm(reg), mm(rm)                                             ; 0f 0f /r 90
       PFMIN mm(reg), mm(rm)                                             ; 0f 0f /r 94
       PFRCP mm(reg), mm(rm)                                             ; 0f 0f /r 96
     PFRSQRT mm(reg), mm(rm)                                             ; 0f 0f /r 97
       PFSUB mm(reg), mm(rm)                                             ; 0f 0f /r 9a
       PFADD mm(reg), mm(rm)                                             ; 0f 0f /r 9e
     PFCMPGT mm(reg), mm(rm)                                             ; 0f 0f /r a0
       PFMAX mm(reg), mm(rm)                                             ; 0f 0f /r a4
    PFRCPIT1 mm(reg), mm(rm)                                             ; 0f 0f /r a6
    PFRSQIT1 mm(reg), mm(rm)                                             ; 0f 0f /r a7
      PFSUBR mm(reg), mm(rm)                                             ; 0f 0f /r aa
       PFACC mm(reg), mm(rm)                                             ; 0f 0f /r ae
     PFCMPEQ mm(reg), mm(rm)                                             ; 0f 0f /r b0
       PFMUL mm(reg), mm(rm)                                             ; 0f 0f /r b4
    PFRCPIT2 mm(reg), mm(rm)                                             ; 0f 0f /r b6
     PMULHRW mm(reg), mm(rm)                                             ; 0f 0f /r b7
      PSWAPD mm(reg), mm(rm)                                             ; 0f 0f /r bb
     PAVGUSB mm(reg), mm(rm)                                             ; 0f 0f /r bf
      MOVUPS xmm(reg), xmm(rm)                                           ; 0f 10 /r
      MOVUPS xmm(rm), xmm(reg)                                           ; 0f 11 /r
      MOVLPS xmm(reg), mm(rm)                                            ; 0f 12 /r=m
     MOVHLPS xmm(reg), xmm(rm)                                           ; 0f 12 /r!m
      MOVLPS mm(rm), xmm(reg)                                            ; 0f 13 /r=m
    UNPCKLPS xmm(reg), xmm(rm)                                           ; 0f 14 /r
    UNPCKHPS xmm(reg), xmm(rm)                                           ; 0f 15 /r
      MOVHPS xmm(reg), mm(rm)                                            ; 0f 16 /r=m
     MOVLHPS xmm(reg), xmm(rm)                                           ; 0f 16 /r!m
      MOVHPS mm(rm), xmm(reg)                                            ; 0f 17 /r=m
 PREFETCHNTA mm(rm)                                                      ; 0f 18 /0=m
  PREFETCHT0 mm(rm)                                                      ; 0f 18 /1=m
  PREFETCHT1 mm(rm)                                                      ; 0f 18 /2=m
  PREFETCHT2 mm(rm)                                                      ; 0f 18 /3=m
         NOP                                                             ; 0f 1f /0
         MOV r/m(u32), cr(reg)                                           ; 0f 20 /r!m
         MOV r/m(u32), dr(reg)                                           ; 0f 21 /r!m
         MOV cr(reg), r/m(u32)                                           ; 0f 22 /r!m
         MOV dr(reg), r/m(u32)                                           ; 0f 23 /r!m
         MOV r/m(u32), tr(reg)                                           ; 0f 24 /r!m
         MOV tr(reg), r/m(u32)                                           ; 0f 26 /r!m
      MOVAPS xmm(reg), xmm(rm)                                           ; 0f 28 /r
      MOVAPS xmm(rm), xmm(reg)                                           ; 0f 29 /r
    CVTPI2PS xmm(reg), mm(rm)                                            ; 0f 2a /r
     MOVNTPS xmm(rm), xmm(reg)                                           ; 0f 2b /r=m
   CVTTPS2PI mm(reg), xmm(rm)                                            ; 0f 2c /r
    CVTPS2PI mm(reg), xmm(rm)                                            ; 0f 2d /r
     UCOMISS xmm(reg), xmm(rm)                                           ; 0f 2e /r
      COMISS xmm(reg), xmm(rm)                                           ; 0f 2f /r
       WRMSR                                                             ; 0f 30
       RDTSC                                                             ; 0f 31
       RDMSR                                                             ; 0f 32
       RDPMC                                                             ; 0f 33
    SYSENTER                                                             ; 0f 34
     SYSEXIT                                                             ; 0f 35
       CMOVO reg(uv), r/m(uv)                                            ; 0f 40 /r
      CMOVNO reg(uv), r/m(uv)                                            ; 0f 41 /r
       CMOVC reg(uv), r/m(uv)                                            ; 0f 42 /r
      CMOVNC reg(uv), r/m(uv)                                            ; 0f 43 /r
       CMOVZ reg(uv), r/m(uv)                                            ; 0f 44 /r
      CMOVNZ reg(uv), r/m(uv)                                            ; 0f 45 /r
      CMOVNA reg(uv), r/m(uv)                                            ; 0f 46 /r
       CMOVA reg(uv), r/m(uv)                                            ; 0f 47 /r
       CMOVS reg(uv), r/m(uv)                                            ; 0f 48 /r
      CMOVNS reg(uv), r/m(uv)                                            ; 0f 49 /r
       CMOVP reg(uv), r/m(uv)                                            ; 0f 4a /r
      CMOVNP reg(uv), r/m(uv)                                            ; 0f 4b /r
       CMOVL reg(uv), r/m(uv)                                            ; 0f 4c /r
      CMOVNL reg(uv), r/m(uv)                                            ; 0f 4d /r
      CMOVNG reg(uv), r/m(uv)                                            ; 0f 4e /r
       CMOVG reg(uv), r/m(uv)                                            ; 0f 4f /r
    MOVMSKPS r/m(uv), xmm(reg)                                           ; 0f 50 /r
      SQRTPS xmm(reg), xmm(rm)                                           ; 0f 51 /r
     RSQRTPS xmm(reg), xmm(rm)                                           ; 0f 52 /r
       RCPPS xmm(reg), xmm(rm)                                           ; 0f 53 /r
       ANDPS xmm(reg), xmm(rm)                                           ; 0f 54 /r
      ANDNPS xmm(reg), xmm(rm)                                           ; 0f 55 /r
        ORPS xmm(reg), xmm(rm)                                           ; 0f 56 /r
       XORPS xmm(reg), xmm(rm)                                           ; 0f 57 /r
       ADDPS xmm(reg), xmm(rm)                                           ; 0f 58 /r
       MULPS xmm(reg), xmm(rm)                                           ; 0f 59 /r
    CVTPS2PD xmm(reg), xmm(rm)                                           ; 0f 5a /r
    CVTDQ2PS xmm(reg), xmm(rm)                                           ; 0f 5b /r
       SUBPS xmm(reg), xmm(rm)                                           ; 0f 5c /r
       MINPS xmm(reg), xmm(rm)                                           ; 0f 5d /r
       DIVPS xmm(reg), xmm(rm)                                           ; 0f 5e /r
       MAXPS xmm(reg), xmm(rm)                                           ; 0f 5f /r
   PUNPCKLBW mm(reg), mm(rm)                                             ; 0f 60 /r
   PUNPCKLWD mm(reg), mm(rm)                                             ; 0f 61 /r
   PUNPCKLDQ mm(reg), mm(rm)                                             ; 0f 62 /r
    PACKSSWB mm(reg), mm(rm)                                             ; 0f 63 /r
     PCMPGTB mm(reg), mm(rm)                                             ; 0f 64 /r
     PCMPGTW mm(reg), mm(rm)                                             ; 0f 65 /r
     PCMPGTD mm(reg), mm(rm)                                             ; 0f 66 /r
    PACKUSWB mm(reg), mm(rm)                                             ; 0f 67 /r
   PUNPCKHBW mm(reg), mm(rm)                                             ; 0f 68 /r
   PUNPCKHWD mm(reg), mm(rm)                                             ; 0f 69 /r
   PUNPCKHDQ mm(reg), mm(rm)                                             ; 0f 6a /r
    PACKSSDW mm(reg), mm(rm)                                             ; 0f 6b /r
        MOVD mm(reg), r/m(u32)                                           ; 0f 6e /r
        MOVQ mm(reg), r/m(u64)                                           ; 0f 6f /r
      PSHUFW mm(reg), mm(rm), I                                          ; 0f 70 /r I=imm(u8)
       PSRLW mm(reg), I                                                  ; 0f 71 /2 I=imm(u8)
       PSRAW mm(reg), I                                                  ; 0f 71 /4 I=imm(u8)
       PSLLW mm(reg), I                                                  ; 0f 71 /6 I=imm(u8)
       PSRLD mm(reg), I                                                  ; 0f 72 /2 I=imm(u8)
       PSRAD mm(reg), I                                                  ; 0f 72 /4 I=imm(u8)
       PSLLD mm(reg), I                                                  ; 0f 72 /6 I=imm(u8)
       PSRLQ mm(reg), I                                                  ; 0f 73 /2 I=imm(u8)
       PSLLQ mm(reg), I                                                  ; 0f 73 /6 I=imm(u8)
     PCMPEQB mm(reg), mm(rm)                                             ; 0f 74 /r
     PCMPEQW mm(reg), mm(rm)                                             ; 0f 75 /r
     PCMPEQD mm(reg), mm(rm)                                             ; 0f 76 /r
        EMMS                                                             ; 0f 77
        MOVD r/m(u32), mm(reg)                                           ; 0f 7e /r
        MOVQ r/m(u64), mm(reg)                                           ; 0f 7f /r
          JO N                                                           ; 0f 80 P=imm(iv); N=(IPV+P)
         JNO N                                                           ; 0f 81 P=imm(iv); N=(IPV+P)
          JC N                                                           ; 0f 82 P=imm(iv); N=(IPV+P)
         JNC N                                                           ; 0f 83 P=imm(iv); N=(IPV+P)
          JZ N                                                           ; 0f 84 P=imm(iv); N=(IPV+P)
         JNZ N                                                           ; 0f 85 P=imm(iv); N=(IPV+P)
         JNA N                                                           ; 0f 86 P=imm(iv); N=(IPV+P)
          JA N                                                           ; 0f 87 P=imm(iv); N=(IPV+P)
          JS N                                                           ; 0f 88 P=imm(iv); N=(IPV+P)
         JNS N                                                           ; 0f 89 P=imm(iv); N=(IPV+P)
          JP N                                                           ; 0f 8a P=imm(iv); N=(IPV+P)
         JNP N                                                           ; 0f 8b P=imm(iv); N=(IPV+P)
          JL N                                                           ; 0f 8c P=imm(iv); N=(IPV+P)
         JNL N                                                           ; 0f 8d P=imm(iv); N=(IPV+P)
         JNG N                                                           ; 0f 8e P=imm(iv); N=(IPV+P)
          JG N                                                           ; 0f 8f P=imm(iv); N=(IPV+P)
        SETO r/m(u8)                                                     ; 0f 90 /0
       SETNO r/m(u8)                                                     ; 0f 91 /0
        SETC r/m(u8)                                                     ; 0f 92 /0
       SETNC r/m(u8)                                                     ; 0f 93 /0
        SETZ r/m(u8)                                                     ; 0f 94 /0
       SETNZ r/m(u8)                                                     ; 0f 95 /0
       SETNA r/m(u8)                                                     ; 0f 96 /0
        SETA r/m(u8)                                                     ; 0f 97 /0
        SETS r/m(u8)                                                     ; 0f 98 /0
       SETNS r/m(u8)                                                     ; 0f 99 /0
        SETP r/m(u8)                                                     ; 0f 9a /0
       SETNP r/m(u8)                                                     ; 0f 9b /0
        SETL r/m(u8)                                                     ; 0f 9c /0
       SETNL r/m(u8)                                                     ; 0f 9d /0
       SETNG r/m(u8)                                                     ; 0f 9e /0
        SETG r/m(u8)                                                     ; 0f 9f /0
       CPUID                                                             ; 0f a2
          BT r/m(uv), reg(uv)                                            ; 0f a3 /r
         RSM                                                             ; 0f aa
         BTS r/m(uv), reg(uv)                                            ; 0f ab /r
      FXSAVE r/m(f87state)                                               ; 0f ae /0=m
     FXRSTOR r/m(f87state)                                               ; 0f ae /1=m
     LDMXCSR r/m(u32)                                                    ; 0f ae /2=m
     STMXCSR r/m(u32)                                                    ; 0f ae /3=m
     CLFLUSH r/m(u8)                                                     ; 0f ae /7=m
      LFENCE                                                             ; 0f ae e8
      MFENCE                                                             ; 0f ae f0
      SFENCE                                                             ; 0f ae f8
     CMPXCHG r/m(u8), reg(u8)                                            ; 0f b0 /r
     CMPXCHG r/m(uv), reg(uv)                                            ; 0f b1 /r
         BTR r/m(uv), reg(uv)                                            ; 0f b3 /r
         UD2                                                             ; 0f b9
          BT r/m(uv), I                                                  ; 0f ba /4 I=imm(u8)
         BTS r/m(uv), I                                                  ; 0f ba /5 I=imm(u8)
         BTR r/m(uv), I                                                  ; 0f ba /6 I=imm(u8)
         BTC r/m(uv), I                                                  ; 0f ba /7 I=imm(u8)
         BTC r/m(uv), reg(uv)                                            ; 0f bb /r
         BSF reg(uv), r/m(uv)                                            ; 0f bc /r
         BSR reg(uv), r/m(uv)                                            ; 0f bd /r
        XADD r/m(u8), reg(u8)                                            ; 0f c0 /r
        XADD r/m(uv), reg(uv)                                            ; 0f c1 /r
       CMPPS xmm(reg), xmm(rm), I                                        ; 0f c2 /r I=imm(u8)
      MOVNTI r/m(u32), reg(u32)                                          ; 0f c3 /r=m
      PINSRW mm(reg), r/m(u16), I                                        ; 0f c4 /r I=imm(u8)
      PEXTRW reg(u32), mm(rm), I                                         ; 0f c5 /r!m I=imm(u8)
      SHUFPS xmm(reg), xmm(rm), I                                        ; 0f c6 /r I=imm(u8)
   CMPXCHG8B r/m(u64)                                                    ; 0f c7 /1=m
       BSWAP reg(uv), reg(uv)                                            ; 0f c8+reg; reg=0-7
       PSRLW mm(reg), mm(rm)                                             ; 0f d1 /r
       PSRLD mm(reg), mm(rm)                                             ; 0f d2 /r
       PSRLQ mm(reg), mm(rm)                                             ; 0f d3 /r
       PADDQ mm(reg), mm(rm)                                             ; 0f d4 /r
      PMULLW mm(reg), mm(rm)                                             ; 0f d5 /r
    PMOVMSKB reg(u32), mm(rm)                                            ; 0f d7 /r!m
     PSUBUSB mm(reg), mm(rm)                                             ; 0f d8 /r
     PSUBUSW mm(reg), mm(rm)                                             ; 0f d9 /r
      PMINUB mm(reg), mm(rm)                                             ; 0f da /r
        PAND mm(reg), mm(rm)                                             ; 0f db /r
     PADDUSB mm(reg), mm(rm)                                             ; 0f dc /r
     PADDUSW mm(reg), mm(rm)                                             ; 0f dd /r
      PMAXUB mm(reg), mm(rm)                                             ; 0f de /r
       PANDN mm(reg), mm(rm)                                             ; 0f df /r
       PAVGB mm(reg), mm(rm)                                             ; 0f e0 /r
       PSRAW mm(reg), mm(rm)                                             ; 0f e1 /r
       PSRAD mm(reg), mm(rm)                                             ; 0f e2 /r
       PAVGW mm(reg), mm(rm)                                             ; 0f e3 /r
     PMULHUW mm(reg), mm(rm)                                             ; 0f e4 /r
      PMULHW mm(reg), mm(rm)                                             ; 0f e5 /r
      MOVNTQ mm(rm), mm(reg)                                             ; 0f e7 /r=m
      PSUBSB mm(reg), mm(rm)                                             ; 0f e8 /r
      PSUBSW mm(reg), mm(rm)                                             ; 0f e9 /r
      PMINSW mm(reg), mm(rm)                                             ; 0f ea /r
         POR mm(reg), mm(rm)                                             ; 0f eb /r
      PADDSB mm(reg), mm(rm)                                             ; 0f ec /r
      PADDSW mm(reg), mm(rm)                                             ; 0f ed /r
      PMAXSW mm(reg), mm(rm)                                             ; 0f ee /r
        PXOR mm(reg), mm(rm)                                             ; 0f ef /r
       PSLLW mm(reg), mm(rm)                                             ; 0f f1 /r
       PSLLD mm(reg), mm(rm)                                             ; 0f f2 /r
       PSLLQ mm(reg), mm(rm)                                             ; 0f f3 /r
     PMULUDQ mm(reg), mm(rm)                                             ; 0f f4 /r
     PMADDWD mm(reg), mm(rm)                                             ; 0f f5 /r
      PSADBW mm(reg), mm(rm)                                             ; 0f f6 /r
    MASKMOVQ u64 [DIV], mm(reg), mm(rm)                                  ; 0f f7 /r
       PSUBB mm(reg), mm(rm)                                             ; 0f f8 /r
       PSUBW mm(reg), mm(rm)                                             ; 0f f9 /r
       PSUBD mm(reg), mm(rm)                                             ; 0f fa /r
       PSUBQ mm(reg), mm(rm)                                             ; 0f fb /r
       PADDB mm(reg), mm(rm)                                             ; 0f fc /r
       PADDW mm(reg), mm(rm)                                             ; 0f fd /r
       PADDD mm(reg), mm(rm)                                             ; 0f fe /r
         ADC r/m(u8), reg(u8)                                            ; 10 /r
         ADC r/m(uv), reg(uv)                                            ; 11 /r
         ADC reg(u8), r/m(u8)                                            ; 12 /r
         ADC reg(uv), r/m(uv)                                            ; 13 /r
         ADC AL, I                                                       ; 14 I=imm(u8)
         ADC Av, I                                                       ; 15 I=imm(uv)
        PUSH SS                                                          ; 16
         POP SS                                                          ; 17
         SBB r/m(u8), reg(u8)                                            ; 18 /r
         SBB r/m(uv), reg(uv)                                            ; 19 /r
         SBB reg(u8), r/m(u8)                                            ; 1a /r
         SBB reg(uv), r/m(uv)                                            ; 1b /r
         SBB AL, I                                                       ; 1c I=imm(u8)
         SBB Av, I                                                       ; 1d I=imm(uv)
        PUSH DS                                                          ; 1e
         POP DS                                                          ; 1f
         AND r/m(u8), reg(u8)                                            ; 20 /r
         AND r/m(uv), reg(uv)                                            ; 21 /r
         AND reg(u8), r/m(u8)                                            ; 22 /r
         AND reg(uv), r/m(uv)                                            ; 23 /r
         AND AL, I                                                       ; 24 I=imm(u8)
         AND Av, I                                                       ; 25 I=imm(uv)
         ES:                                                    ; prefix ; 26
         DAA                                                             ; 27
         SUB r/m(u8), reg(u8)                                            ; 28 /r
         SUB r/m(uv), reg(uv)                                            ; 29 /r
         SUB reg(u8), r/m(u8)                                            ; 2a /r
         SUB reg(uv), r/m(uv)                                            ; 2b /r
         SUB AL, I                                                       ; 2c I=imm(u8)
         SUB Av, I                                                       ; 2d I=imm(uv)
         CS:                                                    ; prefix ; 2e
         DAS                                                             ; 2f
         XOR r/m(u8), reg(u8)                                            ; 30 /r
         XOR r/m(uv), reg(uv)                                            ; 31 /r
         XOR reg(u8), r/m(u8)                                            ; 32 /r
         XOR reg(uv), r/m(uv)                                            ; 33 /r
         XOR AL, I                                                       ; 34 I=imm(u8)
         XOR Av, I                                                       ; 35 I=imm(uv)
         SS:                                                    ; prefix ; 36
         AAA                                                             ; 37
         CMP r/m(u8), reg(u8)                                            ; 38 /r
         CMP r/m(uv), reg(uv)                                            ; 39 /r
         CMP reg(u8), r/m(u8)                                            ; 3a /r
         CMP reg(uv), r/m(uv)                                            ; 3b /r
         CMP AL, I                                                       ; 3c I=imm(u8)
         CMP Av, I                                                       ; 3d I=imm(uv)
         DS:                                                    ; prefix ; 3e
         AAS                                                             ; 3f
         INC reg(uv)                                                     ; 40+reg; reg=0-7
         DEC reg(uv)                                                     ; 48+reg; reg=0-7
        PUSH reg(uv)                                                     ; 50+reg; reg=0-7
         POP reg(uv)                                                     ; 58+reg; reg=0-7
       PUSHA                                                             ; 60 /r
        POPA                                                             ; 61 /r
       BOUND reg(uv), r/m(uv)                                            ; 62 /r
        ARPL r/m(uv), reg(uv)                                            ; 63 /r
         FS:                                                    ; prefix ; 64
         GS:                                                    ; prefix ; 65
        OPSZ                                                    ; prefix ; 66
      MOVUPD xmm(reg), xmm(rm)                                           ; 66 0f 10 /r
      MOVUPD xmm(rm), xmm(reg)                                           ; 66 0f 11 /r
      MOVLPD xmm(reg), xmm(rm)                                           ; 66 0f 12 /r=m
      MOVLPD xmm(rm), xmm(reg)                                           ; 66 0f 13 /r=m
    UNPCKLPD xmm(reg), xmm(rm)                                           ; 66 0f 14 /r
    UNPCKHPD xmm(reg), xmm(rm)                                           ; 66 0f 15 /r
      MOVHPD xmm(reg), xmm(rm)                                           ; 66 0f 16 /r=m
      MOVHPD xmm(rm), xmm(reg)                                           ; 66 0f 17 /r=m
      MOVAPD xmm(reg), xmm(rm)                                           ; 66 0f 28 /r
      MOVAPD xmm(rm), xmm(reg)                                           ; 66 0f 29 /r
    CVTPI2PD xmm(reg), mm(rm)                                            ; 66 0f 2a /r
     MOVNTPD xmm(rm), xmm(reg)                                           ; 66 0f 2b /r=m
   CVTTPD2PI mm(reg), xmm(rm)                                            ; 66 0f 2c /r
    CVTPD2PI mm(reg), xmm(rm)                                            ; 66 0f 2d /r
     UCOMISD xmm(reg), xmm(rm)                                           ; 66 0f 2e /r
      COMISD xmm(reg), xmm(rm)                                           ; 66 0f 2f /r
    MOVMSKPD r/m(u32), xmm(reg)                                          ; 66 0f 50 /r!m
      SQRTPD xmm(reg), xmm(rm)                                           ; 66 0f 51 /r
       ANDPD xmm(reg), xmm(rm)                                           ; 66 0f 54 /r
      ANDNPD xmm(reg), xmm(rm)                                           ; 66 0f 55 /r
        ORPD xmm(reg), xmm(rm)                                           ; 66 0f 56 /r
       XORPD xmm(reg), xmm(rm)                                           ; 66 0f 57 /r
       ADDPD xmm(reg), xmm(rm)                                           ; 66 0f 58 /r
       MULPD xmm(reg), xmm(rm)                                           ; 66 0f 59 /r
    CVTPD2PS xmm(reg), xmm(rm)                                           ; 66 0f 5a /r
    CVTPS2DQ xmm(reg), xmm(rm)                                           ; 66 0f 5b /r
       SUBPD xmm(reg), xmm(rm)                                           ; 66 0f 5c /r
       MINPD xmm(reg), xmm(rm)                                           ; 66 0f 5d /r
       DIVPD xmm(reg), xmm(rm)                                           ; 66 0f 5e /r
       MAXPD xmm(reg), xmm(rm)                                           ; 66 0f 5f /r
   PUNPCKLBW xmm(reg), xmm(rm)                                           ; 66 0f 60 /r
   PUNPCKLWD xmm(reg), xmm(rm)                                           ; 66 0f 61 /r
   PUNPCKLDQ xmm(reg), xmm(rm)                                           ; 66 0f 62 /r
    PACKSSWB xmm(reg), xmm(rm)                                           ; 66 0f 63 /r
     PCMPGTB xmm(reg), xmm(rm)                                           ; 66 0f 64 /r
     PCMPGTW xmm(reg), xmm(rm)                                           ; 66 0f 65 /r
     PCMPGTD xmm(reg), xmm(rm)                                           ; 66 0f 66 /r
    PACKUSWB xmm(reg), xmm(rm)                                           ; 66 0f 67 /r
   PUNPCKHBW xmm(reg), xmm(rm)                                           ; 66 0f 68 /r
   PUNPCKHWD xmm(reg), xmm(rm)                                           ; 66 0f 69 /r
   PUNPCKHDQ xmm(reg), xmm(rm)                                           ; 66 0f 6a /r
    PACKSSDW xmm(reg), xmm(rm)                                           ; 66 0f 6b /r
  PUNPCKLQDQ xmm(reg), xmm(rm)                                           ; 66 0f 6c /r
  PUNPCKHQDQ xmm(reg), xmm(rm)                                           ; 66 0f 6d /r
        MOVD xmm(reg), r/m(u32)                                          ; 66 0f 6e /r
      MOVDQA xmm(reg), xmm(rm)                                           ; 66 0f 6f /r
      PSHUFD xmm(reg), xmm(rm), I                                        ; 66 0f 70 /r I=imm(u8)
       PSRLW xmm(reg), I                                                 ; 66 0f 71 /2 I=imm(u8)
       PSRAW xmm(reg), I                                                 ; 66 0f 71 /4 I=imm(u8)
       PSLLW xmm(reg), I                                                 ; 66 0f 71 /6 I=imm(u8)
       PSRLD xmm(reg), I                                                 ; 66 0f 72 /2 I=imm(u8)
       PSRAD xmm(reg), I                                                 ; 66 0f 72 /4 I=imm(u8)
       PSLLD xmm(reg), I                                                 ; 66 0f 72 /6 I=imm(u8)
       PSRLQ xmm(reg), I                                                 ; 66 0f 73 /2 I=imm(u8)
      PSRLDQ xmm(reg), I                                                 ; 66 0f 73 /3 I=imm(u8)
       PSLLQ xmm(reg), I                                                 ; 66 0f 73 /6 I=imm(u8)
      PSLLDQ xmm(reg), I                                                 ; 66 0f 73 /7 I=imm(u8)
     PCMPEQB xmm(reg), xmm(rm)                                           ; 66 0f 74 /r
     PCMPEQW xmm(reg), xmm(rm)                                           ; 66 0f 75 /r
     PCMPEQD xmm(reg), xmm(rm)                                           ; 66 0f 76 /r
        MOVD r/m(u32), xmm(reg)                                          ; 66 0f 7e /r
      MOVDQA xmm(rm), xmm(reg)                                           ; 66 0f 7f /r
       CMPPD xmm(reg), xmm(rm), I                                        ; 66 0f c2 /r I=imm(u8)
      PINSRW xmm(reg), r/m(u16), I                                       ; 66 0f c4 /r I=imm(u8)
      PEXTRW reg(u32), xmm(rm), I                                        ; 66 0f c5 /r!m I=imm(u8)
      SHUFPD xmm(reg), xmm(rm), I                                        ; 66 0f c6 /r I=imm(u8)
       PSRLW xmm(reg), xmm(rm)                                           ; 66 0f d1 /r
       PSRLD xmm(reg), xmm(rm)                                           ; 66 0f d2 /r
       PSRLQ xmm(reg), xmm(rm)                                           ; 66 0f d3 /r
       PADDQ xmm(reg), xmm(rm)                                           ; 66 0f d4 /r
      PMULLW xmm(reg), xmm(rm)                                           ; 66 0f d5 /r
        MOVQ xmm(rm), xmm(reg)                                           ; 66 0f d6 /r
    PMOVMSKB reg(u32), xmm(rm)                                           ; 66 0f d7 /r!m
     PSUBUSB xmm(reg), xmm(rm)                                           ; 66 0f d8 /r
     PSUBUSW xmm(reg), xmm(rm)                                           ; 66 0f d9 /r
      PMINUB xmm(reg), xmm(rm)                                           ; 66 0f da /r
        PAND xmm(reg), xmm(rm)                                           ; 66 0f db /r
     PADDUSB xmm(reg), xmm(rm)                                           ; 66 0f dc /r
     PADDUSW xmm(reg), xmm(rm)                                           ; 66 0f dd /r
      PMAXUB xmm(reg), xmm(rm)                                           ; 66 0f de /r
       PANDN xmm(reg), xmm(rm)                                           ; 66 0f df /r
       PAVGB xmm(reg), xmm(rm)                                           ; 66 0f e0 /r
       PSRAW xmm(reg), xmm(rm)                                           ; 66 0f e1 /r
       PSRAD xmm(reg), xmm(rm)                                           ; 66 0f e2 /r
       PAVGW xmm(reg), xmm(rm)                                           ; 66 0f e3 /r
     PMULHUW xmm(reg), xmm(rm)                                           ; 66 0f e4 /r
      PMULHW xmm(reg), xmm(rm)                                           ; 66 0f e5 /r
   CVTTPD2DQ xmm(reg), xmm(rm)                                           ; 66 0f e6 /r
     MOVNTDQ xmm(rm), xmm(reg)                                           ; 66 0f e7 /r=m
      PSUBSB xmm(reg), xmm(rm)                                           ; 66 0f e8 /r
      PSUBSW xmm(reg), xmm(rm)                                           ; 66 0f e9 /r
      PMINSW xmm(reg), xmm(rm)                                           ; 66 0f ea /r
         POR xmm(reg), xmm(rm)                                           ; 66 0f eb /r
      PADDSB xmm(reg), xmm(rm)                                           ; 66 0f ec /r
      PADDSW xmm(reg), xmm(rm)                                           ; 66 0f ed /r
      PMAXSW xmm(reg), xmm(rm)                                           ; 66 0f ee /r
        PXOR xmm(reg), xmm(rm)                                           ; 66 0f ef /r
       PSLLW xmm(reg), xmm(rm)                                           ; 66 0f f1 /r
       PSLLD xmm(reg), xmm(rm)                                           ; 66 0f f2 /r
       PSLLQ xmm(reg), xmm(rm)                                           ; 66 0f f3 /r
     PMULUDQ xmm(reg), xmm(rm)                                           ; 66 0f f4 /r
     PMADDWD xmm(reg), xmm(rm)                                           ; 66 0f f5 /r
      PSADBW xmm(reg), xmm(rm)                                           ; 66 0f f6 /r
  MASKMOVDQU xmm(rm), xmm(reg)                                           ; 66 0f f7 /r
       PSUBB xmm(reg), xmm(rm)                                           ; 66 0f f8 /r
       PSUBW xmm(reg), xmm(rm)                                           ; 66 0f f9 /r
       PSUBD xmm(reg), xmm(rm)                                           ; 66 0f fa /r
       PSUBQ xmm(reg), xmm(rm)                                           ; 66 0f fb /r
       PADDB xmm(reg), xmm(rm)                                           ; 66 0f fc /r
       PADDW xmm(reg), xmm(rm)                                           ; 66 0f fd /r
       PADDD xmm(reg), xmm(rm)                                           ; 66 0f fe /r
        ADSZ                                                    ; prefix ; 67
        PUSH I                                                           ; 68 I=imm(uv)
        IMUL reg(uv), r/m(uv), I                                         ; 69 /r I=imm(iv)
        PUSH I                                                           ; 6a I=imm(i8)
        IMUL reg(uv), r/m(uv), I                                         ; 6b /r I=imm(i8)
         INS AL, u8 [SIV]                                                ; 6c
         INS Av, uv [SIV]                                                ; 6d
        OUTS u8 ES:[DIV], AL                                             ; 6e
        OUTS uv ES:[DIV], Av                                             ; 6f
          JO N                                                           ; 70 P=imm(i8); N=(IPV+P)
         JNO N                                                           ; 71 P=imm(i8); N=(IPV+P)
          JC N                                                           ; 72 P=imm(i8); N=(IPV+P)
         JNC N                                                           ; 73 P=imm(i8); N=(IPV+P)
          JZ N                                                           ; 74 P=imm(i8); N=(IPV+P)
         JNZ N                                                           ; 75 P=imm(i8); N=(IPV+P)
         JNA N                                                           ; 76 P=imm(i8); N=(IPV+P)
          JA N                                                           ; 77 P=imm(i8); N=(IPV+P)
          JS N                                                           ; 78 P=imm(i8); N=(IPV+P)
         JNS N                                                           ; 79 P=imm(i8); N=(IPV+P)
          JP N                                                           ; 7a P=imm(i8); N=(IPV+P)
         JNP N                                                           ; 7b P=imm(i8); N=(IPV+P)
          JL N                                                           ; 7c P=imm(i8); N=(IPV+P)
         JNL N                                                           ; 7d P=imm(i8); N=(IPV+P)
         JNG N                                                           ; 7e P=imm(i8); N=(IPV+P)
          JG N                                                           ; 7f P=imm(i8); N=(IPV+P)
         ADD r/m(u8), I                                                  ; 80 /0 I=imm(u8)
          OR r/m(u8), I                                                  ; 80 /1 I=imm(u8)
         ADC r/m(u8), I                                                  ; 80 /2 I=imm(u8)
         SBB r/m(u8), I                                                  ; 80 /3 I=imm(u8)
         AND r/m(u8), I                                                  ; 80 /4 I=imm(u8)
         SUB r/m(u8), I                                                  ; 80 /5 I=imm(u8)
         XOR r/m(u8), I                                                  ; 80 /6 I=imm(u8)
         CMP r/m(u8), I                                                  ; 80 /7 I=imm(u8)
         ADD r/m(uv), I                                                  ; 81 /0 I=imm(uv)
          OR r/m(uv), I                                                  ; 81 /1 I=imm(uv)
         ADC r/m(uv), I                                                  ; 81 /2 I=imm(uv)
         SBB r/m(uv), I                                                  ; 81 /3 I=imm(uv)
         AND r/m(uv), I                                                  ; 81 /4 I=imm(uv)
         SUB r/m(uv), I                                                  ; 81 /5 I=imm(uv)
         XOR r/m(uv), I                                                  ; 81 /6 I=imm(uv)
         CMP r/m(uv), I                                                  ; 81 /7 I=imm(uv)
         ADD r/m(u8), I                                                  ; 82 /0 I=imm(u8)
          OR r/m(u8), I                                                  ; 82 /1 I=imm(u8)
         ADC r/m(u8), I                                                  ; 82 /2 I=imm(u8)
         SBB r/m(u8), I                                                  ; 82 /3 I=imm(u8)
         AND r/m(u8), I                                                  ; 82 /4 I=imm(u8)
         SUB r/m(u8), I                                                  ; 82 /5 I=imm(u8)
         XOR r/m(u8), I                                                  ; 82 /6 I=imm(u8)
         CMP r/m(u8), I                                                  ; 82 /7 I=imm(u8)
         ADD r/m(uv), I                                                  ; 83 /0 I=imm(i8)
          OR r/m(uv), I                                                  ; 83 /1 I=imm(i8)
         ADC r/m(uv), I                                                  ; 83 /2 I=imm(i8)
         SBB r/m(uv), I                                                  ; 83 /3 I=imm(i8)
         AND r/m(uv), I                                                  ; 83 /4 I=imm(i8)
         SUB r/m(uv), I                                                  ; 83 /5 I=imm(i8)
         XOR r/m(uv), I                                                  ; 83 /6 I=imm(i8)
         CMP r/m(uv), I                                                  ; 83 /7 I=imm(i8)
        TEST reg(u8), r/m(u8)                                            ; 84 /r
        TEST reg(uv), r/m(uv)                                            ; 85 /r
        XCHG reg(u8), r/m(u8)                                            ; 86 /r
        XCHG reg(uv), r/m(uv)                                            ; 87 /r
         MOV r/m(u8), reg(u8)                                            ; 88 /r
         MOV r/m(uv), reg(uv)                                            ; 89 /r
         MOV reg(u8), r/m(u8)                                            ; 8a /r
         MOV reg(uv), r/m(uv)                                            ; 8b /r
         MOV reg(uv), segreg(uv)                                         ; 8c /r
         LEA reg(uv), r/m(uv)                                            ; 8d /r=m
         MOV segreg(uv), r/m(uv)                                         ; 8e /r
         POP r/m(uv)                                                     ; 8f /0
         NOP                                                             ; 90
        XCHG reg(uv), Av                                                 ; 90+reg; reg=1-7
         CBW                                                             ; 98
         CWD                                                             ; 99
        CALL P                                                           ; 9a P=imm(farptr)
        WAIT                                                    ; prefix ; 9b
       FCLEX                                                             ; 9b db e2
       FINIT                                                             ; 9b db e3
       PUSHF                                                             ; 9c
        POPF                                                             ; 9d
        SAHF                                                             ; 9e
        LAHF                                                             ; 9f
         MOV AL, u8 [A]                                                  ; a0 A=imm(uv)
         MOV Av, uv [A]                                                  ; a1 A=imm(uv)
         MOV u8 [A], AL                                                  ; a2 A=imm(uv)
         MOV uv [A], Av                                                  ; a3 A=imm(uv)
        MOVS u8 ES:[DIV], u8 [SIV]                                       ; a4
        MOVS uv ES:[DIV], uv [SIV]                                       ; a5
        CMPS u8 ES:[DIV], u8 [SIV]                                       ; a6
        CMPS uv ES:[DIV], uv [SIV]                                       ; a7
        TEST AL, I                                                       ; a8 I=imm(u8)
        TEST Av, I                                                       ; a9 I=imm(uv)
        STOS u8 ES:[DIV], AL                                             ; aa
        STOS uv ES:[DIV], Av                                             ; ab
        LODS AL, u8 [SIV]                                                ; ac
        LODS Av, uv [SIV]                                                ; ad
        SCAS AL, u8 ES:[DIV]                                             ; ae
        SCAS Av, uv ES:[DIV]                                             ; af
         MOV reg(u8), I                                                  ; b0+reg; reg=0-7
         MOV reg(uv), I                                                  ; b8+reg; reg=0-7
         ROL r/m(u8), I                                                  ; c0 /0 I=imm(u8)
         ROR r/m(u8), I                                                  ; c0 /1 I=imm(u8)
         RCL r/m(u8), I                                                  ; c0 /2 I=imm(u8)
         RCR r/m(u8), I                                                  ; c0 /3 I=imm(u8)
         SHL r/m(u8), I                                                  ; c0 /4 I=imm(u8)
         SHR r/m(u8), I                                                  ; c0 /5 I=imm(u8)
         SAR r/m(u8), I                                                  ; c0 /7 I=imm(u8)
         ROL r/m(uv), I                                                  ; c1 /0 I=imm(uv)
         ROR r/m(uv), I                                                  ; c1 /1 I=imm(uv)
         RCL r/m(uv), I                                                  ; c1 /2 I=imm(uv)
         RCR r/m(uv), I                                                  ; c1 /3 I=imm(uv)
         SHL r/m(uv), I                                                  ; c1 /4 I=imm(uv)
         SHR r/m(uv), I                                                  ; c1 /5 I=imm(uv)
         SAR r/m(uv), I                                                  ; c1 /7 I=imm(uv)
         RET C                                                           ; c2 C=imm(u16)
         RET                                                             ; c3
         LES reg(uv), r/m(farptr)                                        ; c4 /r=m
         LDS reg(uv), r/m(farptr)                                        ; c5 /r=m
         MOV r/m(u8), I                                                  ; c6 /0 I=imm(u8)
         MOV r/m(uv), I                                                  ; c7 /0 I=imm(uv)
       ENTER A, L                                                        ; c8 A=imm(u16) L=imm(u8)
       LEAVE                                                             ; c9
        RETF C                                                           ; ca C=imm(u16)
        RETF                                                             ; cb
         INT 3                                                           ; cc
         INT I                                                           ; cd I=imm(u8)
        INTO                                                             ; ce
        IRET                                                             ; cf
         ROL r/m(u8), 1                                                  ; d0 /0
         ROR r/m(u8), 1                                                  ; d0 /1
         RCL r/m(u8), 1                                                  ; d0 /2
         RCR r/m(u8), 1                                                  ; d0 /3
         SHL r/m(u8), 1                                                  ; d0 /4
         SHR r/m(u8), 1                                                  ; d0 /5
         SAR r/m(u8), 1                                                  ; d0 /7
         ROL r/m(uv), 1                                                  ; d1 /0
         ROR r/m(uv), 1                                                  ; d1 /1
         RCL r/m(uv), 1                                                  ; d1 /2
         RCR r/m(uv), 1                                                  ; d1 /3
         SHL r/m(uv), 1                                                  ; d1 /4
         SHR r/m(uv), 1                                                  ; d1 /5
         SAR r/m(uv), 1                                                  ; d1 /7
         ROL r/m(u8), CL                                                 ; d2 /0
         ROR r/m(u8), CL                                                 ; d2 /1
         RCL r/m(u8), CL                                                 ; d2 /2
         RCR r/m(u8), CL                                                 ; d2 /3
         SHL r/m(u8), CL                                                 ; d2 /4
         SHR r/m(u8), CL                                                 ; d2 /5
         SAR r/m(u8), CL                                                 ; d2 /7
         ROL r/m(uv), CL                                                 ; d3 /0
         ROR r/m(uv), CL                                                 ; d3 /1
         RCL r/m(uv), CL                                                 ; d3 /2
         RCR r/m(uv), CL                                                 ; d3 /3
         SHL r/m(uv), CL                                                 ; d3 /4
         SHR r/m(uv), CL                                                 ; d3 /5
         SAR r/m(uv), CL                                                 ; d3 /7
         AAM D                                                           ; d4 D=imm(u8)
         AAD D                                                           ; d5 D=imm(u8)
        SALC                                                             ; d6
        XLAT                                                             ; d7
        FADD st(0), r/m(f32)                                             ; d8 /0=m
        FMUL st(0), r/m(f32)                                             ; d8 /1=m
        FCOM st(0), r/m(f32)                                             ; d8 /2=m
       FCOMP st(0), r/m(f32)                                             ; d8 /3=m
        FSUB st(0), r/m(f32)                                             ; d8 /4=m
       FSUBR st(0), r/m(f32)                                             ; d8 /5=m
        FDIV st(0), r/m(f32)                                             ; d8 /6=m
       FDIVR st(0), r/m(f32)                                             ; d8 /7=m
        FADD st(0), st(i)                                                ; d8 c0+i; i=0-7
        FMUL st(0), st(i)                                                ; d8 c8+i; i=0-7
        FCOM st(0), st(i)                                                ; d8 d0+i; i=0-7
       FCOMP st(0), st(i)                                                ; d8 d8+i; i=0-7
        FSUB st(0), st(i)                                                ; d8 e0+i; i=0-7
       FSUBR st(0), st(i)                                                ; d8 e8+i; i=0-7
        FDIV st(0), st(i)                                                ; d8 f0+i; i=0-7
       FDIVR st(0), st(i)                                                ; d8 f8+i; i=0-7
         FLD st(0), r/m(f32)                                             ; d9 /0=m
         FST r/m(f32), st(0)                                             ; d9 /2=m
        FSTP r/m(f32), st(0)                                             ; d9 /3=m
      FLDENV r/m(f87env)                                                 ; d9 /4=m
       FLDCW r/m(u16)                                                    ; d9 /5=m
      FSTENV r/m(f87env)                                                 ; d9 /6=m
       FSTCW r/m(u16)                                                    ; d9 /7=m
         FLD st(0), st(i)                                                ; d9 c0+i; i=0-7
        FXCH st(0), st(i)                                                ; d9 c8+i; i=0-7
        FNOP                                                             ; d9 d0
        FCHS st(0), st(0)                                                ; d9 e0
        FABS st(0), st(0)                                                ; d9 e1
        FTST st(0)                                                       ; d9 e4
        FXAM st(0)                                                       ; d9 e5
        FLD1 st(0), 1                                                    ; d9 e8
      FLDL2T st(0), const("log2(10)")                                    ; d9 e9
      FLDL2E st(0), const("log2(e)")                                     ; d9 ea
       FLDPI st(0), const("pi")                                          ; d9 eb
      FLDLG2 st(0), const("log10(2)")                                    ; d9 ec
      FLDLN2 st(0), const("loge(2)")                                     ; d9 ed
        FLDZ st(0), 0                                                    ; d9 ee
       F2XM1 st(0), st(0)                                                ; d9 f0
       FYL2X st(0), st(0), st(1)                                         ; d9 f1
       FPTAN st(0), st(0)                                                ; d9 f2
      FPATAN st(1), st(0), st(1)                                         ; d9 f3
     FXTRACT st(0), st(0), st(1)                                         ; d9 f4
      FPREM1 st(0), st(0), st(1)                                         ; d9 f5
     FDECSTP                                                             ; d9 f6
     FINCSTP                                                             ; d9 f7
       FPREM st(0), st(0), st(1)                                         ; d9 f8
     FYL2XP1 st(0), st(0), st(1)                                         ; d9 f9
       FSQRT st(0), st(0)                                                ; d9 fa
     FSINCOS st(0), st(0)                                                ; d9 fb
     FRNDINT st(0), st(0)                                                ; d9 fc
      FSCALE st(0), st(0), st(1)                                         ; d9 fd
        FSIN st(0), st(0)                                                ; d9 fe
        FCOS st(0), st(0)                                                ; d9 ff
       FIADD st(0), r/m(i32)                                             ; da /0=m
       FIMUL st(0), r/m(i32)                                             ; da /1=m
       FICOM st(0), r/m(i32)                                             ; da /2=m
      FICOMP st(0), r/m(i32)                                             ; da /3=m
       FISUB st(0), r/m(i32)                                             ; da /4=m
      FISUBR st(0), r/m(i32)                                             ; da /5=m
       FIDIV st(0), r/m(i32)                                             ; da /6=m
      FIDIVR st(0), r/m(i32)                                             ; da /7=m
      FCMOVB st(0), st(i)                                                ; da c0+i; i=0-7
      FCMOVE st(0), st(i)                                                ; da c8+i; i=0-7
     FCMOVBE st(0), st(i)                                                ; da d0+i; i=0-7
      FCMOVU st(0), st(i)                                                ; da d8+i; i=0-7
     FUCOMPP st(0), st(1)                                                ; da e9
        FILD st(0), r/m(i32)                                             ; db /0=m
        FIST r/m(i32), st(0)                                             ; db /2=m
       FISTP r/m(i32), st(0)                                             ; db /3=m
         FLD st(0), r/m(f80)                                             ; db /5=m
        FSTP r/m(f80), st(0)                                             ; db /7=m
     FCMOVNB st(0), st(i)                                                ; db c0+i; i=0-7
     FCMOVNE st(0), st(i)                                                ; db c8+i; i=0-7
    FCMOVNBE st(0), st(i)                                                ; db d0+i; i=0-7
     FCMOVNU st(0), st(i)                                                ; db d8+i; i=0-7
        FENI                                                             ; db e0
       FDISI                                                             ; db e1
      FNCLEX                                                             ; db e2
      FNINIT                                                             ; db e3
      FSETPM                                                             ; db e4
      FUCOMI st(0), st(i)                                                ; db e8+i; i=0-7
       FCOMI st(0), st(i)                                                ; db f0+i; i=0-7
        FADD st(0), r/m(f64)                                             ; dc /0=m
        FMUL st(0), r/m(f64)                                             ; dc /1=m
        FCOM st(0), r/m(f64)                                             ; dc /2=m
       FCOMP st(0), r/m(f64)                                             ; dc /3=m
        FSUB st(0), r/m(f64)                                             ; dc /4=m
       FSUBR st(0), r/m(f64)                                             ; dc /5=m
        FDIV st(0), r/m(f64)                                             ; dc /6=m
       FDIVR st(0), r/m(f64)                                             ; dc /7=m
        FADD st(i), st(0)                                                ; dc c0+i; i=0-7
        FMUL st(i), st(0)                                                ; dc c8+i; i=0-7
        FSUB st(i), st(0)                                                ; dc e0+i; i=0-7
       FSUBR st(i), st(0)                                                ; dc e8+i; i=0-7
        FDIV st(i), st(0)                                                ; dc f0+i; i=0-7
       FDIVR st(i), st(0)                                                ; dc f8+i; i=0-7
         FLD st(0), r/m(f64)                                             ; dd /0=m
         FST r/m(f64), st(0)                                             ; dd /2=m
        FSTP r/m(f64), st(0)                                             ; dd /3=m
      FRSTOR r/m(f87state)                                               ; dd /4=m
       FSAVE r/m(f87state)                                               ; dd /6=m
       FSTSW r/m(u16)                                                    ; dd /7=m
       FFREE st(i)                                                       ; dd c0+i; i=0-7
         FST st(i), st(0)                                                ; dd d0+i; i=0-7
        FSTP st(i), st(0)                                                ; dd d8+i; i=0-7
       FUCOM st(0), st(i)                                                ; dd e0+rm
      FUCOMP st(0), st(i)                                                ; dd e8+rm
       FIADD st(0), r/m(i16)                                             ; de /0=m
       FIMUL st(0), r/m(i16)                                             ; de /1=m
       FICOM st(0), r/m(i16)                                             ; de /2=m
      FICOMP st(0), r/m(i16)                                             ; de /3=m
       FISUB st(0), r/m(i16)                                             ; de /4=m
      FISUBR st(0), r/m(i16)                                             ; de /5=m
       FIDIV st(0), r/m(i16)                                             ; de /6=m
      FIDIVR st(0), r/m(i16)                                             ; de /7=m
        FADD st(i), st(0)                                                ; de c0+i; i=0-7
        FMUL st(i), st(0)                                                ; de c8+i; i=0-7
      FCOMPP st(0), st(1)                                                ; de d9
        FSUB st(i), st(0)                                                ; de e0+i; i=0-7
       FSUBR st(i), st(0)                                                ; de e8+i; i=0-7
        FDIV st(i), st(0)                                                ; de f0+i; i=0-7
       FDIVR st(i), st(0)                                                ; de f8+i; i=0-7
        FILD st(0), r/m(i16)                                             ; df /0=m
        FIST r/m(i16), st(0)                                             ; df /2=m
       FISTP r/m(i16), st(0)                                             ; df /3=m
        FBLD st(0), r/m(fbcd)                                            ; df /4=m
        FILD st(0), r/m(i64)                                             ; df /5=m
       FBSTP r/m(fbcd), st(0)                                            ; df /6=m
       FISTP r/m(i64), st(0)                                             ; df /7=m
     FUCOMIP st(0), st(i)                                                ; df e8+i; i=0-7
      FCOMIP st(0), st(i)                                                ; df f0+i; i=0-7
      LOOPNZ N                                                           ; e0 P=imm(i8); N=(IPV+P)
       LOOPZ N                                                           ; e1 P=imm(i8); N=(IPV+P)
        LOOP N                                                           ; e2 P=imm(i8); N=(IPV+P)
        JCXZ N                                                           ; e3 P=imm(i8); N=(IPV+P)
          IN AL, P                                                       ; e4 P=imm(u8)
          IN Av, P                                                       ; e5 P=imm(u8)
         OUT P, AL                                                       ; e6 P=imm(u8)
         OUT P, Av                                                       ; e7 P=imm(u8)
        CALL N                                                           ; e8 P=imm(iv); N=(IPV+P)
         JMP N                                                           ; e9 P=imm(iv); N=(IPV+P)
         JMP P                                                           ; ea P=imm(farptr)
         JMP N                                                           ; eb P=imm(i8); N=(IPV+P)
          IN AL, DX                                                      ; ec
          IN Av, DX                                                      ; ed
         OUT DX, AL                                                      ; ee
         OUT DX, Av                                                      ; ef
        LOCK                                                    ; prefix ; f0
         INT 1                                                           ; f1
       REPNZ                                                    ; prefix ; f2
       MOVSD xmm(reg), xmm(rm)                                           ; f2 0f 10 /r
       MOVSD xmm(rm), xmm(reg)                                           ; f2 0f 11 /r
    CVTSI2SD xmm(reg), r/m(u32)                                          ; f2 0f 2a /r
   CVTTSD2SI reg(u32), xmm(rm)                                           ; f2 0f 2c /r
    CVTSD2SI reg(u32), xmm(rm)                                           ; f2 0f 2d /r
      SQRTSD xmm(reg), xmm(rm)                                           ; f2 0f 51 /r
       ADDSD xmm(reg), xmm(rm)                                           ; f2 0f 58 /r
       MULSD xmm(reg), xmm(rm)                                           ; f2 0f 59 /r
    CVTSD2SS xmm(reg), xmm(rm)                                           ; f2 0f 5a /r
       SUBSD xmm(reg), xmm(rm)                                           ; f2 0f 5c /r
       MINSD xmm(reg), xmm(rm)                                           ; f2 0f 5d /r
       DIVSD xmm(reg), xmm(rm)                                           ; f2 0f 5e /r
       MAXSD xmm(reg), xmm(rm)                                           ; f2 0f 5f /r
     PSHUFLW xmm(reg), xmm(rm), I                                        ; f2 0f 70 /r I=imm(u8)
       CMPSD xmm(reg), xmm(rm), I                                        ; f2 0f c2 /r I=imm(u8)
     MOVDQ2Q mm(rm), xmm(reg)                                            ; f2 0f d6 /r!m
    CVTPD2DQ xmm(reg), xmm(rm)                                           ; f2 0f e6 /r
        REPZ                                                    ; prefix ; f3
       MOVSS xmm(reg), xmm(rm)                                           ; f3 0f 10 /r
       MOVSS xmm(rm), xmm(reg)                                           ; f3 0f 11 /r
    CVTPI2SS xmm(reg), r/m(u32)                                          ; f3 0f 2a /r
   CVTTSS2SI reg(u32), xmm(rm)                                           ; f3 0f 2c /r
    CVTSS2SI reg(u32), xmm(rm)                                           ; f3 0f 2d /r
      SQRTSS xmm(reg), xmm(rm)                                           ; f3 0f 51 /r
     RSQRTSS xmm(reg), xmm(rm)                                           ; f3 0f 52 /r
       RCPSS xmm(reg), xmm(rm)                                           ; f3 0f 53 /r
       ADDSS xmm(reg), xmm(rm)                                           ; f3 0f 58 /r
       MULSS xmm(reg), xmm(rm)                                           ; f3 0f 59 /r
    CVTSS2SD xmm(reg), xmm(rm)                                           ; f3 0f 5a /r
   CVTTPS2DQ xmm(reg), xmm(rm)                                           ; f3 0f 5b /r
       SUBSS xmm(reg), xmm(rm)                                           ; f3 0f 5c /r
       MINSS xmm(reg), xmm(rm)                                           ; f3 0f 5d /r
       DIVSS xmm(reg), xmm(rm)                                           ; f3 0f 5e /r
       MAXSS xmm(reg), xmm(rm)                                           ; f3 0f 5f /r
      MOVDQU xmm(reg), xmm(rm)                                           ; f3 0f 6f /r
     PSHUFHW xmm(reg), xmm(rm), I                                        ; f3 0f 70 /r I=imm(u8)
        MOVQ xmm(reg), xmm(rm)                                           ; f3 0f 7e /r
      MOVDQU xmm(rm), xmm(reg)                                           ; f3 0f 7f /r
       CMPSS xmm(reg), xmm(rm), I                                        ; f3 0f c2 /r I=imm(u8)
     MOVQ2DQ xmm(rm), mm(reg)                                            ; f3 0f d6 /r!m
    CVTDQ2PD xmm(reg), xmm(rm)                                           ; f3 0f e6 /r
       PAUSE                                                             ; f3 90
         HLT                                                             ; f4
         CMC                                                             ; f5
        TEST r/m(u8), I                                                  ; f6 /0 I=imm(u8)
         NOT r/m(u8)                                                     ; f6 /2
         NEG r/m(u8)                                                     ; f6 /3
         MUL r/m(u8)                                                     ; f6 /4
        IMUL r/m(u8)                                                     ; f6 /5
         DIV r/m(u8)                                                     ; f6 /6
        IDIV r/m(u8)                                                     ; f6 /7
        TEST r/m(uv), I                                                  ; f7 /0 I=imm(uv)
         NOT r/m(uv)                                                     ; f7 /2
         NEG r/m(uv)                                                     ; f7 /3
         MUL r/m(uv)                                                     ; f7 /4
        IMUL r/m(uv)                                                     ; f7 /5
         DIV r/m(uv)                                                     ; f7 /6
        IDIV r/m(uv)                                                     ; f7 /7
         CLC                                                             ; f8
         STC                                                             ; f9
         CLI                                                             ; fa
         STI                                                             ; fb
         CLD                                                             ; fc
         STD                                                             ; fd
         INC r/m(u8)                                                     ; fe /0
         DEC r/m(u8)                                                     ; fe /1
         INC r/m(uv)                                                     ; ff /0
         DEC r/m(uv)                                                     ; ff /1
        CALL r/m(uv)                                                     ; ff /2
        CALL r/m(farptr)                                                 ; ff /3=m
         JMP r/m(uv)                                                     ; ff /4
         JMP r/m(farptr)                                                 ; ff /5=m
        PUSH r/m(uv)                                                     ; ff /6

Opcodes by name:
----------------
         AAA                                                             ; 37
         AAD D                                                           ; d5 D=imm(u8)
         AAM D                                                           ; d4 D=imm(u8)
         AAS                                                             ; 3f
         ADC r/m(u8), reg(u8)                                            ; 10 /r
         ADC r/m(uv), reg(uv)                                            ; 11 /r
         ADC reg(u8), r/m(u8)                                            ; 12 /r
         ADC reg(uv), r/m(uv)                                            ; 13 /r
         ADC AL, I                                                       ; 14 I=imm(u8)
         ADC Av, I                                                       ; 15 I=imm(uv)
         ADC r/m(u8), I                                                  ; 80 /2 I=imm(u8)
         ADC r/m(uv), I                                                  ; 81 /2 I=imm(uv)
         ADC r/m(u8), I                                                  ; 82 /2 I=imm(u8)
         ADC r/m(uv), I                                                  ; 83 /2 I=imm(i8)
         ADD r/m(u8), reg(u8)                                            ; 00 /r
         ADD r/m(uv), reg(uv)                                            ; 01 /r
         ADD reg(u8), r/m(u8)                                            ; 02 /r
         ADD reg(uv), r/m(uv)                                            ; 03 /r
         ADD AL, I                                                       ; 04 I=imm(u8)
         ADD Av, I                                                       ; 05 I=imm(uv)
         ADD r/m(u8), I                                                  ; 80 /0 I=imm(u8)
         ADD r/m(uv), I                                                  ; 81 /0 I=imm(uv)
         ADD r/m(u8), I                                                  ; 82 /0 I=imm(u8)
         ADD r/m(uv), I                                                  ; 83 /0 I=imm(i8)
       ADDPD xmm(reg), xmm(rm)                                           ; 66 0f 58 /r
       ADDPS xmm(reg), xmm(rm)                                           ; 0f 58 /r
       ADDSD xmm(reg), xmm(rm)                                           ; f2 0f 58 /r
       ADDSS xmm(reg), xmm(rm)                                           ; f3 0f 58 /r
        ADSZ                                                    ; prefix ; 67
         AND r/m(u8), reg(u8)                                            ; 20 /r
         AND r/m(uv), reg(uv)                                            ; 21 /r
         AND reg(u8), r/m(u8)                                            ; 22 /r
         AND reg(uv), r/m(uv)                                            ; 23 /r
         AND AL, I                                                       ; 24 I=imm(u8)
         AND Av, I                                                       ; 25 I=imm(uv)
         AND r/m(u8), I                                                  ; 80 /4 I=imm(u8)
         AND r/m(uv), I                                                  ; 81 /4 I=imm(uv)
         AND r/m(u8), I                                                  ; 82 /4 I=imm(u8)
         AND r/m(uv), I                                                  ; 83 /4 I=imm(i8)
      ANDNPD xmm(reg), xmm(rm)                                           ; 66 0f 55 /r
      ANDNPS xmm(reg), xmm(rm)                                           ; 0f 55 /r
       ANDPD xmm(reg), xmm(rm)                                           ; 66 0f 54 /r
       ANDPS xmm(reg), xmm(rm)                                           ; 0f 54 /r
        ARPL r/m(uv), reg(uv)                                            ; 63 /r
       BOUND reg(uv), r/m(uv)                                            ; 62 /r
         BSF reg(uv), r/m(uv)                                            ; 0f bc /r
         BSR reg(uv), r/m(uv)                                            ; 0f bd /r
       BSWAP reg(uv), reg(uv)                                            ; 0f c8+reg; reg=0-7
          BT r/m(uv), reg(uv)                                            ; 0f a3 /r
          BT r/m(uv), I                                                  ; 0f ba /4 I=imm(u8)
         BTC r/m(uv), I                                                  ; 0f ba /7 I=imm(u8)
         BTC r/m(uv), reg(uv)                                            ; 0f bb /r
         BTR r/m(uv), reg(uv)                                            ; 0f b3 /r
         BTR r/m(uv), I                                                  ; 0f ba /6 I=imm(u8)
         BTS r/m(uv), reg(uv)                                            ; 0f ab /r
         BTS r/m(uv), I                                                  ; 0f ba /5 I=imm(u8)
        CALL P                                                           ; 9a P=imm(farptr)
        CALL N                                                           ; e8 P=imm(iv); N=(IPV+P)
        CALL r/m(uv)                                                     ; ff /2
        CALL r/m(farptr)                                                 ; ff /3=m
         CBW                                                             ; 98
         CLC                                                             ; f8
         CLD                                                             ; fc
     CLFLUSH r/m(u8)                                                     ; 0f ae /7=m
         CLI                                                             ; fa
        CLTS                                                             ; 0f 06 /r
         CMC                                                             ; f5
       CMOVA reg(uv), r/m(uv)                                            ; 0f 47 /r
       CMOVC reg(uv), r/m(uv)                                            ; 0f 42 /r
       CMOVG reg(uv), r/m(uv)                                            ; 0f 4f /r
       CMOVL reg(uv), r/m(uv)                                            ; 0f 4c /r
      CMOVNA reg(uv), r/m(uv)                                            ; 0f 46 /r
      CMOVNC reg(uv), r/m(uv)                                            ; 0f 43 /r
      CMOVNG reg(uv), r/m(uv)                                            ; 0f 4e /r
      CMOVNL reg(uv), r/m(uv)                                            ; 0f 4d /r
      CMOVNO reg(uv), r/m(uv)                                            ; 0f 41 /r
      CMOVNP reg(uv), r/m(uv)                                            ; 0f 4b /r
      CMOVNS reg(uv), r/m(uv)                                            ; 0f 49 /r
      CMOVNZ reg(uv), r/m(uv)                                            ; 0f 45 /r
       CMOVO reg(uv), r/m(uv)                                            ; 0f 40 /r
       CMOVP reg(uv), r/m(uv)                                            ; 0f 4a /r
       CMOVS reg(uv), r/m(uv)                                            ; 0f 48 /r
       CMOVZ reg(uv), r/m(uv)                                            ; 0f 44 /r
         CMP r/m(u8), reg(u8)                                            ; 38 /r
         CMP r/m(uv), reg(uv)                                            ; 39 /r
         CMP reg(u8), r/m(u8)                                            ; 3a /r
         CMP reg(uv), r/m(uv)                                            ; 3b /r
         CMP AL, I                                                       ; 3c I=imm(u8)
         CMP Av, I                                                       ; 3d I=imm(uv)
         CMP r/m(u8), I                                                  ; 80 /7 I=imm(u8)
         CMP r/m(uv), I                                                  ; 81 /7 I=imm(uv)
         CMP r/m(u8), I                                                  ; 82 /7 I=imm(u8)
         CMP r/m(uv), I                                                  ; 83 /7 I=imm(i8)
       CMPPD xmm(reg), xmm(rm), I                                        ; 66 0f c2 /r I=imm(u8)
       CMPPS xmm(reg), xmm(rm), I                                        ; 0f c2 /r I=imm(u8)
        CMPS u8 ES:[DIV], u8 [SIV]                                       ; a6
        CMPS uv ES:[DIV], uv [SIV]                                       ; a7
       CMPSD xmm(reg), xmm(rm), I                                        ; f2 0f c2 /r I=imm(u8)
       CMPSS xmm(reg), xmm(rm), I                                        ; f3 0f c2 /r I=imm(u8)
     CMPXCHG r/m(u8), reg(u8)                                            ; 0f b0 /r
     CMPXCHG r/m(uv), reg(uv)                                            ; 0f b1 /r
   CMPXCHG8B r/m(u64)                                                    ; 0f c7 /1=m
      COMISD xmm(reg), xmm(rm)                                           ; 66 0f 2f /r
      COMISS xmm(reg), xmm(rm)                                           ; 0f 2f /r
       CPUID                                                             ; 0f a2
         CS:                                                    ; prefix ; 2e
    CVTDQ2PD xmm(reg), xmm(rm)                                           ; f3 0f e6 /r
    CVTDQ2PS xmm(reg), xmm(rm)                                           ; 0f 5b /r
    CVTPD2DQ xmm(reg), xmm(rm)                                           ; f2 0f e6 /r
    CVTPD2PI mm(reg), xmm(rm)                                            ; 66 0f 2d /r
    CVTPD2PS xmm(reg), xmm(rm)                                           ; 66 0f 5a /r
    CVTPI2PD xmm(reg), mm(rm)                                            ; 66 0f 2a /r
    CVTPI2PS xmm(reg), mm(rm)                                            ; 0f 2a /r
    CVTPI2SS xmm(reg), r/m(u32)                                          ; f3 0f 2a /r
    CVTPS2DQ xmm(reg), xmm(rm)                                           ; 66 0f 5b /r
    CVTPS2PD xmm(reg), xmm(rm)                                           ; 0f 5a /r
    CVTPS2PI mm(reg), xmm(rm)                                            ; 0f 2d /r
    CVTSD2SI reg(u32), xmm(rm)                                           ; f2 0f 2d /r
    CVTSD2SS xmm(reg), xmm(rm)                                           ; f2 0f 5a /r
    CVTSI2SD xmm(reg), r/m(u32)                                          ; f2 0f 2a /r
    CVTSS2SD xmm(reg), xmm(rm)                                           ; f3 0f 5a /r
    CVTSS2SI reg(u32), xmm(rm)                                           ; f3 0f 2d /r
   CVTTPD2DQ xmm(reg), xmm(rm)                                           ; 66 0f e6 /r
   CVTTPD2PI mm(reg), xmm(rm)                                            ; 66 0f 2c /r
   CVTTPS2DQ xmm(reg), xmm(rm)                                           ; f3 0f 5b /r
   CVTTPS2PI mm(reg), xmm(rm)                                            ; 0f 2c /r
   CVTTSD2SI reg(u32), xmm(rm)                                           ; f2 0f 2c /r
   CVTTSS2SI reg(u32), xmm(rm)                                           ; f3 0f 2c /r
         CWD                                                             ; 99
         DAA                                                             ; 27
         DAS                                                             ; 2f
         DEC reg(uv)                                                     ; 48+reg; reg=0-7
         DEC r/m(u8)                                                     ; fe /1
         DEC r/m(uv)                                                     ; ff /1
         DIV r/m(u8)                                                     ; f6 /6
         DIV r/m(uv)                                                     ; f7 /6
       DIVPD xmm(reg), xmm(rm)                                           ; 66 0f 5e /r
       DIVPS xmm(reg), xmm(rm)                                           ; 0f 5e /r
       DIVSD xmm(reg), xmm(rm)                                           ; f2 0f 5e /r
       DIVSS xmm(reg), xmm(rm)                                           ; f3 0f 5e /r
         DS:                                                    ; prefix ; 3e
        EMMS                                                             ; 0f 77
       ENTER A, L                                                        ; c8 A=imm(u16) L=imm(u8)
         ES:                                                    ; prefix ; 26
       F2XM1 st(0), st(0)                                                ; d9 f0
        FABS st(0), st(0)                                                ; d9 e1
        FADD st(0), r/m(f32)                                             ; d8 /0=m
        FADD st(0), st(i)                                                ; d8 c0+i; i=0-7
        FADD st(0), r/m(f64)                                             ; dc /0=m
        FADD st(i), st(0)                                                ; dc c0+i; i=0-7
        FADD st(i), st(0)                                                ; de c0+i; i=0-7
        FBLD st(0), r/m(fbcd)                                            ; df /4=m
       FBSTP r/m(fbcd), st(0)                                            ; df /6=m
        FCHS st(0), st(0)                                                ; d9 e0
       FCLEX                                                             ; 9b db e2
      FCMOVB st(0), st(i)                                                ; da c0+i; i=0-7
     FCMOVBE st(0), st(i)                                                ; da d0+i; i=0-7
      FCMOVE st(0), st(i)                                                ; da c8+i; i=0-7
     FCMOVNB st(0), st(i)                                                ; db c0+i; i=0-7
    FCMOVNBE st(0), st(i)                                                ; db d0+i; i=0-7
     FCMOVNE st(0), st(i)                                                ; db c8+i; i=0-7
     FCMOVNU st(0), st(i)                                                ; db d8+i; i=0-7
      FCMOVU st(0), st(i)                                                ; da d8+i; i=0-7
        FCOM st(0), r/m(f32)                                             ; d8 /2=m
        FCOM st(0), st(i)                                                ; d8 d0+i; i=0-7
        FCOM st(0), r/m(f64)                                             ; dc /2=m
       FCOMI st(0), st(i)                                                ; db f0+i; i=0-7
      FCOMIP st(0), st(i)                                                ; df f0+i; i=0-7
       FCOMP st(0), r/m(f32)                                             ; d8 /3=m
       FCOMP st(0), st(i)                                                ; d8 d8+i; i=0-7
       FCOMP st(0), r/m(f64)                                             ; dc /3=m
      FCOMPP st(0), st(1)                                                ; de d9
        FCOS st(0), st(0)                                                ; d9 ff
     FDECSTP                                                             ; d9 f6
       FDISI                                                             ; db e1
        FDIV st(0), r/m(f32)                                             ; d8 /6=m
        FDIV st(0), st(i)                                                ; d8 f0+i; i=0-7
        FDIV st(0), r/m(f64)                                             ; dc /6=m
        FDIV st(i), st(0)                                                ; dc f0+i; i=0-7
        FDIV st(i), st(0)                                                ; de f0+i; i=0-7
       FDIVR st(0), r/m(f32)                                             ; d8 /7=m
       FDIVR st(0), st(i)                                                ; d8 f8+i; i=0-7
       FDIVR st(0), r/m(f64)                                             ; dc /7=m
       FDIVR st(i), st(0)                                                ; dc f8+i; i=0-7
       FDIVR st(i), st(0)                                                ; de f8+i; i=0-7
       FEMMS                                                             ; 0f 0e
        FENI                                                             ; db e0
       FFREE st(i)                                                       ; dd c0+i; i=0-7
       FIADD st(0), r/m(i32)                                             ; da /0=m
       FIADD st(0), r/m(i16)                                             ; de /0=m
       FICOM st(0), r/m(i32)                                             ; da /2=m
       FICOM st(0), r/m(i16)                                             ; de /2=m
      FICOMP st(0), r/m(i32)                                             ; da /3=m
      FICOMP st(0), r/m(i16)                                             ; de /3=m
       FIDIV st(0), r/m(i32)                                             ; da /6=m
       FIDIV st(0), r/m(i16)                                             ; de /6=m
      FIDIVR st(0), r/m(i32)                                             ; da /7=m
      FIDIVR st(0), r/m(i16)                                             ; de /7=m
        FILD st(0), r/m(i32)                                             ; db /0=m
        FILD st(0), r/m(i16)                                             ; df /0=m
        FILD st(0), r/m(i64)                                             ; df /5=m
       FIMUL st(0), r/m(i32)                                             ; da /1=m
       FIMUL st(0), r/m(i16)                                             ; de /1=m
     FINCSTP                                                             ; d9 f7
       FINIT                                                             ; 9b db e3
        FIST r/m(i32), st(0)                                             ; db /2=m
        FIST r/m(i16), st(0)                                             ; df /2=m
       FISTP r/m(i32), st(0)                                             ; db /3=m
       FISTP r/m(i16), st(0)                                             ; df /3=m
       FISTP r/m(i64), st(0)                                             ; df /7=m
       FISUB st(0), r/m(i32)                                             ; da /4=m
       FISUB st(0), r/m(i16)                                             ; de /4=m
      FISUBR st(0), r/m(i32)                                             ; da /5=m
      FISUBR st(0), r/m(i16)                                             ; de /5=m
         FLD st(0), r/m(f32)                                             ; d9 /0=m
         FLD st(0), st(i)                                                ; d9 c0+i; i=0-7
         FLD st(0), r/m(f80)                                             ; db /5=m
         FLD st(0), r/m(f64)                                             ; dd /0=m
        FLD1 st(0), 1                                                    ; d9 e8
       FLDCW r/m(u16)                                                    ; d9 /5=m
      FLDENV r/m(f87env)                                                 ; d9 /4=m
      FLDL2E st(0), const("log2(e)")                                     ; d9 ea
      FLDL2T st(0), const("log2(10)")                                    ; d9 e9
      FLDLG2 st(0), const("log10(2)")                                    ; d9 ec
      FLDLN2 st(0), const("loge(2)")                                     ; d9 ed
       FLDPI st(0), const("pi")                                          ; d9 eb
        FLDZ st(0), 0                                                    ; d9 ee
        FMUL st(0), r/m(f32)                                             ; d8 /1=m
        FMUL st(0), st(i)                                                ; d8 c8+i; i=0-7
        FMUL st(0), r/m(f64)                                             ; dc /1=m
        FMUL st(i), st(0)                                                ; dc c8+i; i=0-7
        FMUL st(i), st(0)                                                ; de c8+i; i=0-7
      FNCLEX                                                             ; db e2
      FNINIT                                                             ; db e3
        FNOP                                                             ; d9 d0
      FPATAN st(1), st(0), st(1)                                         ; d9 f3
       FPREM st(0), st(0), st(1)                                         ; d9 f8
      FPREM1 st(0), st(0), st(1)                                         ; d9 f5
       FPTAN st(0), st(0)                                                ; d9 f2
     FRNDINT st(0), st(0)                                                ; d9 fc
      FRSTOR r/m(f87state)                                               ; dd /4=m
         FS:                                                    ; prefix ; 64
       FSAVE r/m(f87state)                                               ; dd /6=m
      FSCALE st(0), st(0), st(1)                                         ; d9 fd
      FSETPM                                                             ; db e4
        FSIN st(0), st(0)                                                ; d9 fe
     FSINCOS st(0), st(0)                                                ; d9 fb
       FSQRT st(0), st(0)                                                ; d9 fa
         FST r/m(f32), st(0)                                             ; d9 /2=m
         FST r/m(f64), st(0)                                             ; dd /2=m
         FST st(i), st(0)                                                ; dd d0+i; i=0-7
       FSTCW r/m(u16)                                                    ; d9 /7=m
      FSTENV r/m(f87env)                                                 ; d9 /6=m
        FSTP r/m(f32), st(0)                                             ; d9 /3=m
        FSTP r/m(f80), st(0)                                             ; db /7=m
        FSTP r/m(f64), st(0)                                             ; dd /3=m
        FSTP st(i), st(0)                                                ; dd d8+i; i=0-7
       FSTSW r/m(u16)                                                    ; dd /7=m
        FSUB st(0), r/m(f32)                                             ; d8 /4=m
        FSUB st(0), st(i)                                                ; d8 e0+i; i=0-7
        FSUB st(0), r/m(f64)                                             ; dc /4=m
        FSUB st(i), st(0)                                                ; dc e0+i; i=0-7
        FSUB st(i), st(0)                                                ; de e0+i; i=0-7
       FSUBR st(0), r/m(f32)                                             ; d8 /5=m
       FSUBR st(0), st(i)                                                ; d8 e8+i; i=0-7
       FSUBR st(0), r/m(f64)                                             ; dc /5=m
       FSUBR st(i), st(0)                                                ; dc e8+i; i=0-7
       FSUBR st(i), st(0)                                                ; de e8+i; i=0-7
        FTST st(0)                                                       ; d9 e4
       FUCOM st(0), st(i)                                                ; dd e0+rm
      FUCOMI st(0), st(i)                                                ; db e8+i; i=0-7
     FUCOMIP st(0), st(i)                                                ; df e8+i; i=0-7
      FUCOMP st(0), st(i)                                                ; dd e8+rm
     FUCOMPP st(0), st(1)                                                ; da e9
        FXAM st(0)                                                       ; d9 e5
        FXCH st(0), st(i)                                                ; d9 c8+i; i=0-7
     FXRSTOR r/m(f87state)                                               ; 0f ae /1=m
      FXSAVE r/m(f87state)                                               ; 0f ae /0=m
     FXTRACT st(0), st(0), st(1)                                         ; d9 f4
       FYL2X st(0), st(0), st(1)                                         ; d9 f1
     FYL2XP1 st(0), st(0), st(1)                                         ; d9 f9
         GS:                                                    ; prefix ; 65
         HLT                                                             ; f4
        IDIV r/m(u8)                                                     ; f6 /7
        IDIV r/m(uv)                                                     ; f7 /7
        IMUL reg(uv), r/m(uv), I                                         ; 69 /r I=imm(iv)
        IMUL reg(uv), r/m(uv), I                                         ; 6b /r I=imm(i8)
        IMUL r/m(u8)                                                     ; f6 /5
        IMUL r/m(uv)                                                     ; f7 /5
          IN AL, P                                                       ; e4 P=imm(u8)
          IN Av, P                                                       ; e5 P=imm(u8)
          IN AL, DX                                                      ; ec
          IN Av, DX                                                      ; ed
         INC reg(uv)                                                     ; 40+reg; reg=0-7
         INC r/m(u8)                                                     ; fe /0
         INC r/m(uv)                                                     ; ff /0
         INS AL, u8 [SIV]                                                ; 6c
         INS Av, uv [SIV]                                                ; 6d
         INT 3                                                           ; cc
         INT I                                                           ; cd I=imm(u8)
         INT 1                                                           ; f1
        INTO                                                             ; ce
        INVD                                                             ; 0f 08
      INVLPG r/m(uv)                                                     ; 0f 01 /7=m
        IRET                                                             ; cf
          JA N                                                           ; 0f 87 P=imm(iv); N=(IPV+P)
          JA N                                                           ; 77 P=imm(i8); N=(IPV+P)
          JC N                                                           ; 0f 82 P=imm(iv); N=(IPV+P)
          JC N                                                           ; 72 P=imm(i8); N=(IPV+P)
        JCXZ N                                                           ; e3 P=imm(i8); N=(IPV+P)
          JG N                                                           ; 0f 8f P=imm(iv); N=(IPV+P)
          JG N                                                           ; 7f P=imm(i8); N=(IPV+P)
          JL N                                                           ; 0f 8c P=imm(iv); N=(IPV+P)
          JL N                                                           ; 7c P=imm(i8); N=(IPV+P)
         JMP N                                                           ; e9 P=imm(iv); N=(IPV+P)
         JMP P                                                           ; ea P=imm(farptr)
         JMP N                                                           ; eb P=imm(i8); N=(IPV+P)
         JMP r/m(uv)                                                     ; ff /4
         JMP r/m(farptr)                                                 ; ff /5=m
         JNA N                                                           ; 0f 86 P=imm(iv); N=(IPV+P)
         JNA N                                                           ; 76 P=imm(i8); N=(IPV+P)
         JNC N                                                           ; 0f 83 P=imm(iv); N=(IPV+P)
         JNC N                                                           ; 73 P=imm(i8); N=(IPV+P)
         JNG N                                                           ; 0f 8e P=imm(iv); N=(IPV+P)
         JNG N                                                           ; 7e P=imm(i8); N=(IPV+P)
         JNL N                                                           ; 0f 8d P=imm(iv); N=(IPV+P)
         JNL N                                                           ; 7d P=imm(i8); N=(IPV+P)
         JNO N                                                           ; 0f 81 P=imm(iv); N=(IPV+P)
         JNO N                                                           ; 71 P=imm(i8); N=(IPV+P)
         JNP N                                                           ; 0f 8b P=imm(iv); N=(IPV+P)
         JNP N                                                           ; 7b P=imm(i8); N=(IPV+P)
         JNS N                                                           ; 0f 89 P=imm(iv); N=(IPV+P)
         JNS N                                                           ; 79 P=imm(i8); N=(IPV+P)
         JNZ N                                                           ; 0f 85 P=imm(iv); N=(IPV+P)
         JNZ N                                                           ; 75 P=imm(i8); N=(IPV+P)
          JO N                                                           ; 0f 80 P=imm(iv); N=(IPV+P)
          JO N                                                           ; 70 P=imm(i8); N=(IPV+P)
          JP N                                                           ; 0f 8a P=imm(iv); N=(IPV+P)
          JP N                                                           ; 7a P=imm(i8); N=(IPV+P)
          JS N                                                           ; 0f 88 P=imm(iv); N=(IPV+P)
          JS N                                                           ; 78 P=imm(i8); N=(IPV+P)
          JZ N                                                           ; 0f 84 P=imm(iv); N=(IPV+P)
          JZ N                                                           ; 74 P=imm(i8); N=(IPV+P)
        LAHF                                                             ; 9f
         LAR reg(uv), r/m(uv)                                            ; 0f 02 /r
     LDMXCSR r/m(u32)                                                    ; 0f ae /2=m
         LDS reg(uv), r/m(farptr)                                        ; c5 /r=m
         LEA reg(uv), r/m(uv)                                            ; 8d /r=m
       LEAVE                                                             ; c9
         LES reg(uv), r/m(farptr)                                        ; c4 /r=m
      LFENCE                                                             ; 0f ae e8
        LGDT r/m(u48)                                                    ; 0f 01 /2=m
        LIDT r/m(u48)                                                    ; 0f 01 /3=m
        LLDT r/m(uv)                                                     ; 0f 00 /2
        LMSW r/m(uv)                                                     ; 0f 01 /6
        LOCK                                                    ; prefix ; f0
        LODS AL, u8 [SIV]                                                ; ac
        LODS Av, uv [SIV]                                                ; ad
        LOOP N                                                           ; e2 P=imm(i8); N=(IPV+P)
      LOOPNZ N                                                           ; e0 P=imm(i8); N=(IPV+P)
       LOOPZ N                                                           ; e1 P=imm(i8); N=(IPV+P)
         LSL reg(uv), r/m(uv)                                            ; 0f 03 /r
         LTR r/m(uv)                                                     ; 0f 00 /3
  MASKMOVDQU xmm(rm), xmm(reg)                                           ; 66 0f f7 /r
    MASKMOVQ u64 [DIV], mm(reg), mm(rm)                                  ; 0f f7 /r
       MAXPD xmm(reg), xmm(rm)                                           ; 66 0f 5f /r
       MAXPS xmm(reg), xmm(rm)                                           ; 0f 5f /r
       MAXSD xmm(reg), xmm(rm)                                           ; f2 0f 5f /r
       MAXSS xmm(reg), xmm(rm)                                           ; f3 0f 5f /r
      MFENCE                                                             ; 0f ae f0
       MINPD xmm(reg), xmm(rm)                                           ; 66 0f 5d /r
       MINPS xmm(reg), xmm(rm)                                           ; 0f 5d /r
       MINSD xmm(reg), xmm(rm)                                           ; f2 0f 5d /r
       MINSS xmm(reg), xmm(rm)                                           ; f3 0f 5d /r
         MOV r/m(u32), cr(reg)                                           ; 0f 20 /r!m
         MOV r/m(u32), dr(reg)                                           ; 0f 21 /r!m
         MOV cr(reg), r/m(u32)                                           ; 0f 22 /r!m
         MOV dr(reg), r/m(u32)                                           ; 0f 23 /r!m
         MOV r/m(u32), tr(reg)                                           ; 0f 24 /r!m
         MOV tr(reg), r/m(u32)                                           ; 0f 26 /r!m
         MOV r/m(u8), reg(u8)                                            ; 88 /r
         MOV r/m(uv), reg(uv)                                            ; 89 /r
         MOV reg(u8), r/m(u8)                                            ; 8a /r
         MOV reg(uv), r/m(uv)                                            ; 8b /r
         MOV reg(uv), segreg(uv)                                         ; 8c /r
         MOV segreg(uv), r/m(uv)                                         ; 8e /r
         MOV AL, u8 [A]                                                  ; a0 A=imm(uv)
         MOV Av, uv [A]                                                  ; a1 A=imm(uv)
         MOV u8 [A], AL                                                  ; a2 A=imm(uv)
         MOV uv [A], Av                                                  ; a3 A=imm(uv)
         MOV reg(u8), I                                                  ; b0+reg; reg=0-7
         MOV reg(uv), I                                                  ; b8+reg; reg=0-7
         MOV r/m(u8), I                                                  ; c6 /0 I=imm(u8)
         MOV r/m(uv), I                                                  ; c7 /0 I=imm(uv)
      MOVAPD xmm(reg), xmm(rm)                                           ; 66 0f 28 /r
      MOVAPD xmm(rm), xmm(reg)                                           ; 66 0f 29 /r
      MOVAPS xmm(reg), xmm(rm)                                           ; 0f 28 /r
      MOVAPS xmm(rm), xmm(reg)                                           ; 0f 29 /r
        MOVD mm(reg), r/m(u32)                                           ; 0f 6e /r
        MOVD r/m(u32), mm(reg)                                           ; 0f 7e /r
        MOVD xmm(reg), r/m(u32)                                          ; 66 0f 6e /r
        MOVD r/m(u32), xmm(reg)                                          ; 66 0f 7e /r
     MOVDQ2Q mm(rm), xmm(reg)                                            ; f2 0f d6 /r!m
      MOVDQA xmm(reg), xmm(rm)                                           ; 66 0f 6f /r
      MOVDQA xmm(rm), xmm(reg)                                           ; 66 0f 7f /r
      MOVDQU xmm(reg), xmm(rm)                                           ; f3 0f 6f /r
      MOVDQU xmm(rm), xmm(reg)                                           ; f3 0f 7f /r
     MOVHLPS xmm(reg), xmm(rm)                                           ; 0f 12 /r!m
      MOVHPD xmm(reg), xmm(rm)                                           ; 66 0f 16 /r=m
      MOVHPD xmm(rm), xmm(reg)                                           ; 66 0f 17 /r=m
      MOVHPS xmm(reg), mm(rm)                                            ; 0f 16 /r=m
      MOVHPS mm(rm), xmm(reg)                                            ; 0f 17 /r=m
     MOVLHPS xmm(reg), xmm(rm)                                           ; 0f 16 /r!m
      MOVLPD xmm(reg), xmm(rm)                                           ; 66 0f 12 /r=m
      MOVLPD xmm(rm), xmm(reg)                                           ; 66 0f 13 /r=m
      MOVLPS xmm(reg), mm(rm)                                            ; 0f 12 /r=m
      MOVLPS mm(rm), xmm(reg)                                            ; 0f 13 /r=m
    MOVMSKPD r/m(u32), xmm(reg)                                          ; 66 0f 50 /r!m
    MOVMSKPS r/m(uv), xmm(reg)                                           ; 0f 50 /r
     MOVNTDQ xmm(rm), xmm(reg)                                           ; 66 0f e7 /r=m
      MOVNTI r/m(u32), reg(u32)                                          ; 0f c3 /r=m
     MOVNTPD xmm(rm), xmm(reg)                                           ; 66 0f 2b /r=m
     MOVNTPS xmm(rm), xmm(reg)                                           ; 0f 2b /r=m
      MOVNTQ mm(rm), mm(reg)                                             ; 0f e7 /r=m
        MOVQ mm(reg), r/m(u64)                                           ; 0f 6f /r
        MOVQ r/m(u64), mm(reg)                                           ; 0f 7f /r
        MOVQ xmm(rm), xmm(reg)                                           ; 66 0f d6 /r
        MOVQ xmm(reg), xmm(rm)                                           ; f3 0f 7e /r
     MOVQ2DQ xmm(rm), mm(reg)                                            ; f3 0f d6 /r!m
        MOVS u8 ES:[DIV], u8 [SIV]                                       ; a4
        MOVS uv ES:[DIV], uv [SIV]                                       ; a5
       MOVSD xmm(reg), xmm(rm)                                           ; f2 0f 10 /r
       MOVSD xmm(rm), xmm(reg)                                           ; f2 0f 11 /r
       MOVSS xmm(reg), xmm(rm)                                           ; f3 0f 10 /r
       MOVSS xmm(rm), xmm(reg)                                           ; f3 0f 11 /r
      MOVUPD xmm(reg), xmm(rm)                                           ; 66 0f 10 /r
      MOVUPD xmm(rm), xmm(reg)                                           ; 66 0f 11 /r
      MOVUPS xmm(reg), xmm(rm)                                           ; 0f 10 /r
      MOVUPS xmm(rm), xmm(reg)                                           ; 0f 11 /r
         MUL r/m(u8)                                                     ; f6 /4
         MUL r/m(uv)                                                     ; f7 /4
       MULPD xmm(reg), xmm(rm)                                           ; 66 0f 59 /r
       MULPS xmm(reg), xmm(rm)                                           ; 0f 59 /r
       MULSD xmm(reg), xmm(rm)                                           ; f2 0f 59 /r
       MULSS xmm(reg), xmm(rm)                                           ; f3 0f 59 /r
         NEG r/m(u8)                                                     ; f6 /3
         NEG r/m(uv)                                                     ; f7 /3
         NOP                                                             ; 0f 1f /0
         NOP                                                             ; 90
         NOT r/m(u8)                                                     ; f6 /2
         NOT r/m(uv)                                                     ; f7 /2
        OPSZ                                                    ; prefix ; 66
          OR r/m(u8), reg(u8)                                            ; 08 /r
          OR r/m(uv), reg(uv)                                            ; 09 /r
          OR reg(u8), r/m(u8)                                            ; 0a /r
          OR reg(uv), r/m(uv)                                            ; 0b /r
          OR AL, I                                                       ; 0c I=imm(u8)
          OR Av, I                                                       ; 0d I=imm(uv)
          OR r/m(u8), I                                                  ; 80 /1 I=imm(u8)
          OR r/m(uv), I                                                  ; 81 /1 I=imm(uv)
          OR r/m(u8), I                                                  ; 82 /1 I=imm(u8)
          OR r/m(uv), I                                                  ; 83 /1 I=imm(i8)
        ORPD xmm(reg), xmm(rm)                                           ; 66 0f 56 /r
        ORPS xmm(reg), xmm(rm)                                           ; 0f 56 /r
         OUT P, AL                                                       ; e6 P=imm(u8)
         OUT P, Av                                                       ; e7 P=imm(u8)
         OUT DX, AL                                                      ; ee
         OUT DX, Av                                                      ; ef
        OUTS u8 ES:[DIV], AL                                             ; 6e
        OUTS uv ES:[DIV], Av                                             ; 6f
    PACKSSDW mm(reg), mm(rm)                                             ; 0f 6b /r
    PACKSSDW xmm(reg), xmm(rm)                                           ; 66 0f 6b /r
    PACKSSWB mm(reg), mm(rm)                                             ; 0f 63 /r
    PACKSSWB xmm(reg), xmm(rm)                                           ; 66 0f 63 /r
    PACKUSWB mm(reg), mm(rm)                                             ; 0f 67 /r
    PACKUSWB xmm(reg), xmm(rm)                                           ; 66 0f 67 /r
       PADDB mm(reg), mm(rm)                                             ; 0f fc /r
       PADDB xmm(reg), xmm(rm)                                           ; 66 0f fc /r
       PADDD mm(reg), mm(rm)                                             ; 0f fe /r
       PADDD xmm(reg), xmm(rm)                                           ; 66 0f fe /r
       PADDQ mm(reg), mm(rm)                                             ; 0f d4 /r
       PADDQ xmm(reg), xmm(rm)                                           ; 66 0f d4 /r
      PADDSB mm(reg), mm(rm)                                             ; 0f ec /r
      PADDSB xmm(reg), xmm(rm)                                           ; 66 0f ec /r
      PADDSW mm(reg), mm(rm)                                             ; 0f ed /r
      PADDSW xmm(reg), xmm(rm)                                           ; 66 0f ed /r
     PADDUSB mm(reg), mm(rm)                                             ; 0f dc /r
     PADDUSB xmm(reg), xmm(rm)                                           ; 66 0f dc /r
     PADDUSW mm(reg), mm(rm)                                             ; 0f dd /r
     PADDUSW xmm(reg), xmm(rm)                                           ; 66 0f dd /r
       PADDW mm(reg), mm(rm)                                             ; 0f fd /r
       PADDW xmm(reg), xmm(rm)                                           ; 66 0f fd /r
        PAND mm(reg), mm(rm)                                             ; 0f db /r
        PAND xmm(reg), xmm(rm)                                           ; 66 0f db /r
       PANDN mm(reg), mm(rm)                                             ; 0f df /r
       PANDN xmm(reg), xmm(rm)                                           ; 66 0f df /r
       PAUSE                                                             ; f3 90
       PAVGB mm(reg), mm(rm)                                             ; 0f e0 /r
       PAVGB xmm(reg), xmm(rm)                                           ; 66 0f e0 /r
     PAVGUSB mm(reg), mm(rm)                                             ; 0f 0f /r bf
       PAVGW mm(reg), mm(rm)                                             ; 0f e3 /r
       PAVGW xmm(reg), xmm(rm)                                           ; 66 0f e3 /r
     PCMPEQB mm(reg), mm(rm)                                             ; 0f 74 /r
     PCMPEQB xmm(reg), xmm(rm)                                           ; 66 0f 74 /r
     PCMPEQD mm(reg), mm(rm)                                             ; 0f 76 /r
     PCMPEQD xmm(reg), xmm(rm)                                           ; 66 0f 76 /r
     PCMPEQW mm(reg), mm(rm)                                             ; 0f 75 /r
     PCMPEQW xmm(reg), xmm(rm)                                           ; 66 0f 75 /r
     PCMPGTB mm(reg), mm(rm)                                             ; 0f 64 /r
     PCMPGTB xmm(reg), xmm(rm)                                           ; 66 0f 64 /r
     PCMPGTD mm(reg), mm(rm)                                             ; 0f 66 /r
     PCMPGTD xmm(reg), xmm(rm)                                           ; 66 0f 66 /r
     PCMPGTW mm(reg), mm(rm)                                             ; 0f 65 /r
     PCMPGTW xmm(reg), xmm(rm)                                           ; 66 0f 65 /r
      PEXTRW reg(u32), mm(rm), I                                         ; 0f c5 /r!m I=imm(u8)
      PEXTRW reg(u32), xmm(rm), I                                        ; 66 0f c5 /r!m I=imm(u8)
       PF2ID mm(reg), mm(rm)                                             ; 0f 0f /r 1d
       PF2IW mm(reg), mm(rm)                                             ; 0f 0f /r 1c
       PFACC mm(reg), mm(rm)                                             ; 0f 0f /r ae
       PFADD mm(reg), mm(rm)                                             ; 0f 0f /r 9e
     PFCMPEQ mm(reg), mm(rm)                                             ; 0f 0f /r b0
     PFCMPGE mm(reg), mm(rm)                                             ; 0f 0f /r 90
     PFCMPGT mm(reg), mm(rm)                                             ; 0f 0f /r a0
       PFMAX mm(reg), mm(rm)                                             ; 0f 0f /r a4
       PFMIN mm(reg), mm(rm)                                             ; 0f 0f /r 94
       PFMUL mm(reg), mm(rm)                                             ; 0f 0f /r b4
      PFNACC mm(reg), mm(rm)                                             ; 0f 0f /r 8a
     PFPNACC mm(reg), mm(rm)                                             ; 0f 0f /r 8e
       PFRCP mm(reg), mm(rm)                                             ; 0f 0f /r 96
    PFRCPIT1 mm(reg), mm(rm)                                             ; 0f 0f /r a6
    PFRCPIT2 mm(reg), mm(rm)                                             ; 0f 0f /r b6
      PFRCPV mm(reg), mm(rm)                                             ; 0f 0f /r 86
    PFRSQIT1 mm(reg), mm(rm)                                             ; 0f 0f /r a7
     PFRSQRT mm(reg), mm(rm)                                             ; 0f 0f /r 97
    PFRSQRTV mm(reg), mm(rm)                                             ; 0f 0f /r 87
       PFSUB mm(reg), mm(rm)                                             ; 0f 0f /r 9a
      PFSUBR mm(reg), mm(rm)                                             ; 0f 0f /r aa
       PI2FD mm(reg), mm(rm)                                             ; 0f 0f /r 0d
       PI2FW mm(reg), mm(rm)                                             ; 0f 0f /r 0c
      PINSRW mm(reg), r/m(u16), I                                        ; 0f c4 /r I=imm(u8)
      PINSRW xmm(reg), r/m(u16), I                                       ; 66 0f c4 /r I=imm(u8)
     PMADDWD mm(reg), mm(rm)                                             ; 0f f5 /r
     PMADDWD xmm(reg), xmm(rm)                                           ; 66 0f f5 /r
      PMAXSW mm(reg), mm(rm)                                             ; 0f ee /r
      PMAXSW xmm(reg), xmm(rm)                                           ; 66 0f ee /r
      PMAXUB mm(reg), mm(rm)                                             ; 0f de /r
      PMAXUB xmm(reg), xmm(rm)                                           ; 66 0f de /r
      PMINSW mm(reg), mm(rm)                                             ; 0f ea /r
      PMINSW xmm(reg), xmm(rm)                                           ; 66 0f ea /r
      PMINUB mm(reg), mm(rm)                                             ; 0f da /r
      PMINUB xmm(reg), xmm(rm)                                           ; 66 0f da /r
    PMOVMSKB reg(u32), mm(rm)                                            ; 0f d7 /r!m
    PMOVMSKB reg(u32), xmm(rm)                                           ; 66 0f d7 /r!m
     PMULHRW mm(reg), mm(rm)                                             ; 0f 0f /r b7
     PMULHUW mm(reg), mm(rm)                                             ; 0f e4 /r
     PMULHUW xmm(reg), xmm(rm)                                           ; 66 0f e4 /r
      PMULHW mm(reg), mm(rm)                                             ; 0f e5 /r
      PMULHW xmm(reg), xmm(rm)                                           ; 66 0f e5 /r
      PMULLW mm(reg), mm(rm)                                             ; 0f d5 /r
      PMULLW xmm(reg), xmm(rm)                                           ; 66 0f d5 /r
     PMULUDQ mm(reg), mm(rm)                                             ; 0f f4 /r
     PMULUDQ xmm(reg), xmm(rm)                                           ; 66 0f f4 /r
         POP ES                                                          ; 07
         POP SS                                                          ; 17
         POP DS                                                          ; 1f
         POP reg(uv)                                                     ; 58+reg; reg=0-7
         POP r/m(uv)                                                     ; 8f /0
        POPA                                                             ; 61 /r
        POPF                                                             ; 9d
         POR mm(reg), mm(rm)                                             ; 0f eb /r
         POR xmm(reg), xmm(rm)                                           ; 66 0f eb /r
    PREFETCH r/m(u8)                                                     ; 0f 0d /0
 PREFETCHNTA mm(rm)                                                      ; 0f 18 /0=m
  PREFETCHT0 mm(rm)                                                      ; 0f 18 /1=m
  PREFETCHT1 mm(rm)                                                      ; 0f 18 /2=m
  PREFETCHT2 mm(rm)                                                      ; 0f 18 /3=m
   PREFETCHW r/m(u8)                                                     ; 0f 0d /1
 PREFETCHWT1 r/m(u8)                                                     ; 0f 0d /2
      PSADBW mm(reg), mm(rm)                                             ; 0f f6 /r
      PSADBW xmm(reg), xmm(rm)                                           ; 66 0f f6 /r
      PSHUFD xmm(reg), xmm(rm), I                                        ; 66 0f 70 /r I=imm(u8)
     PSHUFHW xmm(reg), xmm(rm), I                                        ; f3 0f 70 /r I=imm(u8)
     PSHUFLW xmm(reg), xmm(rm), I                                        ; f2 0f 70 /r I=imm(u8)
      PSHUFW mm(reg), mm(rm), I                                          ; 0f 70 /r I=imm(u8)
       PSLLD mm(reg), I                                                  ; 0f 72 /6 I=imm(u8)
       PSLLD mm(reg), mm(rm)                                             ; 0f f2 /r
       PSLLD xmm(reg), I                                                 ; 66 0f 72 /6 I=imm(u8)
       PSLLD xmm(reg), xmm(rm)                                           ; 66 0f f2 /r
      PSLLDQ xmm(reg), I                                                 ; 66 0f 73 /7 I=imm(u8)
       PSLLQ mm(reg), I                                                  ; 0f 73 /6 I=imm(u8)
       PSLLQ mm(reg), mm(rm)                                             ; 0f f3 /r
       PSLLQ xmm(reg), I                                                 ; 66 0f 73 /6 I=imm(u8)
       PSLLQ xmm(reg), xmm(rm)                                           ; 66 0f f3 /r
       PSLLW mm(reg), I                                                  ; 0f 71 /6 I=imm(u8)
       PSLLW mm(reg), mm(rm)                                             ; 0f f1 /r
       PSLLW xmm(reg), I                                                 ; 66 0f 71 /6 I=imm(u8)
       PSLLW xmm(reg), xmm(rm)                                           ; 66 0f f1 /r
       PSRAD mm(reg), I                                                  ; 0f 72 /4 I=imm(u8)
       PSRAD mm(reg), mm(rm)                                             ; 0f e2 /r
       PSRAD xmm(reg), I                                                 ; 66 0f 72 /4 I=imm(u8)
       PSRAD xmm(reg), xmm(rm)                                           ; 66 0f e2 /r
       PSRAW mm(reg), I                                                  ; 0f 71 /4 I=imm(u8)
       PSRAW mm(reg), mm(rm)                                             ; 0f e1 /r
       PSRAW xmm(reg), I                                                 ; 66 0f 71 /4 I=imm(u8)
       PSRAW xmm(reg), xmm(rm)                                           ; 66 0f e1 /r
       PSRLD mm(reg), I                                                  ; 0f 72 /2 I=imm(u8)
       PSRLD mm(reg), mm(rm)                                             ; 0f d2 /r
       PSRLD xmm(reg), I                                                 ; 66 0f 72 /2 I=imm(u8)
       PSRLD xmm(reg), xmm(rm)                                           ; 66 0f d2 /r
      PSRLDQ xmm(reg), I                                                 ; 66 0f 73 /3 I=imm(u8)
       PSRLQ mm(reg), I                                                  ; 0f 73 /2 I=imm(u8)
       PSRLQ mm(reg), mm(rm)                                             ; 0f d3 /r
       PSRLQ xmm(reg), I                                                 ; 66 0f 73 /2 I=imm(u8)
       PSRLQ xmm(reg), xmm(rm)                                           ; 66 0f d3 /r
       PSRLW mm(reg), I                                                  ; 0f 71 /2 I=imm(u8)
       PSRLW mm(reg), mm(rm)                                             ; 0f d1 /r
       PSRLW xmm(reg), I                                                 ; 66 0f 71 /2 I=imm(u8)
       PSRLW xmm(reg), xmm(rm)                                           ; 66 0f d1 /r
       PSUBB mm(reg), mm(rm)                                             ; 0f f8 /r
       PSUBB xmm(reg), xmm(rm)                                           ; 66 0f f8 /r
       PSUBD mm(reg), mm(rm)                                             ; 0f fa /r
       PSUBD xmm(reg), xmm(rm)                                           ; 66 0f fa /r
       PSUBQ mm(reg), mm(rm)                                             ; 0f fb /r
       PSUBQ xmm(reg), xmm(rm)                                           ; 66 0f fb /r
      PSUBSB mm(reg), mm(rm)                                             ; 0f e8 /r
      PSUBSB xmm(reg), xmm(rm)                                           ; 66 0f e8 /r
      PSUBSW mm(reg), mm(rm)                                             ; 0f e9 /r
      PSUBSW xmm(reg), xmm(rm)                                           ; 66 0f e9 /r
     PSUBUSB mm(reg), mm(rm)                                             ; 0f d8 /r
     PSUBUSB xmm(reg), xmm(rm)                                           ; 66 0f d8 /r
     PSUBUSW mm(reg), mm(rm)                                             ; 0f d9 /r
     PSUBUSW xmm(reg), xmm(rm)                                           ; 66 0f d9 /r
       PSUBW mm(reg), mm(rm)                                             ; 0f f9 /r
       PSUBW xmm(reg), xmm(rm)                                           ; 66 0f f9 /r
      PSWAPD mm(reg), mm(rm)                                             ; 0f 0f /r bb
   PUNPCKHBW mm(reg), mm(rm)                                             ; 0f 68 /r
   PUNPCKHBW xmm(reg), xmm(rm)                                           ; 66 0f 68 /r
   PUNPCKHDQ mm(reg), mm(rm)                                             ; 0f 6a /r
   PUNPCKHDQ xmm(reg), xmm(rm)                                           ; 66 0f 6a /r
  PUNPCKHQDQ xmm(reg), xmm(rm)                                           ; 66 0f 6d /r
   PUNPCKHWD mm(reg), mm(rm)                                             ; 0f 69 /r
   PUNPCKHWD xmm(reg), xmm(rm)                                           ; 66 0f 69 /r
   PUNPCKLBW mm(reg), mm(rm)                                             ; 0f 60 /r
   PUNPCKLBW xmm(reg), xmm(rm)                                           ; 66 0f 60 /r
   PUNPCKLDQ mm(reg), mm(rm)                                             ; 0f 62 /r
   PUNPCKLDQ xmm(reg), xmm(rm)                                           ; 66 0f 62 /r
  PUNPCKLQDQ xmm(reg), xmm(rm)                                           ; 66 0f 6c /r
   PUNPCKLWD mm(reg), mm(rm)                                             ; 0f 61 /r
   PUNPCKLWD xmm(reg), xmm(rm)                                           ; 66 0f 61 /r
        PUSH ES                                                          ; 06
        PUSH CS                                                          ; 0e
        PUSH SS                                                          ; 16
        PUSH DS                                                          ; 1e
        PUSH reg(uv)                                                     ; 50+reg; reg=0-7
        PUSH I                                                           ; 68 I=imm(uv)
        PUSH I                                                           ; 6a I=imm(i8)
        PUSH r/m(uv)                                                     ; ff /6
       PUSHA                                                             ; 60 /r
       PUSHF                                                             ; 9c
        PXOR mm(reg), mm(rm)                                             ; 0f ef /r
        PXOR xmm(reg), xmm(rm)                                           ; 66 0f ef /r
         RCL r/m(u8), I                                                  ; c0 /2 I=imm(u8)
         RCL r/m(uv), I                                                  ; c1 /2 I=imm(uv)
         RCL r/m(u8), 1                                                  ; d0 /2
         RCL r/m(uv), 1                                                  ; d1 /2
         RCL r/m(u8), CL                                                 ; d2 /2
         RCL r/m(uv), CL                                                 ; d3 /2
       RCPPS xmm(reg), xmm(rm)                                           ; 0f 53 /r
       RCPSS xmm(reg), xmm(rm)                                           ; f3 0f 53 /r
         RCR r/m(u8), I                                                  ; c0 /3 I=imm(u8)
         RCR r/m(uv), I                                                  ; c1 /3 I=imm(uv)
         RCR r/m(u8), 1                                                  ; d0 /3
         RCR r/m(uv), 1                                                  ; d1 /3
         RCR r/m(u8), CL                                                 ; d2 /3
         RCR r/m(uv), CL                                                 ; d3 /3
       RDMSR                                                             ; 0f 32
       RDPMC                                                             ; 0f 33
       RDTSC                                                             ; 0f 31
       REPNZ                                                    ; prefix ; f2
        REPZ                                                    ; prefix ; f3
         RET C                                                           ; c2 C=imm(u16)
         RET                                                             ; c3
        RETF C                                                           ; ca C=imm(u16)
        RETF                                                             ; cb
         ROL r/m(u8), I                                                  ; c0 /0 I=imm(u8)
         ROL r/m(uv), I                                                  ; c1 /0 I=imm(uv)
         ROL r/m(u8), 1                                                  ; d0 /0
         ROL r/m(uv), 1                                                  ; d1 /0
         ROL r/m(u8), CL                                                 ; d2 /0
         ROL r/m(uv), CL                                                 ; d3 /0
         ROR r/m(u8), I                                                  ; c0 /1 I=imm(u8)
         ROR r/m(uv), I                                                  ; c1 /1 I=imm(uv)
         ROR r/m(u8), 1                                                  ; d0 /1
         ROR r/m(uv), 1                                                  ; d1 /1
         ROR r/m(u8), CL                                                 ; d2 /1
         ROR r/m(uv), CL                                                 ; d3 /1
         RSM                                                             ; 0f aa
     RSQRTPS xmm(reg), xmm(rm)                                           ; 0f 52 /r
     RSQRTSS xmm(reg), xmm(rm)                                           ; f3 0f 52 /r
        SAHF                                                             ; 9e
        SALC                                                             ; d6
         SAR r/m(u8), I                                                  ; c0 /7 I=imm(u8)
         SAR r/m(uv), I                                                  ; c1 /7 I=imm(uv)
         SAR r/m(u8), 1                                                  ; d0 /7
         SAR r/m(uv), 1                                                  ; d1 /7
         SAR r/m(u8), CL                                                 ; d2 /7
         SAR r/m(uv), CL                                                 ; d3 /7
         SBB r/m(u8), reg(u8)                                            ; 18 /r
         SBB r/m(uv), reg(uv)                                            ; 19 /r
         SBB reg(u8), r/m(u8)                                            ; 1a /r
         SBB reg(uv), r/m(uv)                                            ; 1b /r
         SBB AL, I                                                       ; 1c I=imm(u8)
         SBB Av, I                                                       ; 1d I=imm(uv)
         SBB r/m(u8), I                                                  ; 80 /3 I=imm(u8)
         SBB r/m(uv), I                                                  ; 81 /3 I=imm(uv)
         SBB r/m(u8), I                                                  ; 82 /3 I=imm(u8)
         SBB r/m(uv), I                                                  ; 83 /3 I=imm(i8)
        SCAS AL, u8 ES:[DIV]                                             ; ae
        SCAS Av, uv ES:[DIV]                                             ; af
        SETA r/m(u8)                                                     ; 0f 97 /0
        SETC r/m(u8)                                                     ; 0f 92 /0
        SETG r/m(u8)                                                     ; 0f 9f /0
        SETL r/m(u8)                                                     ; 0f 9c /0
       SETNA r/m(u8)                                                     ; 0f 96 /0
       SETNC r/m(u8)                                                     ; 0f 93 /0
       SETNG r/m(u8)                                                     ; 0f 9e /0
       SETNL r/m(u8)                                                     ; 0f 9d /0
       SETNO r/m(u8)                                                     ; 0f 91 /0
       SETNP r/m(u8)                                                     ; 0f 9b /0
       SETNS r/m(u8)                                                     ; 0f 99 /0
       SETNZ r/m(u8)                                                     ; 0f 95 /0
        SETO r/m(u8)                                                     ; 0f 90 /0
        SETP r/m(u8)                                                     ; 0f 9a /0
        SETS r/m(u8)                                                     ; 0f 98 /0
        SETZ r/m(u8)                                                     ; 0f 94 /0
      SFENCE                                                             ; 0f ae f8
        SGDT r/m(u48)                                                    ; 0f 01 /0=m
         SHL r/m(u8), I                                                  ; c0 /4 I=imm(u8)
         SHL r/m(uv), I                                                  ; c1 /4 I=imm(uv)
         SHL r/m(u8), 1                                                  ; d0 /4
         SHL r/m(uv), 1                                                  ; d1 /4
         SHL r/m(u8), CL                                                 ; d2 /4
         SHL r/m(uv), CL                                                 ; d3 /4
         SHR r/m(u8), I                                                  ; c0 /5 I=imm(u8)
         SHR r/m(uv), I                                                  ; c1 /5 I=imm(uv)
         SHR r/m(u8), 1                                                  ; d0 /5
         SHR r/m(uv), 1                                                  ; d1 /5
         SHR r/m(u8), CL                                                 ; d2 /5
         SHR r/m(uv), CL                                                 ; d3 /5
      SHUFPD xmm(reg), xmm(rm), I                                        ; 66 0f c6 /r I=imm(u8)
      SHUFPS xmm(reg), xmm(rm), I                                        ; 0f c6 /r I=imm(u8)
        SIDT r/m(u48)                                                    ; 0f 01 /1=m
        SLDT r/m(uv)                                                     ; 0f 00 /0
        SMSW r/m(uv)                                                     ; 0f 01 /4
      SQRTPD xmm(reg), xmm(rm)                                           ; 66 0f 51 /r
      SQRTPS xmm(reg), xmm(rm)                                           ; 0f 51 /r
      SQRTSD xmm(reg), xmm(rm)                                           ; f2 0f 51 /r
      SQRTSS xmm(reg), xmm(rm)                                           ; f3 0f 51 /r
         SS:                                                    ; prefix ; 36
         STC                                                             ; f9
         STD                                                             ; fd
         STI                                                             ; fb
     STMXCSR r/m(u32)                                                    ; 0f ae /3=m
        STOS u8 ES:[DIV], AL                                             ; aa
        STOS uv ES:[DIV], Av                                             ; ab
         STR r/m(uv)                                                     ; 0f 00 /1
         SUB r/m(u8), reg(u8)                                            ; 28 /r
         SUB r/m(uv), reg(uv)                                            ; 29 /r
         SUB reg(u8), r/m(u8)                                            ; 2a /r
         SUB reg(uv), r/m(uv)                                            ; 2b /r
         SUB AL, I                                                       ; 2c I=imm(u8)
         SUB Av, I                                                       ; 2d I=imm(uv)
         SUB r/m(u8), I                                                  ; 80 /5 I=imm(u8)
         SUB r/m(uv), I                                                  ; 81 /5 I=imm(uv)
         SUB r/m(u8), I                                                  ; 82 /5 I=imm(u8)
         SUB r/m(uv), I                                                  ; 83 /5 I=imm(i8)
       SUBPD xmm(reg), xmm(rm)                                           ; 66 0f 5c /r
       SUBPS xmm(reg), xmm(rm)                                           ; 0f 5c /r
       SUBSD xmm(reg), xmm(rm)                                           ; f2 0f 5c /r
       SUBSS xmm(reg), xmm(rm)                                           ; f3 0f 5c /r
     SYSCALL                                                             ; 0f 05
    SYSENTER                                                             ; 0f 34
     SYSEXIT                                                             ; 0f 35
      SYSRET                                                             ; 0f 07
        TEST reg(u8), r/m(u8)                                            ; 84 /r
        TEST reg(uv), r/m(uv)                                            ; 85 /r
        TEST AL, I                                                       ; a8 I=imm(u8)
        TEST Av, I                                                       ; a9 I=imm(uv)
        TEST r/m(u8), I                                                  ; f6 /0 I=imm(u8)
        TEST r/m(uv), I                                                  ; f7 /0 I=imm(uv)
     UCOMISD xmm(reg), xmm(rm)                                           ; 66 0f 2e /r
     UCOMISS xmm(reg), xmm(rm)                                           ; 0f 2e /r
         UD2                                                             ; 0f 0b
         UD2                                                             ; 0f b9
    UNPCKHPD xmm(reg), xmm(rm)                                           ; 66 0f 15 /r
    UNPCKHPS xmm(reg), xmm(rm)                                           ; 0f 15 /r
    UNPCKLPD xmm(reg), xmm(rm)                                           ; 66 0f 14 /r
    UNPCKLPS xmm(reg), xmm(rm)                                           ; 0f 14 /r
        VERR r/m(uv)                                                     ; 0f 00 /4
        VERW r/m(uv)                                                     ; 0f 00 /5
        WAIT                                                    ; prefix ; 9b
      WBINVD                                                             ; 0f 09
       WRMSR                                                             ; 0f 30
        XADD r/m(u8), reg(u8)                                            ; 0f c0 /r
        XADD r/m(uv), reg(uv)                                            ; 0f c1 /r
        XCHG reg(u8), r/m(u8)                                            ; 86 /r
        XCHG reg(uv), r/m(uv)                                            ; 87 /r
        XCHG reg(uv), Av                                                 ; 90+reg; reg=1-7
        XLAT                                                             ; d7
         XOR r/m(u8), reg(u8)                                            ; 30 /r
         XOR r/m(uv), reg(uv)                                            ; 31 /r
         XOR reg(u8), r/m(u8)                                            ; 32 /r
         XOR reg(uv), r/m(uv)                                            ; 33 /r
         XOR AL, I                                                       ; 34 I=imm(u8)
         XOR Av, I                                                       ; 35 I=imm(uv)
         XOR r/m(u8), I                                                  ; 80 /6 I=imm(u8)
         XOR r/m(uv), I                                                  ; 81 /6 I=imm(uv)
         XOR r/m(u8), I                                                  ; 82 /6 I=imm(u8)
         XOR r/m(uv), I                                                  ; 83 /6 I=imm(i8)
       XORPD xmm(reg), xmm(rm)                                           ; 66 0f 57 /r
       XORPS xmm(reg), xmm(rm)                                           ; 0f 57 /r

Opcode coverage (single opcode):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix    Pm = mandatory prefix (modifies opcodes)

    0 1 2 3 4 5 6 7 8 9 a b c d e f 
   --------------------------------
  0|X X X X X X X X X X X X X X X M 
  1|X X X X X X X X X X X X X X X X 
  2|X X X X X X P X X X X X X X P X 
  3|X X X X X X P X X X X X X X P X 
  4|X X X X X X X X X X X X X X X X 
  5|X X X X X X X X X X X X X X X X 
  6|X X X X P P PmP X X X X X X X X 
  7|X X X X X X X X X X X X X X X X 
  8|R R R R X X X X X X X X X R X R 
  9|X X X X X X X X X X X PmX X X X 
  a|X X X X X X X X X X X X X X X X 
  b|X X X X X X X X X X X X X X X X 
  c|R R X X R R R R X X X X X X X X 
  d|R R R R X X X X R R R R R R R R 
  e|X X X X X X X X X X X X X X X X 
  f|P X PmPmX X R R X X X X X X R R 

Opcode coverage (0f ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix    Pm = mandatory prefix (modifies opcodes)

    0 1 2 3 4 5 6 7 8 9 a b c d e f 
   --------------------------------
  0|R R X X   X X X X X   X   R X M 
  1|X X R R X X R R R             R 
  2|R R R R R   R   X X X R X X X X 
  3|X X X X X X                     
  4|X X X X X X X X X X X X X X X X 
  5|X X X X X X X X X X X X X X X X 
  6|X X X X X X X X X X X X     X X 
  7|X R R R X X X X             X X 
  8|X X X X X X X X X X X X X X X X 
  9|R R R R R R R R R R R R R R R R 
  a|    X X             X X     R   
  b|X X   X           X R X X X     
  c|X X X R X R X R X X X X X X X X 
  d|  X X X X X   R X X X X X X X X 
  e|X X X X X X   R X X X X X X X X 
  f|  X X X X X X X X X X X X X X   

Opcode coverage (66 ... mandatory prefix):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix    Pm = mandatory prefix (modifies opcodes)

    0 1 2 3 4 5 6 7 8 9 a b c d e f 
   --------------------------------
  0|                              M 
  1|                                
  2|                                
  3|                                
  4|                                
  5|                                
  6|                                
  7|                                
  8|                                
  9|                                
  a|                                
  b|                                
  c|                                
  d|                                
  e|                                
  f|                                

Opcode coverage (9b ... mandatory prefix):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix    Pm = mandatory prefix (modifies opcodes)

    0 1 2 3 4 5 6 7 8 9 a b c d e f 
   --------------------------------
  0|                                
  1|                                
  2|                                
  3|                                
  4|                                
  5|                                
  6|                                
  7|                                
  8|                                
  9|                                
  a|                                
  b|                                
  c|                                
  d|                      R         
  e|                                
  f|                                

Opcode coverage (f2 ... mandatory prefix):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix    Pm = mandatory prefix (modifies opcodes)

    0 1 2 3 4 5 6 7 8 9 a b c d e f 
   --------------------------------
  0|                              M 
  1|                                
  2|                                
  3|                                
  4|                                
  5|                                
  6|                                
  7|                                
  8|                                
  9|                                
  a|                                
  b|                                
  c|                                
  d|                                
  e|                                
  f|                                

Opcode coverage (f3 ... mandatory prefix):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix    Pm = mandatory prefix (modifies opcodes)

    0 1 2 3 4 5 6 7 8 9 a b c d e f 
   --------------------------------
  0|                              M 
  1|                                
  2|                                
  3|                                
  4|                                
  5|                                
  6|                                
  7|                                
  8|                                
  9|X                               
  a|                                
  b|                                
  c|                                
  d|                                
  e|                                
  f|                                

Opcode coverage (0f 0f ... with mod/reg/rm before last byte):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix    Pm = mandatory prefix (modifies opcodes)

    0 1 2 3 4 5 6 7 8 9 a b c d e f 
   --------------------------------
  0|                        X X     
  1|                        X X     
  2|                                
  3|                                
  4|                                
  5|                                
  6|                                
  7|                                
  8|            X X     X       X   
  9|X       X   X X     X       X   
  a|X       X   X X     X       X   
  b|X       X   X X       X       X 
  c|                                
  d|                                
  e|                                
  f|                                

Opcode coverage (66 0f ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix    Pm = mandatory prefix (modifies opcodes)

    0 1 2 3 4 5 6 7 8 9 a b c d e f 
   --------------------------------
  0|                                
  1|X X R R X X R R                 
  2|                X X X R X X X X 
  3|                                
  4|                                
  5|R X     X X X X X X X X X X X X 
  6|X X X X X X X X X X X X X X X X 
  7|X R R R X X X               X X 
  8|                                
  9|                                
  a|                                
  b|                                
  c|    X   X R X                   
  d|  X X X X X X R X X X X X X X X 
  e|X X X X X X X R X X X X X X X X 
  f|  X X X X X X X X X X X X X X   

Opcode coverage (f2 0f ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix    Pm = mandatory prefix (modifies opcodes)

    0 1 2 3 4 5 6 7 8 9 a b c d e f 
   --------------------------------
  0|                                
  1|X X                             
  2|                    X   X X     
  3|                                
  4|                                
  5|  X             X X X   X X X X 
  6|                                
  7|X                               
  8|                                
  9|                                
  a|                                
  b|                                
  c|    X                           
  d|            R                   
  e|            X                   
  f|                                

Opcode coverage (f3 0f ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix    Pm = mandatory prefix (modifies opcodes)

    0 1 2 3 4 5 6 7 8 9 a b c d e f 
   --------------------------------
  0|                                
  1|X X                             
  2|                    X   X X     
  3|                                
  4|                                
  5|  X X X         X X X X X X X X 
  6|                              X 
  7|X                           X X 
  8|                                
  9|                                
  a|                                
  b|                                
  c|    X                           
  d|            R                   
  e|            X                   
  f|                                

Opcode coverage mod/reg/rm (80 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (81 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (82 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (83 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (8d ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (8f ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (c0 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|                 reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|                 reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|                 reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|                 reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (c1 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|                 reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|                 reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|                 reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|                 reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (c4 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (c5 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (c6 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (c7 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (d0 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|                 reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|                 reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|                 reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|                 reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (d1 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|                 reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|                 reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|                 reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|                 reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (d2 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|                 reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|                 reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|                 reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|                 reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (d3 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|                 reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|                 reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|                 reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|                 reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (d8 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (d9 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X                reg=2
 d8|                 reg=3
 e0|X X     X X      reg=4
 e8|X X X X X X X    reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (da ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|                 reg=4
 e8|  X              reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (db ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|                 reg=4
 28|X X X X X X X X  reg=5
 30|                 reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|                 reg=4
 68|X X X X X X X X  reg=5
 70|                 reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|                 reg=4
 a8|X X X X X X X X  reg=5
 b0|                 reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X        reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (dc ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (dd ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|                 reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|                 reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|                 reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (de ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|                 reg=2
 d8|  X              reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (df ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (f6 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (f7 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (fe ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (ff ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|                 reg=3
 e0|X X X X X X X X  reg=4
 e8|                 reg=5
 f0|X X X X X X X X  reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 00 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 01 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|                 reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|                 reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|                 reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|X X X X X X X X  reg=4
 e8|                 reg=5
 f0|X X X X X X X X  reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 0d ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 12 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (0f 13 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 16 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (0f 17 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 18 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 1f ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 20 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (0f 21 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (0f 22 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (0f 23 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (0f 24 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (0f 26 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (0f 2b ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 71 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|X X X X X X X X  reg=2
 18|                 reg=3
 20|X X X X X X X X  reg=4
 28|                 reg=5
 30|X X X X X X X X  reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|X X X X X X X X  reg=2
 58|                 reg=3
 60|X X X X X X X X  reg=4
 68|                 reg=5
 70|X X X X X X X X  reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|X X X X X X X X  reg=2
 98|                 reg=3
 a0|X X X X X X X X  reg=4
 a8|                 reg=5
 b0|X X X X X X X X  reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|X X X X X X X X  reg=2
 d8|                 reg=3
 e0|X X X X X X X X  reg=4
 e8|                 reg=5
 f0|X X X X X X X X  reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 72 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|X X X X X X X X  reg=2
 18|                 reg=3
 20|X X X X X X X X  reg=4
 28|                 reg=5
 30|X X X X X X X X  reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|X X X X X X X X  reg=2
 58|                 reg=3
 60|X X X X X X X X  reg=4
 68|                 reg=5
 70|X X X X X X X X  reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|X X X X X X X X  reg=2
 98|                 reg=3
 a0|X X X X X X X X  reg=4
 a8|                 reg=5
 b0|X X X X X X X X  reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|X X X X X X X X  reg=2
 d8|                 reg=3
 e0|X X X X X X X X  reg=4
 e8|                 reg=5
 f0|X X X X X X X X  reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 73 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|X X X X X X X X  reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|X X X X X X X X  reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|X X X X X X X X  reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|X X X X X X X X  reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|X X X X X X X X  reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|X X X X X X X X  reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|X X X X X X X X  reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|X X X X X X X X  reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 90 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 91 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 92 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 93 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 94 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 95 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 96 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 97 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 98 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 99 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 9a ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 9b ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 9c ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 9d ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 9e ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f 9f ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f ae ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|X                reg=5
 f0|X                reg=6
 f8|X                reg=7


Opcode coverage mod/reg/rm (0f ba ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (0f c3 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f c5 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (0f c7 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|X X X X X X X X  reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|X X X X X X X X  reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|X X X X X X X X  reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (0f d7 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (0f e7 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (9b db ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|    X X          reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (66 0f 12 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (66 0f 13 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (66 0f 16 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (66 0f 17 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (66 0f 2b ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (66 0f 50 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (66 0f 71 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|X X X X X X X X  reg=2
 18|                 reg=3
 20|X X X X X X X X  reg=4
 28|                 reg=5
 30|X X X X X X X X  reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|X X X X X X X X  reg=2
 58|                 reg=3
 60|X X X X X X X X  reg=4
 68|                 reg=5
 70|X X X X X X X X  reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|X X X X X X X X  reg=2
 98|                 reg=3
 a0|X X X X X X X X  reg=4
 a8|                 reg=5
 b0|X X X X X X X X  reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|X X X X X X X X  reg=2
 d8|                 reg=3
 e0|X X X X X X X X  reg=4
 e8|                 reg=5
 f0|X X X X X X X X  reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (66 0f 72 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|X X X X X X X X  reg=2
 18|                 reg=3
 20|X X X X X X X X  reg=4
 28|                 reg=5
 30|X X X X X X X X  reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|X X X X X X X X  reg=2
 58|                 reg=3
 60|X X X X X X X X  reg=4
 68|                 reg=5
 70|X X X X X X X X  reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|X X X X X X X X  reg=2
 98|                 reg=3
 a0|X X X X X X X X  reg=4
 a8|                 reg=5
 b0|X X X X X X X X  reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|X X X X X X X X  reg=2
 d8|                 reg=3
 e0|X X X X X X X X  reg=4
 e8|                 reg=5
 f0|X X X X X X X X  reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (66 0f 73 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|                 reg=4
 28|                 reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|                 reg=4
 68|                 reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (66 0f c5 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (66 0f d7 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (66 0f e7 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|X X X X X X X X  reg=0
 08|X X X X X X X X  reg=1
 10|X X X X X X X X  reg=2
 18|X X X X X X X X  reg=3
 20|X X X X X X X X  reg=4
 28|X X X X X X X X  reg=5
 30|X X X X X X X X  reg=6
 38|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|X X X X X X X X  reg=0
 48|X X X X X X X X  reg=1
 50|X X X X X X X X  reg=2
 58|X X X X X X X X  reg=3
 60|X X X X X X X X  reg=4
 68|X X X X X X X X  reg=5
 70|X X X X X X X X  reg=6
 78|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|X X X X X X X X  reg=0
 88|X X X X X X X X  reg=1
 90|X X X X X X X X  reg=2
 98|X X X X X X X X  reg=3
 a0|X X X X X X X X  reg=4
 a8|X X X X X X X X  reg=5
 b0|X X X X X X X X  reg=6
 b8|X X X X X X X X  reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|                 reg=0
 c8|                 reg=1
 d0|                 reg=2
 d8|                 reg=3
 e0|                 reg=4
 e8|                 reg=5
 f0|                 reg=6
 f8|                 reg=7


Opcode coverage mod/reg/rm (f2 0f d6 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


Opcode coverage mod/reg/rm (f3 0f d6 ...):
------------------------------
X = coverage  O = overlap(!)  M = multi-byte  R = group by mod/reg/rm
P = prefix

    0 1 2 3 4 5 6 7  rm with mod==0
   ----------------
 00|                 reg=0
 08|                 reg=1
 10|                 reg=2
 18|                 reg=3
 20|                 reg=4
 28|                 reg=5
 30|                 reg=6
 38|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==1
   ----------------
 40|                 reg=0
 48|                 reg=1
 50|                 reg=2
 58|                 reg=3
 60|                 reg=4
 68|                 reg=5
 70|                 reg=6
 78|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==2
   ----------------
 80|                 reg=0
 88|                 reg=1
 90|                 reg=2
 98|                 reg=3
 a0|                 reg=4
 a8|                 reg=5
 b0|                 reg=6
 b8|                 reg=7

    0 1 2 3 4 5 6 7  rm with mod==3
   ----------------
 c0|X X X X X X X X  reg=0
 c8|X X X X X X X X  reg=1
 d0|X X X X X X X X  reg=2
 d8|X X X X X X X X  reg=3
 e0|X X X X X X X X  reg=4
 e8|X X X X X X X X  reg=5
 f0|X X X X X X X X  reg=6
 f8|X X X X X X X X  reg=7


